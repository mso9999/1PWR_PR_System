{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red21\green98\blue39;\red246\green247\blue249;\red46\green49\blue51;
\red20\green67\blue174;\red24\green25\blue27;\red186\green6\blue115;\red162\green0\blue16;\red77\green80\blue85;
\red18\green115\blue126;}
{\*\expandedcolortbl;;\cssrgb\c7451\c45098\c20000;\cssrgb\c97255\c97647\c98039;\cssrgb\c23529\c25098\c26275;
\cssrgb\c9412\c35294\c73725;\cssrgb\c12549\c12941\c14118;\cssrgb\c78824\c15294\c52549;\cssrgb\c70196\c7843\c7059;\cssrgb\c37255\c38824\c40784;
\cssrgb\c3529\c52157\c56863;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Dashboard.gs\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 1PWR Procurement System - Dashboard Backend\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Version: 2.3\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Last Updated: 2024-11-19\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Purpose:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Provides server-side functionality for the procurement dashboard, handling data\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * retrieval, organization filtering, and status-based presentation of Purchase\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Requisitions (PRs) and Purchase Orders (POs). Supports a grid-based view of PRs\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * and POs organized by their current status categories. Additionally, incorporates\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * role-based permissions to control user capabilities within the dashboard.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Core Functions:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 1. Data Retrieval and Organization:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Fetches PR and PO data from the Master Log sheet.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Filters data by organization (1PWR LESOTHO/SMP/PUECO).\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Groups PRs and POs by status categories.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Calculates status counts and system-wide metrics.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 2. Status Categories Managed:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - PRs:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - Submitted: New PRs awaiting processing.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - In Queue: PRs under active processing.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - Ordered: PRs that have been ordered.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - Completed: Fully processed PRs.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - R&R: PRs requiring revision and resubmission.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - Rejected: Declined PRs.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - Canceled: Terminated PRs.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - POs:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - PO Pending Approval\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - PO Approved\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - PO Ordered\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - Completed\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - Rejected\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *      - Canceled\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 3. Role-Based Permissions:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Determines user permissions based on roles.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Controls actions such as submitting PRs, updating statuses, approving requests, and viewing financial data.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Dependencies:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Code.gs: System configuration and column definitions (CONFIG, COL constants).\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - StatusWorkflow.gs: Status management and validation.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - NotificationSystem.gs: Email notifications.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - PRView.gs: Individual PR view functionality.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - AuthService.gs: User authentication and authorization.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Sheet Structure Dependencies:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ----------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Master Log Tab:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - PR Number (COL.PR_NUMBER)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - PO Number (COL.PO_NUMBER)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Status (COL.PR_STATUS / COL.PO_STATUS)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Organization (COL.ORGANIZATION)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Description (COL.DESCRIPTION)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Timestamp (COL.TIMESTAMP)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Requestor (COL.REQUESTOR_NAME)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Additional tracking fields as defined in COL constant.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Data Return Structure:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ---------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   success: boolean,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   data: \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     countsByStatus: \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Submitted': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'In Queue': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Ordered': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Completed': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'R&R': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Rejected': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Canceled': number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     \},\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     prs: \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Submitted': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'In Queue': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Ordered': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Completed': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'R&R': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Rejected': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Canceled': Array<PRData>\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     \},\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     metrics: \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       totalPRs: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       urgentPRs: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       avgDaysOpen: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       overduePRs: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       quotesRequired: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       adjudicationRequired: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       customsClearanceRequired: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       completionRate: number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     \},\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     permissions: \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       canSubmitPR: boolean,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       canUpdateStatus: boolean,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       canApprove: boolean,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       canViewFinance: boolean\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   \},\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   timestamp: string (ISO date)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Integration Points:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Called by DashboardWeb.html for initial load and refresh.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Supports organization filtering from UI.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Provides data for PR view navigation.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Integrates with status workflow system.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Utilizes authentication service for role-based permissions.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Error Handling:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ---------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Returns structured error responses.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Logs errors for debugging.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Maintains data integrity during filtering.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Usage:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Called from client-side via google.script.run:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * google.script.run\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   .withSuccessHandler(handleSuccess)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   .withFailureHandler(handleError)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   .getDashboardData(organization);\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * getDashboardData\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Retrieves and processes PR/PO data for the procurement dashboard, filtering by organization\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * and computing metrics. Includes user permissions based on roles in Requestor List.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} organization - Optional organization filter (e.g., '1PWR LESOTHO', 'SMP', 'PUECO')\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} Dashboard data object with structure:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   success: boolean,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   data: \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     countsByStatus: \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Submitted': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'In Queue': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Ordered': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Completed': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'R&R': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Rejected': number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Canceled': number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     \},\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     prs: \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Submitted': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'In Queue': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Ordered': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Completed': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'R&R': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Rejected': Array<PRData>,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       'Canceled': Array<PRData>\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     \},\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     metrics: \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       totalPRs: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       urgentPRs: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       avgDaysOpen: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       overduePRs: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       quotesRequired: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       adjudicationRequired: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       customsClearanceRequired: number,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       completionRate: number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     \},\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     permissions: \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       canSubmitPR: boolean,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       canUpdateStatus: boolean,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       canApprove: boolean,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *       canViewFinance: boolean\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *     \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   \},\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   timestamp: string // ISO date string\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Dependencies:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - getCurrentUser(): Gets authenticated user info\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - isAuthorized(user, role): Checks user role permissions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - parseLineItems(row): Processes line items from row data\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - calculateDaysOpen(timestamp): Calculates days PR has been open\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - calculateDaysOverdue(date): Calculates days overdue from expected date\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - calculateBusinessDays(start, end): Calculates business days between dates\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - getDetailedBlockingItem(row): Gets blocking item info for ordered PRs\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Required Sheet Structure:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Master Log Tab: Main PR/PO tracking sheet (see COL constant for mapping)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Requestor List: User roles and permissions (Name, Email, Department, Active, Password, Role)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 getDashboardData\cf4 \strokec4 (\cf6 \strokec6 organization\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Starting getDashboardData with organization: '\cf4 \strokec4  + \cf6 \strokec6 organization\cf4 \strokec4 );\cb1 \
\
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf9 \strokec9 // Authenticate user and retrieve permissions\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 user\cf4 \strokec4  = \cf6 \strokec6 getCurrentUser\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 user\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 'Authentication required'\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'User authenticated: '\cf4 \strokec4  + \cf6 \strokec6 user\cf4 \strokec4 .\cf6 \strokec6 email\cf4 \strokec4 );\cb1 \
\
\cb3     \cf9 \strokec9 // Get user permissions\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 userPermissions\cf4 \strokec4  = \{\cb1 \
\cb3       \cf6 \strokec6 canSubmitPR\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \strokec4 , \cf9 \strokec9 // All authenticated users can submit\cf4 \cb1 \strokec4 \
\cb3       \cf6 \strokec6 canUpdateStatus\cf4 \strokec4 : \cf6 \strokec6 isAuthorized\cf4 \strokec4 (\cf6 \strokec6 user\cf4 \strokec4 , \cf8 \strokec8 'procurement'\cf4 \strokec4 ),\cb1 \
\cb3       \cf6 \strokec6 canApprove\cf4 \strokec4 : \cf6 \strokec6 isAuthorized\cf4 \strokec4 (\cf6 \strokec6 user\cf4 \strokec4 , \cf8 \strokec8 'approver'\cf4 \strokec4 ),\cb1 \
\cb3       \cf6 \strokec6 canViewFinance\cf4 \strokec4 : \cf6 \strokec6 isAuthorized\cf4 \strokec4 (\cf6 \strokec6 user\cf4 \strokec4 , \cf8 \strokec8 'finance'\cf4 \strokec4 )\cb1 \
\cb3     \};\cb1 \
\
\cb3     \cf9 \strokec9 // Open the spreadsheet using the configured SPREADSHEET_ID\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 ss\cf4 \strokec4  = \cf7 \strokec7 SpreadsheetApp\cf4 \strokec4 .\cf6 \strokec6 openById\cf4 \strokec4 (\cf7 \strokec7 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 ss\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 'Failed to open spreadsheet with ID: '\cf4 \strokec4  + \cf7 \strokec7 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Spreadsheet opened successfully.'\cf4 \strokec4 );\cb1 \
\
\cb3     \cf9 \strokec9 // Access the "Master Log" sheet as defined in CONFIG\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 sheet\cf4 \strokec4  = \cf6 \strokec6 ss\cf4 \strokec4 .\cf6 \strokec6 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 CONFIG\cf4 \strokec4 .\cf7 \strokec7 MASTER_LOG_TAB\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 sheet\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 'Master Log sheet not found in spreadsheet.'\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Master Log sheet accessed successfully.'\cf4 \strokec4 );\cb1 \
\
\cb3     \cf9 \strokec9 // Initialize data structure with all possible statuses\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 statusData\cf4 \strokec4  = \{\cb1 \
\cb3       \cf6 \strokec6 countsByStatus\cf4 \strokec4 : \{\cb1 \
\cb3         \cf8 \strokec8 'Submitted'\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf8 \strokec8 'In Queue'\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf8 \strokec8 'Ordered'\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf8 \strokec8 'Completed'\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf8 \strokec8 'R&R'\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf8 \strokec8 'Rejected'\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf8 \strokec8 'Canceled'\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \cb1 \strokec4 \
\cb3       \},\cb1 \
\cb3       \cf6 \strokec6 prs\cf4 \strokec4 : \{\cb1 \
\cb3         \cf8 \strokec8 'Submitted'\cf4 \strokec4 : [],\cb1 \
\cb3         \cf8 \strokec8 'In Queue'\cf4 \strokec4 : [],\cb1 \
\cb3         \cf8 \strokec8 'Ordered'\cf4 \strokec4 : [],\cb1 \
\cb3         \cf8 \strokec8 'Completed'\cf4 \strokec4 : [],\cb1 \
\cb3         \cf8 \strokec8 'R&R'\cf4 \strokec4 : [],\cb1 \
\cb3         \cf8 \strokec8 'Rejected'\cf4 \strokec4 : [],\cb1 \
\cb3         \cf8 \strokec8 'Canceled'\cf4 \strokec4 : []\cb1 \
\cb3       \},\cb1 \
\cb3       \cf6 \strokec6 metrics\cf4 \strokec4 : \{\cb1 \
\cb3         \cf6 \strokec6 totalPRs\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 urgentPRs\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 avgDaysOpen\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 overduePRs\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 quotesRequired\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 adjudicationRequired\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 customsClearanceRequired\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 completionRate\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \cb1 \strokec4 \
\cb3       \}\cb1 \
\cb3     \};\cb1 \
\
\cb3     \cf9 \strokec9 // Retrieve all data from the sheet\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 data\cf4 \strokec4  = \cf6 \strokec6 sheet\cf4 \strokec4 .\cf6 \strokec6 getDataRange\cf4 \strokec4 ().\cf6 \strokec6 getValues\cf4 \strokec4 ();\cb1 \
\cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Retrieved rows: '\cf4 \strokec4  + (\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 length\cf4 \strokec4  - \cf10 \strokec10 1\cf4 \strokec4 )); \cf9 \strokec9 // Subtract header row\cf4 \cb1 \strokec4 \
\
\cb3     \cf9 \strokec9 // If only header row exists, return empty statusData with permissions\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 length\cf4 \strokec4  <= \cf10 \strokec10 1\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'No PR data found in sheet. Returning empty statusData.'\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3         \cf6 \strokec6 success\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 data\cf4 \strokec4 : \{\cb1 \
\cb3           ...\cf6 \strokec6 statusData\cf4 \strokec4 ,\cb1 \
\cb3           \cf6 \strokec6 permissions\cf4 \strokec4 : \cf6 \strokec6 userPermissions\cf4 \cb1 \strokec4 \
\cb3         \},\cb1 \
\cb3         \cf6 \strokec6 timestamp\cf4 \strokec4 : \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ().\cf6 \strokec6 toISOString\cf4 \strokec4 ()\cb1 \
\cb3       \};\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf9 \strokec9 // Debug first row data\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 length\cf4 \strokec4  > \cf10 \strokec10 1\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'First row data sample: '\cf4 \strokec4  + \cf7 \strokec7 JSON\cf4 \strokec4 .\cf6 \strokec6 stringify\cf4 \strokec4 (\cf6 \strokec6 data\cf4 \strokec4 [\cf10 \strokec10 1\cf4 \strokec4 ]));\cb1 \
\cb3       \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Status field value: '\cf4 \strokec4  + \cf6 \strokec6 data\cf4 \strokec4 [\cf10 \strokec10 1\cf4 \strokec4 ][\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_STATUS\cf4 \strokec4 ]);\cb1 \
\cb3       \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Organization field value: '\cf4 \strokec4  + \cf6 \strokec6 data\cf4 \strokec4 [\cf10 \strokec10 1\cf4 \strokec4 ][\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ORGANIZATION\cf4 \strokec4 ]);\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf9 \strokec9 // Initialize variables for metrics calculation\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 totalDaysOpen\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 activePRs\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 completedPRs\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 totalCompletionPercentage\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf9 \strokec9 // Process each row (skip header)\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 slice\cf4 \strokec4 (\cf10 \strokec10 1\cf4 \strokec4 ).\cf6 \strokec6 forEach\cf4 \strokec4 ((\cf6 \strokec6 row\cf4 \strokec4 , \cf6 \strokec6 index\cf4 \strokec4 ) => \{\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 prOrg\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ORGANIZATION\cf4 \strokec4 ];\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 status\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_STATUS\cf4 \strokec4 ];\cb1 \
\
\cb3       \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Checking PR in row \cf4 \strokec4 $\{\cf6 \strokec6 index\cf4 \strokec4  + \cf10 \strokec10 2\cf4 \strokec4 \}\cf8 \strokec8 : Status=\cf4 \strokec4 $\{\cf6 \strokec6 status\cf4 \strokec4 \}\cf8 \strokec8 , Organization=\cf4 \strokec4 $\{\cf6 \strokec6 prOrg\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\
\cb3       \cf9 \strokec9 // Check if the PR should be included based on organization filter\cf4 \cb1 \strokec4 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 organization\cf4 \strokec4  || \cf6 \strokec6 prOrg\cf4 \strokec4  === \cf6 \strokec6 organization\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Processing row \cf4 \strokec4 $\{\cf6 \strokec6 index\cf4 \strokec4  + \cf10 \strokec10 2\cf4 \strokec4 \}\cf8 \strokec8 , status: \cf4 \strokec4 $\{\cf6 \strokec6 status\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\
\cb3         \cf9 \strokec9 // Only process if status is recognized\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 countsByStatus\cf4 \strokec4 .\cf6 \strokec6 hasOwnProperty\cf4 \strokec4 (\cf6 \strokec6 status\cf4 \strokec4 )) \{\cb1 \
\cb3           \cf9 \strokec9 // Increment status count\cf4 \cb1 \strokec4 \
\cb3           \cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 countsByStatus\cf4 \strokec4 [\cf6 \strokec6 status\cf4 \strokec4 ]++;\cb1 \
\cb3           \cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 totalPRs\cf4 \strokec4 ++;\cb1 \
\
\cb3           \cf9 \strokec9 // Calculate metrics based on PR attributes\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 URGENCY\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 urgentPRs\cf4 \strokec4 ++;\cb1 \
\cb3           \}\cb1 \
\cb3           \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 QUOTES_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 quotesRequired\cf4 \strokec4 ++;\cb1 \
\cb3           \}\cb1 \
\cb3           \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ADJ_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 adjudicationRequired\cf4 \strokec4 ++;\cb1 \
\cb3           \}\cb1 \
\cb3           \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 customsClearanceRequired\cf4 \strokec4 ++;\cb1 \
\cb3           \}\cb1 \
\
\cb3           \cf9 \strokec9 // Calculate days open\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 daysOpen\cf4 \strokec4  = \cf6 \strokec6 calculateDaysOpen\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ]);\cb1 \
\cb3           \cf6 \strokec6 totalDaysOpen\cf4 \strokec4  += \cf6 \strokec6 daysOpen\cf4 \strokec4 ;\cb1 \
\cb3           \cf6 \strokec6 activePRs\cf4 \strokec4 ++;\cb1 \
\
\cb3           \cf9 \strokec9 // Calculate completion percentage\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 completion\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 COMPLETION\cf4 \strokec4 ] || \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3           \cf6 \strokec6 totalCompletionPercentage\cf4 \strokec4  += \cf6 \strokec6 completion\cf4 \strokec4 ;\cb1 \
\
\cb3           \cf9 \strokec9 // Track completed PRs\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 status\cf4 \strokec4  === \cf8 \strokec8 'Completed'\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 completedPRs\cf4 \strokec4 ++;\cb1 \
\cb3           \}\cb1 \
\
\cb3           \cf9 \strokec9 // Parse line items\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 lineItems\cf4 \strokec4  = \cf6 \strokec6 parseLineItems\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 );\cb1 \
\cb3           \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Parsed line items:'\cf4 \strokec4 , \cf6 \strokec6 lineItems\cf4 \strokec4 );\cb1 \
\
\cb3           \cf9 \strokec9 // Create PR data object with status-specific fields\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 prData\cf4 \strokec4  = \{\cb1 \
\cb3             \cf6 \strokec6 prNumber\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_NUMBER\cf4 \strokec4 ],\cb1 \
\cb3             \cf6 \strokec6 timestamp\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No timestamp provided'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 description\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 DESCRIPTION\cf4 \strokec4 ] || \cf8 \strokec8 'No description provided'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 requestor\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 REQUESTOR_NAME\cf4 \strokec4 ] || \cf8 \strokec8 'Unknown'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 department\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 DEPARTMENT\cf4 \strokec4 ] || \cf8 \strokec8 'N/A'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 daysOpen\cf4 \strokec4 : \cf6 \strokec6 daysOpen\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 urgency\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 URGENCY\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4  ? \cf8 \strokec8 'Urgent'\cf4 \strokec4  : \cf8 \strokec8 'Normal'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 amount\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_AMOUNT\cf4 \strokec4 ],\cb1 \
\cb3             \cf6 \strokec6 currency\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CURRENCY\cf4 \strokec4 ],\cb1 \
\cb3             \cf6 \strokec6 vendor\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 VENDOR\cf4 \strokec4 ],\cb1 \
\cb3             \cf6 \strokec6 approver\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 APPROVER\cf4 \strokec4 ],\cb1 \
\cb3             \cf6 \strokec6 completion\cf4 \strokec4 : \cf6 \strokec6 completion\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 procurementNotes\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PROCUREMENT_NOTES\cf4 \strokec4 ] || \cf8 \strokec8 ''\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 lineItems\cf4 \strokec4 : \cf6 \strokec6 lineItems\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 _debug\cf4 \strokec4 : \{\cb1 \
\cb3               \cf6 \strokec6 rawLineItems\cf4 \strokec4 : \{\cb1 \
\cb3                 \cf6 \strokec6 items\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ITEM_LIST\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 quantities\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 QTY_LIST\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 uoms\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 UOM_LIST\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 urls\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 URL_LIST\cf4 \strokec4 ]\cb1 \
\cb3               \}\cb1 \
\cb3             \}\cb1 \
\cb3           \};\cb1 \
\
\cb3           \cf9 \strokec9 // Add status-specific fields\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 switch\cf4 \strokec4  (\cf6 \strokec6 status\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'Submitted'\cf4 \strokec4 :\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 submittedDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No submission date'\cf4 \strokec4 ;\cb1 \
\cb3               \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3             \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'In Queue'\cf4 \strokec4 :\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 queuePosition\cf4 \strokec4  = \cf6 \strokec6 calculateQueuePosition\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 , \cf6 \strokec6 data\cf4 \strokec4 );\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 quotesRequired\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 QUOTES_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 quotesStatus\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 QUOTES_LINK\cf4 \strokec4 ] ? \cf8 \strokec8 'Received'\cf4 \strokec4  : \cf8 \strokec8 'Pending'\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 adjudicationRequired\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ADJ_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 adjudicationStatus\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ADJ_NOTES\cf4 \strokec4 ] ? \cf8 \strokec8 'Completed'\cf4 \strokec4  : \cf8 \strokec8 'Pending'\cf4 \strokec4 ;\cb1 \
\cb3               \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3             \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'Ordered'\cf4 \strokec4 :\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 orderedDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PO_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PO_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No ordered date'\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 expectedLanding\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 EXPECTED_LANDING_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 EXPECTED_LANDING_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No expected landing date'\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 daysOverdue\cf4 \strokec4  = \cf6 \strokec6 calculateDaysOverdue\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 EXPECTED_LANDING_DATE\cf4 \strokec4 ]);\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 blockingItem\cf4 \strokec4  = \cf6 \strokec6 getDetailedBlockingItem\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 );\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 paymentDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PAYMENT_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PAYMENT_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No payment date'\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 shipmentStatus\cf4 \strokec4  = \{\cb1 \
\cb3                 \cf6 \strokec6 shipped\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 SHIPPED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ,\cb1 \
\cb3                 \cf6 \strokec6 shipmentDate\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 SHIPMENT_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 SHIPMENT_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No shipment date'\cf4 \strokec4 ,\cb1 \
\cb3                 \cf6 \strokec6 customsRequired\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ,\cb1 \
\cb3                 \cf6 \strokec6 customsCleared\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_CLEARED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ,\cb1 \
\cb3                 \cf6 \strokec6 customsClearanceDate\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 DATE_CLEARED\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 DATE_CLEARED\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No customs clearance date'\cf4 \strokec4 ,\cb1 \
\cb3                 \cf6 \strokec6 goodsLanded\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 GOODS_LANDED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ,\cb1 \
\cb3                 \cf6 \strokec6 landedDate\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 LANDED_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 LANDED_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No landed date'\cf4 \cb1 \strokec4 \
\cb3               \};\cb1 \
\
\cb3               \cf9 \strokec9 // Track overdue PRs\cf4 \cb1 \strokec4 \
\cb3               \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 daysOverdue\cf4 \strokec4  > \cf10 \strokec10 0\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 overduePRs\cf4 \strokec4 ++;\cb1 \
\cb3               \}\cb1 \
\cb3               \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3             \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'R&R'\cf4 \strokec4 :\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rAndRDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ().\cf6 \strokec6 toISOString\cf4 \strokec4 ();\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rAndRBy\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_BY\cf4 \strokec4 ] || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rAndRJustification\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_JUST\cf4 \strokec4 ] || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3               \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3             \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'Completed'\cf4 \strokec4 :\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 completedDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 LANDED_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 LANDED_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No completed date'\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 timeToComplete\cf4 \strokec4  = \cf6 \strokec6 calculateBusinessDays\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ], \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 LANDED_DATE\cf4 \strokec4 ]);\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 timeToShip\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIME_TO_SHIP\cf4 \strokec4 ] || \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 timeInCustoms\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIME_IN_CUSTOMS\cf4 \strokec4 ] || \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 timeToLand\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIME_TO_LAND\cf4 \strokec4 ] || \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3               \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3             \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'Rejected'\cf4 \strokec4 :\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rejectionDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No rejection date'\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rejectedBy\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_BY\cf4 \strokec4 ] || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rejectionReason\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_JUST\cf4 \strokec4 ] || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3               \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3             \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'Canceled'\cf4 \strokec4 :\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 cancelationDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No cancelation date'\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 canceledBy\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_BY\cf4 \strokec4 ] || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3               \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 cancelationReason\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_JUST\cf4 \strokec4 ] || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3               \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\cb3           \}\cb1 \
\
\cb3           \cf9 \strokec9 // Add PR data to appropriate status list\cf4 \cb1 \strokec4 \
\cb3           \cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 prs\cf4 \strokec4 [\cf6 \strokec6 status\cf4 \strokec4 ].\cf6 \strokec6 push\cf4 \strokec4 (\cf6 \strokec6 prData\cf4 \strokec4 );\cb1 \
\cb3           \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Added PR \cf4 \strokec4 $\{\cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 prNumber\cf4 \strokec4 \}\cf8 \strokec8  to status '\cf4 \strokec4 $\{\cf6 \strokec6 status\cf4 \strokec4 \}\cf8 \strokec8 '.`\cf4 \strokec4 );\cb1 \
\cb3         \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3           \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 warn\cf4 \strokec4 (\cf8 \strokec8 `Unrecognized status '\cf4 \strokec4 $\{\cf6 \strokec6 status\cf4 \strokec4 \}\cf8 \strokec8 ' in row \cf4 \strokec4 $\{\cf6 \strokec6 index\cf4 \strokec4  + \cf10 \strokec10 2\cf4 \strokec4 \}\cf8 \strokec8 . Skipping.`\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3       \}\cb1 \
\cb3     \});\cb1 \
\
\cb3     \cf9 \strokec9 // Calculate final metrics\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 activePRs\cf4 \strokec4  > \cf10 \strokec10 0\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 avgDaysOpen\cf4 \strokec4  = \cf7 \strokec7 Math\cf4 \strokec4 .\cf6 \strokec6 round\cf4 \strokec4 (\cf6 \strokec6 totalDaysOpen\cf4 \strokec4  / \cf6 \strokec6 activePRs\cf4 \strokec4 );\cb1 \
\cb3       \cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 completionRate\cf4 \strokec4  = \cf7 \strokec7 Math\cf4 \strokec4 .\cf6 \strokec6 round\cf4 \strokec4 (\cf6 \strokec6 totalCompletionPercentage\cf4 \strokec4  / \cf6 \strokec6 activePRs\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Successfully processed data: '\cf4 \strokec4  + \cf7 \strokec7 JSON\cf4 \strokec4 .\cf6 \strokec6 stringify\cf4 \strokec4 (\cf6 \strokec6 statusData\cf4 \strokec4 ));\cb1 \
\
\cb3     \cf9 \strokec9 // Return the processed data with permissions\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3       \cf6 \strokec6 success\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \strokec4 ,\cb1 \
\cb3       \cf6 \strokec6 data\cf4 \strokec4 : \{\cb1 \
\cb3         ...\cf6 \strokec6 statusData\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 permissions\cf4 \strokec4 : \cf6 \strokec6 userPermissions\cf4 \cb1 \strokec4 \
\cb3       \},\cb1 \
\cb3       \cf6 \strokec6 timestamp\cf4 \strokec4 : \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ().\cf6 \strokec6 toISOString\cf4 \strokec4 ()\cb1 \
\cb3     \};\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf6 \strokec6 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'ERROR: Error in getDashboardData: '\cf4 \strokec4  + \cf6 \strokec6 error\cf4 \strokec4 .\cf6 \strokec6 toString\cf4 \strokec4 ());\cb1 \
\cb3     \cf6 \strokec6 console\cf4 \strokec4 .\cf6 \strokec6 error\cf4 \strokec4 (\cf8 \strokec8 'Error in getDashboardData:'\cf4 \strokec4 , \cf6 \strokec6 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3       \cf6 \strokec6 success\cf4 \strokec4 : \cf5 \strokec5 false\cf4 \strokec4 ,\cb1 \
\cb3       \cf6 \strokec6 error\cf4 \strokec4 : \cf6 \strokec6 error\cf4 \strokec4 .\cf6 \strokec6 toString\cf4 \strokec4 (),\cb1 \
\cb3       \cf6 \strokec6 timestamp\cf4 \strokec4 : \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ().\cf6 \strokec6 toISOString\cf4 \strokec4 ()\cb1 \
\cb3     \};\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * calculateDaysOpen\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Calculates the number of days a PR has been open.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string|Date\} timestamp - The timestamp when the PR was created.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{number\} Days open.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 calculateDaysOpen\cf4 \strokec4 (\cf6 \strokec6 timestamp\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 createdDate\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 timestamp\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 currentDate\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 diffTime\cf4 \strokec4  = \cf6 \strokec6 currentDate\cf4 \strokec4  - \cf6 \strokec6 createdDate\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf7 \strokec7 Math\cf4 \strokec4 .\cf6 \strokec6 floor\cf4 \strokec4 (\cf6 \strokec6 diffTime\cf4 \strokec4  / (\cf10 \strokec10 1000\cf4 \strokec4  * \cf10 \strokec10 60\cf4 \strokec4  * \cf10 \strokec10 60\cf4 \strokec4  * \cf10 \strokec10 24\cf4 \strokec4 ));\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * calculateCompletionPercentage\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Calculates the completion percentage of a PR based on its fields.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} row - The row data from the spreadsheet.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{number\} Completion percentage.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 calculateCompletionPercentage\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf9 \strokec9 // Example implementation; adjust based on actual criteria\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 completedTasks\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 totalTasks\cf4 \strokec4  = \cf10 \strokec10 5\cf4 \strokec4 ; \cf9 \strokec9 // Adjust based on actual number of tasks\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TASK_1\cf4 \strokec4 ] === \cf8 \strokec8 'Completed'\cf4 \strokec4 ) \cf6 \strokec6 completedTasks\cf4 \strokec4 ++;\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TASK_2\cf4 \strokec4 ] === \cf8 \strokec8 'Completed'\cf4 \strokec4 ) \cf6 \strokec6 completedTasks\cf4 \strokec4 ++;\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TASK_3\cf4 \strokec4 ] === \cf8 \strokec8 'Completed'\cf4 \strokec4 ) \cf6 \strokec6 completedTasks\cf4 \strokec4 ++;\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TASK_4\cf4 \strokec4 ] === \cf8 \strokec8 'Completed'\cf4 \strokec4 ) \cf6 \strokec6 completedTasks\cf4 \strokec4 ++;\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TASK_5\cf4 \strokec4 ] === \cf8 \strokec8 'Completed'\cf4 \strokec4 ) \cf6 \strokec6 completedTasks\cf4 \strokec4 ++;\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  (\cf6 \strokec6 completedTasks\cf4 \strokec4  / \cf6 \strokec6 totalTasks\cf4 \strokec4 ) * \cf10 \strokec10 100\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * calculateQueuePosition\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Determines the position of a PR in the processing queue.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} row - The row data from the spreadsheet.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} data - All data rows from the spreadsheet.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{number\} Queue position.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 calculateQueuePosition\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 , \cf6 \strokec6 data\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf9 \strokec9 // Example implementation; adjust based on actual queue logic\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 prNumber\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_NUMBER\cf4 \strokec4 ];\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 queue\cf4 \strokec4  = \cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 slice\cf4 \strokec4 (\cf10 \strokec10 1\cf4 \strokec4 ).\cf6 \strokec6 filter\cf4 \strokec4 (\cf6 \strokec6 r\cf4 \strokec4  => \cf6 \strokec6 r\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_STATUS\cf4 \strokec4 ] === \cf8 \strokec8 'In Queue'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 queue\cf4 \strokec4 .\cf6 \strokec6 findIndex\cf4 \strokec4 (\cf6 \strokec6 r\cf4 \strokec4  => \cf6 \strokec6 r\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_NUMBER\cf4 \strokec4 ] === \cf6 \strokec6 prNumber\cf4 \strokec4 ) + \cf10 \strokec10 1\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * calculateDaysOverdue - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Calculates the number of days a PR is overdue based on the expected landing date.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Returns 0 if the PR is not overdue.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Date|string\} expectedDate - Expected landing date.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{number\} - Number of days overdue.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 calculateDaysOverdue\cf4 \strokec4 (\cf6 \strokec6 expectedDate\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 expectedDate\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 today\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 expected\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 expectedDate\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 today\cf4 \strokec4  <= \cf6 \strokec6 expected\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 calculateBusinessDays\cf4 \strokec4 (\cf6 \strokec6 expected\cf4 \strokec4 , \cf6 \strokec6 today\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * getDetailedBlockingItem - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ------------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Determines the current blocking item for an ordered PR based on its attributes.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Returns an object with type and message if there's a blocking item, or null otherwise.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} row - PR data row.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object|null\} - Blocking item details or null.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 getDetailedBlockingItem\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 SHIPPED\cf4 \strokec4 ] !== \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3             \cf6 \strokec6 type\cf4 \strokec4 : \cf8 \strokec8 'shipping'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 message\cf4 \strokec4 : \cf8 \strokec8 'Awaiting shipping confirmation'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 days\cf4 \strokec4 : \cf6 \strokec6 calculateBusinessDays\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PAYMENT_DATE\cf4 \strokec4 ], \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ()),\cb1 \
\cb3             \cf6 \strokec6 date\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PAYMENT_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PAYMENT_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No payment date'\cf4 \cb1 \strokec4 \
\cb3         \};\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4  && \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_CLEARED\cf4 \strokec4 ] !== \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3             \cf6 \strokec6 type\cf4 \strokec4 : \cf8 \strokec8 'customs'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 message\cf4 \strokec4 : \cf8 \strokec8 'Awaiting customs clearance'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 days\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_SUBMISSION_DATE\cf4 \strokec4 ] ? \cb1 \
\cb3                   \cf6 \strokec6 calculateBusinessDays\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_SUBMISSION_DATE\cf4 \strokec4 ], \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ()) : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 date\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_SUBMISSION_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_SUBMISSION_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No customs submission date'\cf4 \cb1 \strokec4 \
\cb3         \};\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 GOODS_LANDED\cf4 \strokec4 ] !== \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3             \cf6 \strokec6 type\cf4 \strokec4 : \cf8 \strokec8 'delivery'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 message\cf4 \strokec4 : \cf8 \strokec8 'Awaiting delivery confirmation'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 days\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 SHIPMENT_DATE\cf4 \strokec4 ] ? \cb1 \
\cb3                   \cf6 \strokec6 calculateBusinessDays\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 SHIPMENT_DATE\cf4 \strokec4 ], \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ()) : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 date\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 SHIPMENT_DATE\cf4 \strokec4 ] ? \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 SHIPMENT_DATE\cf4 \strokec4 ]).\cf6 \strokec6 toISOString\cf4 \strokec4 () : \cf8 \strokec8 'No shipment date'\cf4 \cb1 \strokec4 \
\cb3         \};\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * calculateBusinessDays - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ----------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Calculates the number of business days between two dates.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Date|string\} startDate - Start date.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Date|string\} endDate - End date.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{number\} - Number of business days.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 calculateBusinessDays\cf4 \strokec4 (\cf6 \strokec6 startDate\cf4 \strokec4 , \cf6 \strokec6 endDate\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 count\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 current\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 startDate\cf4 \strokec4 );\cb1 \
\cb3     \cf6 \strokec6 endDate\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 endDate\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 while\cf4 \strokec4  (\cf6 \strokec6 current\cf4 \strokec4  <= \cf6 \strokec6 endDate\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 day\cf4 \strokec4  = \cf6 \strokec6 current\cf4 \strokec4 .\cf6 \strokec6 getDay\cf4 \strokec4 ();\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 day\cf4 \strokec4  !== \cf10 \strokec10 0\cf4 \strokec4  && \cf6 \strokec6 day\cf4 \strokec4  !== \cf10 \strokec10 6\cf4 \strokec4 ) \{ \cf9 \strokec9 // Not Sunday or Saturday\cf4 \cb1 \strokec4 \
\cb3             \cf6 \strokec6 count\cf4 \strokec4 ++;\cb1 \
\cb3         \}\cb1 \
\cb3         \cf6 \strokec6 current\cf4 \strokec4 .\cf6 \strokec6 setDate\cf4 \strokec4 (\cf6 \strokec6 current\cf4 \strokec4 .\cf6 \strokec6 getDate\cf4 \strokec4 () + \cf10 \strokec10 1\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 count\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * calculateQueuePosition - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ----------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Calculates the queue position for a PR in the "In Queue" status based on its\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * submission timestamp relative to other PRs in the same status.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} row - PR data row.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} data - All PR data.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{number\} - Queue position.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 calculateQueuePosition\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 , \cf6 \strokec6 data\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf9 \strokec9 // Determine submission date\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 submissionDate\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ]);\cb1 \
\
\cb3     \cf9 \strokec9 // Filter PRs that are in "In Queue" and submitted before or at the same time\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 queuePRs\cf4 \strokec4  = \cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 slice\cf4 \strokec4 (\cf10 \strokec10 1\cf4 \strokec4 ).\cf6 \strokec6 filter\cf4 \strokec4 (\cf6 \strokec6 r\cf4 \strokec4  => \{\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 r\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_STATUS\cf4 \strokec4 ] === \cf8 \strokec8 'In Queue'\cf4 \strokec4  && \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 (\cf6 \strokec6 r\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ]) <= \cf6 \strokec6 submissionDate\cf4 \strokec4 ;\cb1 \
\cb3     \});\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 queuePRs\cf4 \strokec4 .\cf6 \strokec6 length\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * sendNotification - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -----------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Sends notifications (e.g., email) based on specific events or status changes.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} type - Type of notification (e.g., 'STATUS_CHANGE', 'SUBMISSION').\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Object\} data - Data relevant to the notification.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array<string>\} recipients - List of email recipients.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 sendNotification\cf4 \strokec4 (\cf6 \strokec6 type\cf4 \strokec4 , \cf6 \strokec6 data\cf4 \strokec4 , \cf6 \strokec6 recipients\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf9 \strokec9 // Implement email or in-app notifications based on 'type'\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 // Example: Send email for status changes\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 type\cf4 \strokec4  === \cf8 \strokec8 'STATUS_CHANGE'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 subject\cf4 \strokec4  = \cf8 \strokec8 `PR/PO Status Updated to \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 newStatus\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 ;\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 body\cf4 \strokec4  = \cf8 \strokec8 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 Number: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 number\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 Description: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 description\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 Submitted By: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 submitter\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 Department: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 department\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 Previous Status: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 oldStatus\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 New Status: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 newStatus\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 Notes: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 notes\cf4 \strokec4  || \cf8 \strokec8 'N/A'\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 View Details: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 link\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8         `\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3         \cf7 \strokec7 MailApp\cf4 \strokec4 .\cf6 \strokec6 sendEmail\cf4 \strokec4 (\cf6 \strokec6 recipients\cf4 \strokec4 .\cf6 \strokec6 join\cf4 \strokec4 (\cf8 \strokec8 ','\cf4 \strokec4 ), \cf6 \strokec6 subject\cf4 \strokec4 , \cf6 \strokec6 body\cf4 \strokec4 );\cb1 \
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Sent STATUS_CHANGE notification to \cf4 \strokec4 $\{\cf6 \strokec6 recipients\cf4 \strokec4 .\cf6 \strokec6 join\cf4 \strokec4 (\cf8 \strokec8 ', '\cf4 \strokec4 )\}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 type\cf4 \strokec4  === \cf8 \strokec8 'SUBMISSION'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 subject\cf4 \strokec4  = \cf8 \strokec8 `New PR Submitted: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 number\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 ;\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 body\cf4 \strokec4  = \cf8 \strokec8 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 A new Purchase Requisition has been submitted.\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 PR Number: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 number\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 Description: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 description\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 Submitted By: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 submitter\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 Department: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 department\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 Expected Deadline: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 expectedDate\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8 View Details: \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 link\cf4 \strokec4 \}\cb1 \
\cf8 \cb3 \strokec8         `\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3         \cf7 \strokec7 MailApp\cf4 \strokec4 .\cf6 \strokec6 sendEmail\cf4 \strokec4 (\cf6 \strokec6 recipients\cf4 \strokec4 .\cf6 \strokec6 join\cf4 \strokec4 (\cf8 \strokec8 ','\cf4 \strokec4 ), \cf6 \strokec6 subject\cf4 \strokec4 , \cf6 \strokec6 body\cf4 \strokec4 );\cb1 \
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Sent SUBMISSION notification to \cf4 \strokec4 $\{\cf6 \strokec6 recipients\cf4 \strokec4 .\cf6 \strokec6 join\cf4 \strokec4 (\cf8 \strokec8 ', '\cf4 \strokec4 )\}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf9 \strokec9 // Add more notification types as needed\cf4 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * updatePOStatus - Function to Update PO Status\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ---------------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Updates the status of a Purchase Order (PO) and handles related actions such\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * as sending notifications and recalculating queue positions.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} poNumber - PO number to update.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} newStatus - New status to set.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} notes - Notes related to the status change.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} - Result of the update operation.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 updatePOStatus\cf4 \strokec4 (\cf6 \strokec6 poNumber\cf4 \strokec4 , \cf6 \strokec6 newStatus\cf4 \strokec4 , \cf6 \strokec6 notes\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Updating status for PO \cf4 \strokec4 $\{\cf6 \strokec6 poNumber\cf4 \strokec4 \}\cf8 \strokec8  to \cf4 \strokec4 $\{\cf6 \strokec6 newStatus\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 ss\cf4 \strokec4  = \cf7 \strokec7 SpreadsheetApp\cf4 \strokec4 .\cf6 \strokec6 openById\cf4 \strokec4 (\cf7 \strokec7 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 ss\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 'Failed to open spreadsheet with ID: '\cf4 \strokec4  + \cf7 \strokec7 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 sheet\cf4 \strokec4  = \cf6 \strokec6 ss\cf4 \strokec4 .\cf6 \strokec6 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 CONFIG\cf4 \strokec4 .\cf7 \strokec7 MASTER_LOG_TAB\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 sheet\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 'Master Log sheet not found in spreadsheet.'\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 data\cf4 \strokec4  = \cf6 \strokec6 sheet\cf4 \strokec4 .\cf6 \strokec6 getDataRange\cf4 \strokec4 ().\cf6 \strokec6 getValues\cf4 \strokec4 ();\cb1 \
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Retrieved \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 length\cf4 \strokec4 \}\cf8 \strokec8  rows from Master Log sheet.`\cf4 \strokec4 );\cb1 \
\
\cb3         \cf9 \strokec9 // Find the PO row by PO number\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 rowIndex\cf4 \strokec4  = \cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 findIndex\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4  => \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PO_NUMBER_TEXT\cf4 \strokec4 ] === \cf6 \strokec6 poNumber\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 rowIndex\cf4 \strokec4  === -\cf10 \strokec10 1\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 `PO number \cf4 \strokec4 $\{\cf6 \strokec6 poNumber\cf4 \strokec4 \}\cf8 \strokec8  not found in Master Log.`\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Found PO \cf4 \strokec4 $\{\cf6 \strokec6 poNumber\cf4 \strokec4 \}\cf8 \strokec8  at row \cf4 \strokec4 $\{\cf6 \strokec6 rowIndex\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4 \}\cf8 \strokec8 .`\cf4 \strokec4 );\cb1 \
\
\cb3         \cf9 \strokec9 // Get current status\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 currentStatus\cf4 \strokec4  = \cf6 \strokec6 data\cf4 \strokec4 [\cf6 \strokec6 rowIndex\cf4 \strokec4 ][\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PO_STATUS\cf4 \strokec4 ];\cb1 \
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Current status of PO \cf4 \strokec4 $\{\cf6 \strokec6 poNumber\cf4 \strokec4 \}\cf8 \strokec8 : \cf4 \strokec4 $\{\cf6 \strokec6 currentStatus\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\
\cb3         \cf9 \strokec9 // Validate status change\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 validateStatusChange\cf4 \strokec4 (\cf6 \strokec6 currentStatus\cf4 \strokec4 , \cf6 \strokec6 newStatus\cf4 \strokec4 , \cf6 \strokec6 notes\cf4 \strokec4 );\cb1 \
\
\cb3         \cf9 \strokec9 // Update status in the sheet\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 sheet\cf4 \strokec4 .\cf6 \strokec6 getRange\cf4 \strokec4 (\cf6 \strokec6 rowIndex\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4 , \cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PO_STATUS\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4 ).\cf6 \strokec6 setValue\cf4 \strokec4 (\cf6 \strokec6 newStatus\cf4 \strokec4 );\cb1 \
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Updated status of PO \cf4 \strokec4 $\{\cf6 \strokec6 poNumber\cf4 \strokec4 \}\cf8 \strokec8  to \cf4 \strokec4 $\{\cf6 \strokec6 newStatus\cf4 \strokec4 \}\cf8 \strokec8 .`\cf4 \strokec4 );\cb1 \
\
\cb3         \cf9 \strokec9 // Add notes if provided\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 notes\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 currentNotes\cf4 \strokec4  = \cf6 \strokec6 data\cf4 \strokec4 [\cf6 \strokec6 rowIndex\cf4 \strokec4 ][\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PROCUREMENT_NOTES\cf4 \strokec4 ] || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 updatedNotes\cf4 \strokec4  = \cf6 \strokec6 addTimestampToNote\cf4 \strokec4 (\cf6 \strokec6 notes\cf4 \strokec4 , \cf6 \strokec6 currentNotes\cf4 \strokec4 );\cb1 \
\cb3             \cf6 \strokec6 sheet\cf4 \strokec4 .\cf6 \strokec6 getRange\cf4 \strokec4 (\cf6 \strokec6 rowIndex\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4 , \cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PROCUREMENT_NOTES\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4 ).\cf6 \strokec6 setValue\cf4 \strokec4 (\cf6 \strokec6 updatedNotes\cf4 \strokec4 );\cb1 \
\cb3             \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Added notes to PO \cf4 \strokec4 $\{\cf6 \strokec6 poNumber\cf4 \strokec4 \}\cf8 \strokec8 : \cf4 \strokec4 $\{\cf6 \strokec6 notes\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf9 \strokec9 // Handle status-specific actions\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 handleStatusChangeActions\cf4 \strokec4 (\cf6 \strokec6 poNumber\cf4 \strokec4 , \cf6 \strokec6 data\cf4 \strokec4 [\cf6 \strokec6 rowIndex\cf4 \strokec4 ], \cf6 \strokec6 currentStatus\cf4 \strokec4 , \cf6 \strokec6 newStatus\cf4 \strokec4 , \cf6 \strokec6 notes\cf4 \strokec4 );\cb1 \
\
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3             \cf6 \strokec6 success\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 message\cf4 \strokec4 : \cf8 \strokec8 `PO \cf4 \strokec4 $\{\cf6 \strokec6 poNumber\cf4 \strokec4 \}\cf8 \strokec8  status updated to \cf4 \strokec4 $\{\cf6 \strokec6 newStatus\cf4 \strokec4 \}\cf8 \strokec8 .`\cf4 \cb1 \strokec4 \
\cb3         \};\cb1 \
\
\cb3     \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf6 \strokec6 error\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `ERROR: Error in updatePOStatus: \cf4 \strokec4 $\{\cf6 \strokec6 error\cf4 \strokec4 .\cf6 \strokec6 toString\cf4 \strokec4 ()\}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3         \cf9 \strokec9 // Use console.error for explicit error logging\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 console\cf4 \strokec4 .\cf6 \strokec6 error\cf4 \strokec4 (\cf8 \strokec8 `Error in updatePOStatus:`\cf4 \strokec4 , \cf6 \strokec6 error\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3             \cf6 \strokec6 success\cf4 \strokec4 : \cf5 \strokec5 false\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 error\cf4 \strokec4 : \cf6 \strokec6 error\cf4 \strokec4 .\cf6 \strokec6 toString\cf4 \strokec4 ()\cb1 \
\cb3         \};\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * validateStatusChange - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ---------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Validates whether a status change is allowed based on current status and rules.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Throws an error if the status change is invalid.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} currentStatus - Current status of the PO.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} newStatus - New status to set.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} notes - Notes related to the status change.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @throws \{Error\} - If the status change is invalid.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 validateStatusChange\cf4 \strokec4 (\cf6 \strokec6 currentStatus\cf4 \strokec4 , \cf6 \strokec6 newStatus\cf4 \strokec4 , \cf6 \strokec6 notes\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 allowedTransitions\cf4 \strokec4  = \{\cb1 \
\cb3         \cf8 \strokec8 'PO Pending Approval'\cf4 \strokec4 : [\cf8 \strokec8 'PO Approved'\cf4 \strokec4 , \cf8 \strokec8 'Rejected'\cf4 \strokec4 , \cf8 \strokec8 'Canceled'\cf4 \strokec4 ],\cb1 \
\cb3         \cf8 \strokec8 'PO Approved'\cf4 \strokec4 : [\cf8 \strokec8 'PO Ordered'\cf4 \strokec4 , \cf8 \strokec8 'Canceled'\cf4 \strokec4 ],\cb1 \
\cb3         \cf8 \strokec8 'PO Ordered'\cf4 \strokec4 : [\cf8 \strokec8 'Completed'\cf4 \strokec4 , \cf8 \strokec8 'Canceled'\cf4 \strokec4 ],\cb1 \
\cb3         \cf8 \strokec8 'Completed'\cf4 \strokec4 : [], \cf9 \strokec9 // No transitions allowed from Completed\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 'Rejected'\cf4 \strokec4 : [], \cf9 \strokec9 // No transitions allowed from Rejected\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 'Canceled'\cf4 \strokec4 : []  \cf9 \strokec9 // No transitions allowed from Canceled\cf4 \cb1 \strokec4 \
\cb3     \};\cb1 \
\
\cb3     \cf9 \strokec9 // Any status can transition to 'Canceled' except 'Completed', 'Rejected', 'Canceled'\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 newStatus\cf4 \strokec4  === \cf8 \strokec8 'Canceled'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  ([\cf8 \strokec8 'Completed'\cf4 \strokec4 , \cf8 \strokec8 'Rejected'\cf4 \strokec4 , \cf8 \strokec8 'Canceled'\cf4 \strokec4 ].\cf6 \strokec6 includes\cf4 \strokec4 (\cf6 \strokec6 currentStatus\cf4 \strokec4 )) \{\cb1 \
\cb3             \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 `Cannot cancel PO from status '\cf4 \strokec4 $\{\cf6 \strokec6 currentStatus\cf4 \strokec4 \}\cf8 \strokec8 '.`\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf9 \strokec9 // Validate if the transition is allowed\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 allowedTransitions\cf4 \strokec4 [\cf6 \strokec6 currentStatus\cf4 \strokec4 ].\cf6 \strokec6 includes\cf4 \strokec4 (\cf6 \strokec6 newStatus\cf4 \strokec4 )) \{\cb1 \
\cb3         \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 `Invalid status change from '\cf4 \strokec4 $\{\cf6 \strokec6 currentStatus\cf4 \strokec4 \}\cf8 \strokec8 ' to '\cf4 \strokec4 $\{\cf6 \strokec6 newStatus\cf4 \strokec4 \}\cf8 \strokec8 '.`\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf9 \strokec9 // Validate required notes for certain status changes\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 requiresNotes\cf4 \strokec4  = [\cf8 \strokec8 'Rejected'\cf4 \strokec4 , \cf8 \strokec8 'Revise and Resubmit'\cf4 \strokec4 ];\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 requiresNotes\cf4 \strokec4 .\cf6 \strokec6 includes\cf4 \strokec4 (\cf6 \strokec6 newStatus\cf4 \strokec4 ) && (!\cf6 \strokec6 notes\cf4 \strokec4  || \cf6 \strokec6 notes\cf4 \strokec4 .\cf6 \strokec6 trim\cf4 \strokec4 () === \cf8 \strokec8 ''\cf4 \strokec4 )) \{\cb1 \
\cb3         \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 `Notes are required when changing status to '\cf4 \strokec4 $\{\cf6 \strokec6 newStatus\cf4 \strokec4 \}\cf8 \strokec8 '.`\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * addTimestampToNote - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Adds a timestamp to the provided notes.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} newNote - New note to add.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} existingNotes - Existing notes in the sheet.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{string\} - Combined notes with timestamp.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 addTimestampToNote\cf4 \strokec4 (\cf6 \strokec6 newNote\cf4 \strokec4 , \cf6 \strokec6 existingNotes\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 timestamp\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ().\cf6 \strokec6 toISOString\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 existingNotes\cf4 \strokec4  + \cf8 \strokec8 `\\n[\cf4 \strokec4 $\{\cf6 \strokec6 timestamp\cf4 \strokec4 \}\cf8 \strokec8 ] \cf4 \strokec4 $\{\cf6 \strokec6 newNote\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * handleStatusChangeActions - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Handles additional actions required when a PO's status changes, such as sending\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * notifications and updating queue positions.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} poNumber - PO number.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} poData - PO data row.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} oldStatus - Previous status.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} newStatus - New status.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} notes - Notes related to the status change.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 handleStatusChangeActions\cf4 \strokec4 (\cf6 \strokec6 poNumber\cf4 \strokec4 , \cf6 \strokec6 poData\cf4 \strokec4 , \cf6 \strokec6 oldStatus\cf4 \strokec4 , \cf6 \strokec6 newStatus\cf4 \strokec4 , \cf6 \strokec6 notes\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Handling actions for PO \cf4 \strokec4 $\{\cf6 \strokec6 poNumber\cf4 \strokec4 \}\cf8 \strokec8  status change from '\cf4 \strokec4 $\{\cf6 \strokec6 oldStatus\cf4 \strokec4 \}\cf8 \strokec8 ' to '\cf4 \strokec4 $\{\cf6 \strokec6 newStatus\cf4 \strokec4 \}\cf8 \strokec8 '.`\cf4 \strokec4 );\cb1 \
\
\cb3     \cf9 \strokec9 // Update queue positions if needed\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 oldStatus\cf4 \strokec4  === \cf8 \strokec8 'PO Pending Approval'\cf4 \strokec4  || \cf6 \strokec6 newStatus\cf4 \strokec4  === \cf8 \strokec8 'PO Pending Approval'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf6 \strokec6 updateQueuePositions\cf4 \strokec4 ();\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf9 \strokec9 // Prepare notification data\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 notificationData\cf4 \strokec4  = \{\cb1 \
\cb3         \cf6 \strokec6 number\cf4 \strokec4 : \cf6 \strokec6 poNumber\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 description\cf4 \strokec4 : \cf6 \strokec6 poData\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 DESCRIPTION\cf4 \strokec4 ],\cb1 \
\cb3         \cf6 \strokec6 submitter\cf4 \strokec4 : \cf6 \strokec6 poData\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 REQUESTOR_NAME\cf4 \strokec4 ],\cb1 \
\cb3         \cf6 \strokec6 newStatus\cf4 \strokec4 : \cf6 \strokec6 newStatus\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 oldStatus\cf4 \strokec4 : \cf6 \strokec6 oldStatus\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 notes\cf4 \strokec4 : \cf6 \strokec6 notes\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 link\cf4 \strokec4 : \cf6 \strokec6 generateViewLink\cf4 \strokec4 (\cf6 \strokec6 poNumber\cf4 \strokec4 )\cb1 \
\cb3     \};\cb1 \
\
\cb3     \cf9 \strokec9 // Define recipients based on PO data (ensure these columns exist)\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 recipients\cf4 \strokec4  = [\cb1 \
\cb3         \cf7 \strokec7 CONFIG\cf4 \strokec4 .\cf7 \strokec7 PROCUREMENT_EMAIL\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 poData\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 EMAIL\cf4 \strokec4 ],            \cf9 \strokec9 // COL.EMAIL is defined as 2 in Code.gs\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 poData\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 APPROVER_EMAIL\cf4 \strokec4 ]    \cf9 \strokec9 // COL.APPROVER_EMAIL is defined as 28 in Code.gs\cf4 \cb1 \strokec4 \
\cb3     ];\cb1 \
\
\cb3     \cf9 \strokec9 // Send notification\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 sendNotification\cf4 \strokec4 (\cf8 \strokec8 'STATUS_CHANGE'\cf4 \strokec4 , \cf6 \strokec6 notificationData\cf4 \strokec4 , \cf6 \strokec6 recipients\cf4 \strokec4 );\cb1 \
\
\cb3     \cf9 \strokec9 // Handle auto-cancellation reset if applicable\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 newStatus\cf4 \strokec4  === \cf8 \strokec8 'PO Ordered'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf6 \strokec6 resetAutoCancellationTimer\cf4 \strokec4 (\cf6 \strokec6 poNumber\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * updateQueuePositions - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ---------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Updates the queue positions for PRs or POs as necessary.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Note: Implement the actual logic based on your system's requirements.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 updateQueuePositions\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Updating queue positions.'\cf4 \strokec4 );\cb1 \
\cb3     \cf9 \strokec9 // Implement queue position update logic here\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 // This could involve recalculating positions based on submission times or priorities\cf4 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * resetAutoCancellationTimer - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Resets the auto-cancellation timer for a PO when it reaches a certain status.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} poNumber - PO number.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 resetAutoCancellationTimer\cf4 \strokec4 (\cf6 \strokec6 poNumber\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Resetting auto-cancellation timer for PO \cf4 \strokec4 $\{\cf6 \strokec6 poNumber\cf4 \strokec4 \}\cf8 \strokec8 .`\cf4 \strokec4 );\cb1 \
\cb3     \cf9 \strokec9 // Implement auto-cancellation logic here\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 // This could involve setting a time-based trigger to auto-cancel the PO if not completed\cf4 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * filterAndFormatPRData - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ----------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Filters and formats PR data for display on the dashboard.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} data - Raw PR data from the sheet.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} organization - Organization filter.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} status - Status filter.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Array<Object>\} - Filtered and formatted PR data.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 filterAndFormatPRData\cf4 \strokec4 (\cf6 \strokec6 data\cf4 \strokec4 , \cf6 \strokec6 organization\cf4 \strokec4 , \cf6 \strokec6 status\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 data\cf4 \cb1 \strokec4 \
\cb3         .\cf6 \strokec6 filter\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4  => \{\cb1 \
\cb3             \cf9 \strokec9 // Apply organization filter\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 organization\cf4 \strokec4  && \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ORGANIZATION\cf4 \strokec4 ] !== \cf6 \strokec6 organization\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3             \cb1 \
\cb3             \cf9 \strokec9 // Apply status filter\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 status\cf4 \strokec4  && \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_STATUS\cf4 \strokec4 ] !== \cf6 \strokec6 status\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3             \cb1 \
\cb3             \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 true\cf4 \strokec4 ;\cb1 \
\cb3         \})\cb1 \
\cb3         .\cf6 \strokec6 map\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4  => \{\cb1 \
\cb3             \cf9 \strokec9 // Format data for display\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 prData\cf4 \strokec4  = \{\cb1 \
\cb3                 \cf6 \strokec6 prNumber\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_NUMBER\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 timestamp\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 description\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 DESCRIPTION\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 requestor\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 REQUESTOR_NAME\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 department\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 DEPARTMENT\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 daysOpen\cf4 \strokec4 : \cf6 \strokec6 calculateDaysOpen\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ]),\cb1 \
\cb3                 \cf6 \strokec6 urgency\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 URGENCY\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4  ? \cf8 \strokec8 'Urgent'\cf4 \strokec4  : \cf8 \strokec8 'Normal'\cf4 \strokec4 ,\cb1 \
\cb3                 \cf6 \strokec6 amount\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_AMOUNT\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 currency\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CURRENCY\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 vendor\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 VENDOR\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 approver\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 APPROVER\cf4 \strokec4 ],\cb1 \
\cb3                 \cf6 \strokec6 completion\cf4 \strokec4 : \cf6 \strokec6 calculateCompletionPercentage\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 ),\cb1 \
\cb3                 \cf6 \strokec6 procurementNotes\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PROCUREMENT_NOTES\cf4 \strokec4 ]\cb1 \
\cb3             \};\cb1 \
\
\cb3             \cf9 \strokec9 // Add status-specific fields\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 switch\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_STATUS\cf4 \strokec4 ]) \{\cb1 \
\cb3                 \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'Submitted'\cf4 \strokec4 :\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 submittedDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ];\cb1 \
\cb3                     \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3                 \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'In Queue'\cf4 \strokec4 :\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 queuePosition\cf4 \strokec4  = \cf6 \strokec6 calculateQueuePosition\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 , \cf6 \strokec6 data\cf4 \strokec4 );\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 quotesRequired\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 QUOTES_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ;\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 quotesStatus\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 QUOTES_LINK\cf4 \strokec4 ] ? \cf8 \strokec8 'Received'\cf4 \strokec4  : \cf8 \strokec8 'Pending'\cf4 \strokec4 ;\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 adjudicationRequired\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ADJ_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ;\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 adjudicationStatus\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ADJ_NOTES\cf4 \strokec4 ] ? \cf8 \strokec8 'Completed'\cf4 \strokec4  : \cf8 \strokec8 'Pending'\cf4 \strokec4 ;\cb1 \
\cb3                     \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3                 \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'Ordered'\cf4 \strokec4 :\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 orderedDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PO_DATE\cf4 \strokec4 ];\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 expectedLanding\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 EXPECTED_LANDING_DATE\cf4 \strokec4 ];\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 daysOverdue\cf4 \strokec4  = \cf6 \strokec6 calculateDaysOverdue\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 EXPECTED_LANDING_DATE\cf4 \strokec4 ]);\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 blockingItem\cf4 \strokec4  = \cf6 \strokec6 getDetailedBlockingItem\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 );\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 paymentDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PAYMENT_DATE\cf4 \strokec4 ];\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 shipmentStatus\cf4 \strokec4  = \{\cb1 \
\cb3                         \cf6 \strokec6 shipped\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 SHIPPED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ,\cb1 \
\cb3                         \cf6 \strokec6 shipmentDate\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 SHIPMENT_DATE\cf4 \strokec4 ],\cb1 \
\cb3                         \cf6 \strokec6 customsRequired\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ,\cb1 \
\cb3                         \cf6 \strokec6 customsCleared\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_CLEARED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ,\cb1 \
\cb3                         \cf6 \strokec6 customsClearanceDate\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 DATE_CLEARED\cf4 \strokec4 ],\cb1 \
\cb3                         \cf6 \strokec6 goodsLanded\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 GOODS_LANDED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ,\cb1 \
\cb3                         \cf6 \strokec6 landedDate\cf4 \strokec4 : \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 LANDED_DATE\cf4 \strokec4 ]\cb1 \
\cb3                     \};\cb1 \
\cb3                     \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3                 \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'R&R'\cf4 \strokec4 :\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rAndRDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_DATE\cf4 \strokec4 ] || \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Date\cf4 \strokec4 ();\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rAndRBy\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_BY\cf4 \strokec4 ] || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rAndRJustification\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_JUST\cf4 \strokec4 ] || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3                     \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3                 \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'Completed'\cf4 \strokec4 :\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 completedDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 LANDED_DATE\cf4 \strokec4 ];\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 timeToComplete\cf4 \strokec4  = \cf6 \strokec6 calculateBusinessDays\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ], \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 LANDED_DATE\cf4 \strokec4 ]);\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 timeToShip\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIME_TO_SHIP\cf4 \strokec4 ] || \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 timeInCustoms\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIME_IN_CUSTOMS\cf4 \strokec4 ] || \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 timeToLand\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIME_TO_LAND\cf4 \strokec4 ] || \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3                     \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3                 \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'Rejected'\cf4 \strokec4 :\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rejectionDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_DATE\cf4 \strokec4 ];\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rejectedBy\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_BY\cf4 \strokec4 ];\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 rejectionReason\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_JUST\cf4 \strokec4 ];\cb1 \
\cb3                     \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\
\cb3                 \cf5 \strokec5 case\cf4 \strokec4  \cf8 \strokec8 'Canceled'\cf4 \strokec4 :\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 cancelationDate\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_DATE\cf4 \strokec4 ];\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 canceledBy\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_BY\cf4 \strokec4 ];\cb1 \
\cb3                     \cf6 \strokec6 prData\cf4 \strokec4 .\cf6 \strokec6 cancelationReason\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 OVERRIDE_JUST\cf4 \strokec4 ];\cb1 \
\cb3                     \cf5 \strokec5 break\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\
\cb3             \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 prData\cf4 \strokec4 ;\cb1 \
\cb3         \});\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * calculateDashboardMetrics - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -------------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Calculates various metrics for the dashboard based on PR and PO data.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} data - Raw data from the sheet.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} organization - Organization filter.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} - Dashboard metrics.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 calculateDashboardMetrics\cf4 \strokec4 (\cf6 \strokec6 data\cf4 \strokec4 , \cf6 \strokec6 organization\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Calculating dashboard metrics for organization: '\cf4 \strokec4  + \cf6 \strokec6 organization\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 metrics\cf4 \strokec4  = \{\cb1 \
\cb3         \cf6 \strokec6 totalPRs\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 urgentPRs\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 avgDaysOpen\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 overduePRs\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 quotesRequired\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 adjudicationRequired\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 customsClearanceRequired\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 completionRate\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \cb1 \strokec4 \
\cb3     \};\cb1 \
\
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 totalDaysOpen\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 activePRs\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 completedPRs\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf6 \strokec6 totalCompletionPercentage\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 slice\cf4 \strokec4 (\cf10 \strokec10 1\cf4 \strokec4 ).\cf6 \strokec6 forEach\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4  => \{\cb1 \
\cb3         \cf9 \strokec9 // Apply organization filter\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 organization\cf4 \strokec4  || \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ORGANIZATION\cf4 \strokec4 ] === \cf6 \strokec6 organization\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 status\cf4 \strokec4  = \cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 PR_STATUS\cf4 \strokec4 ];\cb1 \
\
\cb3             \cf9 \strokec9 // Only process if status is recognized\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 statusData\cf4 \strokec4 .\cf6 \strokec6 countsByStatus\cf4 \strokec4 .\cf6 \strokec6 hasOwnProperty\cf4 \strokec4 (\cf6 \strokec6 status\cf4 \strokec4 )) \{\cb1 \
\cb3                 \cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 totalPRs\cf4 \strokec4 ++;\cb1 \
\cb3             \}\cb1 \
\
\cb3             \cf9 \strokec9 // Calculate metrics based on PR attributes\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 URGENCY\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 urgentPRs\cf4 \strokec4 ++;\cb1 \
\cb3             \}\cb1 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 QUOTES_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 quotesRequired\cf4 \strokec4 ++;\cb1 \
\cb3             \}\cb1 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 ADJ_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 adjudicationRequired\cf4 \strokec4 ++;\cb1 \
\cb3             \}\cb1 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 CUSTOMS_REQUIRED\cf4 \strokec4 ] === \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 customsClearanceRequired\cf4 \strokec4 ++;\cb1 \
\cb3             \}\cb1 \
\
\cb3             \cf9 \strokec9 // Calculate days open\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 daysOpen\cf4 \strokec4  = \cf6 \strokec6 calculateDaysOpen\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 TIMESTAMP\cf4 \strokec4 ]);\cb1 \
\cb3             \cf6 \strokec6 totalDaysOpen\cf4 \strokec4  += \cf6 \strokec6 daysOpen\cf4 \strokec4 ;\cb1 \
\cb3             \cf6 \strokec6 activePRs\cf4 \strokec4 ++;\cb1 \
\
\cb3             \cf9 \strokec9 // Calculate completion percentage\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 completion\cf4 \strokec4  = \cf6 \strokec6 calculateCompletionPercentage\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 );\cb1 \
\cb3             \cf6 \strokec6 totalCompletionPercentage\cf4 \strokec4  += \cf6 \strokec6 completion\cf4 \strokec4 ;\cb1 \
\
\cb3             \cf9 \strokec9 // Track completed PRs\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 status\cf4 \strokec4  === \cf8 \strokec8 'Completed'\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf6 \strokec6 completedPRs\cf4 \strokec4 ++;\cb1 \
\cb3             \}\cb1 \
\
\cb3             \cf9 \strokec9 // Track overdue PRs\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 status\cf4 \strokec4  === \cf8 \strokec8 'Ordered'\cf4 \strokec4  && \cf6 \strokec6 calculateDaysOverdue\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4 [\cf7 \strokec7 COL\cf4 \strokec4 .\cf7 \strokec7 EXPECTED_LANDING_DATE\cf4 \strokec4 ]) > \cf10 \strokec10 0\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 overduePRs\cf4 \strokec4 ++;\cb1 \
\cb3             \}\cb1 \
\cb3         \}\cb1 \
\cb3     \});\cb1 \
\
\cb3     \cf9 \strokec9 // Calculate average days open and completion rate\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf6 \strokec6 activePRs\cf4 \strokec4  > \cf10 \strokec10 0\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 avgDaysOpen\cf4 \strokec4  = \cf7 \strokec7 Math\cf4 \strokec4 .\cf6 \strokec6 round\cf4 \strokec4 (\cf6 \strokec6 totalDaysOpen\cf4 \strokec4  / \cf6 \strokec6 activePRs\cf4 \strokec4 );\cb1 \
\cb3         \cf6 \strokec6 metrics\cf4 \strokec4 .\cf6 \strokec6 completionRate\cf4 \strokec4  = \cf7 \strokec7 Math\cf4 \strokec4 .\cf6 \strokec6 round\cf4 \strokec4 (\cf6 \strokec6 totalCompletionPercentage\cf4 \strokec4  / \cf6 \strokec6 activePRs\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 'Updated dashboard metrics: '\cf4 \strokec4  + \cf7 \strokec7 JSON\cf4 \strokec4 .\cf6 \strokec6 stringify\cf4 \strokec4 (\cf6 \strokec6 metrics\cf4 \strokec4 ));\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 metrics\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * viewPRDetails - Function to Navigate to PR Details\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ---------------------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Redirects the user to the detailed view of a specific PR.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} prNumber - PR number to view.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 viewPRDetails\cf4 \strokec4 (\cf6 \strokec6 prNumber\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf9 \strokec9 // This function is intended to be called from the client-side\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 // Implement navigation logic as needed, possibly by setting a redirect URL\cf4 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * getActiveOrganizations - Helper Function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ----------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Retrieves a list of active organizations from the Organizations sheet.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Array<string>\} - List of active organizations.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf6 \strokec6 getActiveOrganizations\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 ss\cf4 \strokec4  = \cf7 \strokec7 SpreadsheetApp\cf4 \strokec4 .\cf6 \strokec6 openById\cf4 \strokec4 (\cf7 \strokec7 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 ss\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 'Failed to open spreadsheet with ID: '\cf4 \strokec4  + \cf7 \strokec7 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 sheet\cf4 \strokec4  = \cf6 \strokec6 ss\cf4 \strokec4 .\cf6 \strokec6 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 CONFIG\cf4 \strokec4 .\cf7 \strokec7 ORGANIZATIONS_TAB\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 sheet\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf7 \strokec7 Error\cf4 \strokec4 (\cf8 \strokec8 'Organizations sheet not found.'\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 data\cf4 \strokec4  = \cf6 \strokec6 sheet\cf4 \strokec4 .\cf6 \strokec6 getDataRange\cf4 \strokec4 ().\cf6 \strokec6 getValues\cf4 \strokec4 ();\cb1 \
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Retrieved \cf4 \strokec4 $\{\cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 length\cf4 \strokec4 \}\cf8 \strokec8  rows from Organizations sheet.`\cf4 \strokec4 );\cb1 \
\
\cb3         \cf9 \strokec9 // Assuming organizations are listed in the first column, excluding header\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 organizations\cf4 \strokec4  = \cf6 \strokec6 data\cf4 \strokec4 .\cf6 \strokec6 slice\cf4 \strokec4 (\cf10 \strokec10 1\cf4 \strokec4 ).\cf6 \strokec6 map\cf4 \strokec4 (\cf6 \strokec6 row\cf4 \strokec4  => \cf6 \strokec6 row\cf4 \strokec4 [\cf10 \strokec10 0\cf4 \strokec4 ]).\cf6 \strokec6 filter\cf4 \strokec4 (\cf6 \strokec6 org\cf4 \strokec4  => \cf6 \strokec6 org\cf4 \strokec4  && \cf6 \strokec6 org\cf4 \strokec4 .\cf6 \strokec6 trim\cf4 \strokec4 () !== \cf8 \strokec8 ''\cf4 \strokec4 );\cb1 \
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `Active organizations: \cf4 \strokec4 $\{\cf6 \strokec6 organizations\cf4 \strokec4 .\cf6 \strokec6 join\cf4 \strokec4 (\cf8 \strokec8 ', '\cf4 \strokec4 )\}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 organizations\cf4 \strokec4 ;\cb1 \
\cb3     \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf6 \strokec6 error\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf7 \strokec7 Logger\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf8 \strokec8 `ERROR: Error in getActiveOrganizations: \cf4 \strokec4 $\{\cf6 \strokec6 error\cf4 \strokec4 .\cf6 \strokec6 toString\cf4 \strokec4 ()\}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3         \cf6 \strokec6 console\cf4 \strokec4 .\cf6 \strokec6 error\cf4 \strokec4 (\cf8 \strokec8 'Error in getActiveOrganizations:'\cf4 \strokec4 , \cf6 \strokec6 error\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  [];\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
}