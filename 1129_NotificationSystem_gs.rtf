{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red21\green98\blue39;\red246\green247\blue249;\red46\green49\blue51;
\red20\green67\blue174;\red186\green6\blue115;\red162\green0\blue16;\red77\green80\blue85;\red24\green25\blue27;
\red18\green115\blue126;\red97\green3\blue173;}
{\*\expandedcolortbl;;\cssrgb\c7451\c45098\c20000;\cssrgb\c97255\c97647\c98039;\cssrgb\c23529\c25098\c26275;
\cssrgb\c9412\c35294\c73725;\cssrgb\c78824\c15294\c52549;\cssrgb\c70196\c7843\c7059;\cssrgb\c37255\c38824\c40784;\cssrgb\c12549\c12941\c14118;
\cssrgb\c3529\c52157\c56863;\cssrgb\c46275\c15294\c73333;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * NotificationSystem.gs\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 1PWR Procurement System - Email Notification and Reminder System\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Version: 1.1\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Last Updated: 2024-11-06\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Purpose:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Handles all automated email communications for the procurement system including:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Initial submission notifications\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Status change alerts\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Reminder schedules for ordered items\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Overdue warnings and auto-cancellation notices\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Dependencies:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Code.gs: Contains CONFIG and COL constants for sheet structure\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Master Log sheet: Source of PO data and status tracking\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Notification Log sheet: Records all sent notifications\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Reminders Log sheet: Tracks reminder schedules and intervals\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Sheet Structure Requirements:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 1. Master Log sheet columns (defined in COL constant):\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - PO Number (A)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Status (U)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Expected Landing Date (AK)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Shipped (AL)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Customs Required (AN)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Customs Cleared (AQ)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Goods Landed (AS)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 2. Notification Log sheet columns:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Timestamp\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Type\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - PR Number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Recipients\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Sent By\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 3. Reminders Log sheet columns:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - PR Number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Last Reminder Date\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Reminder Count\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Current Interval\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Blocking Item\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Business Rules:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 1. Reminder Intervals:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - First reminder: 5 days\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Second reminder: 2.5 days\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Third reminder: 1.25 days\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Subsequent: Daily\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 2. Auto-cancellation:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Warning at 30 days overdue\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Cancellation at 40 days if no update\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 3. Recipient Rules:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Standard notifications: Procurement, Requestor\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Overdue warnings: + Finance, Approvers\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *    - Customs warnings: Procurement, Finance, Approvers\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Change History:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 2024-11-06: \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   - Consolidated duplicate code\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   - Added comprehensive template validation\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   - Improved error handling\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Required fields by template type\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Maps each template to its required data fields\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 TEMPLATE_REQUIREMENTS\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 SUBMISSION\cf4 \strokec4 : [\cf7 \strokec7 'number'\cf4 \strokec4 , \cf7 \strokec7 'description'\cf4 \strokec4 , \cf7 \strokec7 'submitter'\cf4 \strokec4 , \cf7 \strokec7 'department'\cf4 \strokec4 , \cf7 \strokec7 'expectedDate'\cf4 \strokec4 , \cf7 \strokec7 'link'\cf4 \strokec4 ],\cb1 \
\cb3   \cf6 \strokec6 STATUS_CHANGE\cf4 \strokec4 : [\cf7 \strokec7 'number'\cf4 \strokec4 , \cf7 \strokec7 'description'\cf4 \strokec4 , \cf7 \strokec7 'oldStatus'\cf4 \strokec4 , \cf7 \strokec7 'newStatus'\cf4 \strokec4 , \cf7 \strokec7 'user'\cf4 \strokec4 , \cf7 \strokec7 'link'\cf4 \strokec4 ],\cb1 \
\cb3   \cf6 \strokec6 CANCELLATION_WARNING\cf4 \strokec4 : [\cf7 \strokec7 'number'\cf4 \strokec4 , \cf7 \strokec7 'description'\cf4 \strokec4 , \cf7 \strokec7 'daysOverdue'\cf4 \strokec4 , \cf7 \strokec7 'daysUntilCancel'\cf4 \strokec4 , \cf7 \strokec7 'expectedLandingDate'\cf4 \strokec4 , \cf7 \strokec7 'updateLink'\cf4 \strokec4 , \cf7 \strokec7 'link'\cf4 \strokec4 ],\cb1 \
\cb3   \cf6 \strokec6 CUSTOMS_WARNING_INITIAL\cf4 \strokec4 : [\cf7 \strokec7 'number'\cf4 \strokec4 , \cf7 \strokec7 'description'\cf4 \strokec4 , \cf7 \strokec7 'daysInCustoms'\cf4 \strokec4 , \cf7 \strokec7 'submissionDate'\cf4 \strokec4 , \cf7 \strokec7 'link'\cf4 \strokec4 ],\cb1 \
\cb3   \cf6 \strokec6 CUSTOMS_WARNING_REPEAT\cf4 \strokec4 : [\cf7 \strokec7 'number'\cf4 \strokec4 , \cf7 \strokec7 'description'\cf4 \strokec4 , \cf7 \strokec7 'daysInCustoms'\cf4 \strokec4 , \cf7 \strokec7 'submissionDate'\cf4 \strokec4 , \cf7 \strokec7 'link'\cf4 \strokec4 ]\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Email template configuration\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Defines all notification templates used in the system\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Templates use \{placeholder\} syntax for dynamic content\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 EMAIL_TEMPLATES\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 // Initial submission notification\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 SUBMISSION\cf4 \strokec4 : \{\cb1 \
\cb3     \cf9 \strokec9 subject\cf4 \strokec4 : \cf7 \strokec7 'PR \{number\} - \{description\} - New Submission'\cf4 \strokec4 ,\cb1 \
\cb3     \cf9 \strokec9 body\cf4 \strokec4 : \cf7 \strokec7 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 New Purchase Requisition submitted:\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 PR Number: \{number\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Description: \{description\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Submitted By: \{submitter\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Department: \{department\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Expected Date: \{expectedDate\}\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 View PR: \{link\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \},\cb1 \
\
\cb3   \cf8 \strokec8 // Status change notification\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 STATUS_CHANGE\cf4 \strokec4 : \{\cb1 \
\cb3     \cf9 \strokec9 subject\cf4 \strokec4 : \cf7 \strokec7 'PR \{number\} - Status Changed to \{newStatus\}'\cf4 \strokec4 ,\cb1 \
\cb3     \cf9 \strokec9 body\cf4 \strokec4 : \cf7 \strokec7 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 Status Update for Purchase Requisition:\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 PR Number: \{number\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Description: \{description\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Previous Status: \{oldStatus\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 New Status: \{newStatus\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Updated By: \{user\}\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 \{notes\}\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 View PR: \{link\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \},\cb1 \
\
\cb3   \cf8 \strokec8 // Cancellation warning\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 CANCELLATION_WARNING\cf4 \strokec4 : \{\cb1 \
\cb3     \cf9 \strokec9 subject\cf4 \strokec4 : \cf7 \strokec7 'URGENT: PR \{number\} - Auto-cancellation in \{daysUntilCancel\} days'\cf4 \strokec4 ,\cb1 \
\cb3     \cf9 \strokec9 body\cf4 \strokec4 : \cf7 \strokec7 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 WARNING: This PR will be automatically canceled in \{daysUntilCancel\} days if no action is taken.\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 PR Number: \{number\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Description: \{description\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Days Overdue: \{daysOverdue\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Expected Landing Date: \{expectedLandingDate\}\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 To prevent cancellation, please update the Expected Landing Date:\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 \{updateLink\}\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 View PR: \{link\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \},\cb1 \
\
\cb3   \cf8 \strokec8 // Initial customs warning\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 CUSTOMS_WARNING_INITIAL\cf4 \strokec4 : \{\cb1 \
\cb3     \cf9 \strokec9 subject\cf4 \strokec4 : \cf7 \strokec7 'PR \{number\} - Customs Clearance Alert'\cf4 \strokec4 ,\cb1 \
\cb3     \cf9 \strokec9 body\cf4 \strokec4 : \cf7 \strokec7 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 Customs Clearance Alert for Purchase Requisition:\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 PR Number: \{number\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Description: \{description\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Days in Customs: \{daysInCustoms\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Submission Date: \{submissionDate\}\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 Please follow up on customs clearance status.\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 View PR: \{link\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \},\cb1 \
\
\cb3   \cf8 \strokec8 // Repeat customs warning\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 CUSTOMS_WARNING_REPEAT\cf4 \strokec4 : \{\cb1 \
\cb3     \cf9 \strokec9 subject\cf4 \strokec4 : \cf7 \strokec7 'URGENT: PR \{number\} - Extended Customs Clearance Time'\cf4 \strokec4 ,\cb1 \
\cb3     \cf9 \strokec9 body\cf4 \strokec4 : \cf7 \strokec7 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 URGENT: Extended Customs Clearance Time Alert\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 PR Number: \{number\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Description: \{description\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Days in Customs: \{daysInCustoms\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 Submission Date: \{submissionDate\}\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 Immediate follow-up required on customs clearance status.\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 View PR: \{link\}\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \}\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Core Notification Functions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * =========================\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Main notification sending function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Validates data, processes template, and sends email\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} templateKey - Key of template in EMAIL_TEMPLATES\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Object\} data - Data to populate template placeholders\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array<string>\} recipients - Array of email addresses\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{boolean\} Success status\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Example:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * sendNotification('SUBMISSION', \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   number: 'PR-202411-001',\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   description: 'Office Supplies',\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   submitter: 'John Doe',\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   department: 'Operations',\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   expectedDate: '2024-12-01',\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *   link: 'https://...'\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \}, ['procurement@1pwrafrica.com', 'john.doe@1pwrafrica.com']);\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 sendNotification\cf4 \strokec4 (\cf9 \strokec9 templateKey\cf4 \strokec4 , \cf9 \strokec9 data\cf4 \strokec4 , \cf9 \strokec9 recipients\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 log\cf4 \strokec4 (\cf7 \strokec7 `Sending \cf4 \strokec4 $\{\cf9 \strokec9 templateKey\cf4 \strokec4 \}\cf7 \strokec7  notification to:`\cf4 \strokec4 , \cf9 \strokec9 recipients\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf8 \strokec8 // Validate template exists\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 template\cf4 \strokec4  = \cf6 \strokec6 EMAIL_TEMPLATES\cf4 \strokec4 [\cf9 \strokec9 templateKey\cf4 \strokec4 ];\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 template\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf7 \strokec7 `Template not found: \cf4 \strokec4 $\{\cf9 \strokec9 templateKey\cf4 \strokec4 \}\cf7 \strokec7 `\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf8 \strokec8 // Validate required fields\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 missingFields\cf4 \strokec4  = \cf9 \strokec9 validateRequiredFields\cf4 \strokec4 (\cf9 \strokec9 templateKey\cf4 \strokec4 , \cf9 \strokec9 data\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 missingFields\cf4 \strokec4 .\cf9 \strokec9 length\cf4 \strokec4  > \cf10 \strokec10 0\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf7 \strokec7 `Missing required fields: \cf4 \strokec4 $\{\cf9 \strokec9 missingFields\cf4 \strokec4 .\cf9 \strokec9 join\cf4 \strokec4 (\cf7 \strokec7 ', '\cf4 \strokec4 )\}\cf7 \strokec7 `\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf8 \strokec8 // Filter and validate recipients\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 validRecipients\cf4 \strokec4  = \cf9 \strokec9 validateRecipients\cf4 \strokec4 (\cf9 \strokec9 recipients\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 validRecipients\cf4 \strokec4 .\cf9 \strokec9 length\cf4 \strokec4  === \cf10 \strokec10 0\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf7 \strokec7 'No valid recipients after filtering'\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf8 \strokec8 // Process template\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \{ \cf9 \strokec9 subject\cf4 \strokec4 , \cf9 \strokec9 body\cf4 \strokec4  \} = \cf9 \strokec9 processTemplate\cf4 \strokec4 (\cf9 \strokec9 template\cf4 \strokec4 , \cf9 \strokec9 data\cf4 \strokec4 );\cb1 \
\
\cb3     \cf8 \strokec8 // Send email\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 GmailApp\cf4 \strokec4 .\cf9 \strokec9 sendEmail\cf4 \strokec4 (\cb1 \
\cb3         \cf9 \strokec9 validRecipients\cf4 \strokec4 .\cf9 \strokec9 join\cf4 \strokec4 (\cf7 \strokec7 ','\cf4 \strokec4 ),\cb1 \
\cb3         \cf9 \strokec9 subject\cf4 \strokec4 ,\cb1 \
\cb3         \cf9 \strokec9 body\cf4 \cb1 \strokec4 \
\cb3     );\cb1 \
\
\cb3     \cf8 \strokec8 // Log notification\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 logNotification\cf4 \strokec4 (\cf9 \strokec9 templateKey\cf4 \strokec4 , \cf9 \strokec9 data\cf4 \strokec4 .\cf9 \strokec9 number\cf4 \strokec4 , \cf9 \strokec9 validRecipients\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 log\cf4 \strokec4 (\cf7 \strokec7 `Successfully sent \cf4 \strokec4 $\{\cf9 \strokec9 templateKey\cf4 \strokec4 \}\cf7 \strokec7  notification`\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 true\cf4 \strokec4 ;\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 'Error sending notification:'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Validates required fields for template\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -----------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Checks if all required fields are present in data\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} templateKey - Template identifier\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Object\} data - Data to validate\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Array\} List of missing field names\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 validateRequiredFields\cf4 \strokec4 (\cf9 \strokec9 templateKey\cf4 \strokec4 , \cf9 \strokec9 data\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 requiredFields\cf4 \strokec4  = \cf6 \strokec6 TEMPLATE_REQUIREMENTS\cf4 \strokec4 [\cf9 \strokec9 templateKey\cf4 \strokec4 ] || [];\cb1 \
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf9 \strokec9 requiredFields\cf4 \strokec4 .\cf9 \strokec9 filter\cf4 \strokec4 (\cf9 \strokec9 field\cf4 \strokec4  => !\cf9 \strokec9 data\cf4 \strokec4 [\cf9 \strokec9 field\cf4 \strokec4 ]);\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Validates and filters recipient email addresses\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -------------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array<string>\} recipients - Array of email addresses\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Array<string>\} Array of valid email addresses\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 validateRecipients\cf4 \strokec4 (\cf9 \strokec9 recipients\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 Array\cf4 \strokec4 .\cf9 \strokec9 isArray\cf4 \strokec4 (\cf9 \strokec9 recipients\cf4 \strokec4 )) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 warn\cf4 \strokec4 (\cf7 \strokec7 'Recipients must be an array'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  [];\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf9 \strokec9 recipients\cf4 \strokec4 .\cf9 \strokec9 filter\cf4 \strokec4 (\cf9 \strokec9 email\cf4 \strokec4  => \{\cb1 \
\cb3     \cf8 \strokec8 // Remove undefined/null values\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 email\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf8 \strokec8 // Basic email format validation\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 isValid\cf4 \strokec4  = \cf9 \strokec9 email\cf4 \strokec4 .\cf9 \strokec9 includes\cf4 \strokec4 (\cf7 \strokec7 '@'\cf4 \strokec4 ) && \cb1 \
\cb3                    \cf9 \strokec9 email\cf4 \strokec4 .\cf9 \strokec9 includes\cf4 \strokec4 (\cf7 \strokec7 '.'\cf4 \strokec4 ) && \cb1 \
\cb3                    !\cf9 \strokec9 email\cf4 \strokec4 .\cf9 \strokec9 includes\cf4 \strokec4 (\cf7 \strokec7 ' '\cf4 \strokec4 ) &&\cb1 \
\cb3                    \cf9 \strokec9 email\cf4 \strokec4 .\cf9 \strokec9 length\cf4 \strokec4  > \cf10 \strokec10 5\cf4 \strokec4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 isValid\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 warn\cf4 \strokec4 (\cf7 \strokec7 `Invalid email address filtered out: \cf4 \strokec4 $\{\cf9 \strokec9 email\cf4 \strokec4 \}\cf7 \strokec7 `\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf9 \strokec9 isValid\cf4 \strokec4 ;\cb1 \
\cb3   \});\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Processes email template\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ----------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Replaces placeholders with actual data\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Object\} template - Email template\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Object\} data - Data for placeholders\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} Processed subject and body\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 processTemplate\cf4 \strokec4 (\cf9 \strokec9 template\cf4 \strokec4 , \cf9 \strokec9 data\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 let\cf4 \strokec4  \cf9 \strokec9 subject\cf4 \strokec4  = \cf9 \strokec9 template\cf4 \strokec4 .\cf9 \strokec9 subject\cf4 \strokec4 ;\cb1 \
\cb3   \cf5 \strokec5 let\cf4 \strokec4  \cf9 \strokec9 body\cf4 \strokec4  = \cf9 \strokec9 template\cf4 \strokec4 .\cf9 \strokec9 body\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf8 \strokec8 // Replace all placeholders\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 Object\cf4 \strokec4 .\cf9 \strokec9 keys\cf4 \strokec4 (\cf9 \strokec9 data\cf4 \strokec4 ).\cf9 \strokec9 forEach\cf4 \strokec4 (\cf9 \strokec9 key\cf4 \strokec4  => \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 placeholder\cf4 \strokec4  = \cf7 \strokec7 `\{\cf4 \strokec4 $\{\cf9 \strokec9 key\cf4 \strokec4 \}\cf7 \strokec7 \}`\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 value\cf4 \strokec4  = \cf9 \strokec9 data\cf4 \strokec4 [\cf9 \strokec9 key\cf4 \strokec4 ] || \cf7 \strokec7 ''\cf4 \strokec4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 // Replace all occurrences in both subject and body\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 subject\cf4 \strokec4  = \cf9 \strokec9 subject\cf4 \strokec4 .\cf9 \strokec9 replace\cf4 \strokec4 (\cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 RegExp\cf4 \strokec4 (\cf9 \strokec9 placeholder\cf4 \strokec4 , \cf7 \strokec7 'g'\cf4 \strokec4 ), \cf9 \strokec9 value\cf4 \strokec4 );\cb1 \
\cb3     \cf9 \strokec9 body\cf4 \strokec4  = \cf9 \strokec9 body\cf4 \strokec4 .\cf9 \strokec9 replace\cf4 \strokec4 (\cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 RegExp\cf4 \strokec4 (\cf9 \strokec9 placeholder\cf4 \strokec4 , \cf7 \strokec7 'g'\cf4 \strokec4 ), \cf9 \strokec9 value\cf4 \strokec4 );\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf8 \strokec8 // Remove any remaining placeholders\cf4 \cb1 \strokec4 \
\cb3   \cf9 \strokec9 subject\cf4 \strokec4  = \cf9 \strokec9 subject\cf4 \strokec4 .\cf9 \strokec9 replace\cf4 \strokec4 (\cf11 \cb3 \strokec11 /\\\{[^\}]+\\\}/\cf5 \cb3 \strokec5 g\cf4 \strokec4 , \cf7 \strokec7 ''\cf4 \strokec4 );\cb1 \
\cb3   \cf9 \strokec9 body\cf4 \strokec4  = \cf9 \strokec9 body\cf4 \strokec4 .\cf9 \strokec9 replace\cf4 \strokec4 (\cf11 \cb3 \strokec11 /\\\{[^\}]+\\\}/\cf5 \cb3 \strokec5 g\cf4 \strokec4 , \cf7 \strokec7 ''\cf4 \strokec4 );\cb1 \
\
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \{ \cf9 \strokec9 subject\cf4 \strokec4 , \cf9 \strokec9 body\cf4 \strokec4  \};\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Logs sent notification to tracking sheet\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} type - Notification type\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} prNumber - PR number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array<string>\} recipients - Recipients\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 logNotification\cf4 \strokec4 (\cf9 \strokec9 type\cf4 \strokec4 , \cf9 \strokec9 prNumber\cf4 \strokec4 , \cf9 \strokec9 recipients\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf9 \strokec9 openById\cf4 \strokec4 (\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 logSheet\cf4 \strokec4  = \cf9 \strokec9 ss\cf4 \strokec4 .\cf9 \strokec9 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Notification Log'\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 logSheet\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 'Notification Log sheet not found'\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf8 \strokec8 // Add log entry\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 logSheet\cf4 \strokec4 .\cf9 \strokec9 appendRow\cf4 \strokec4 ([\cb1 \
\cb3       \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (),                    \cf8 \strokec8 // Timestamp\cf4 \cb1 \strokec4 \
\cb3       \cf9 \strokec9 type\cf4 \strokec4 ,                         \cf8 \strokec8 // Notification type\cf4 \cb1 \strokec4 \
\cb3       \cf9 \strokec9 prNumber\cf4 \strokec4 ,                     \cf8 \strokec8 // PR number\cf4 \cb1 \strokec4 \
\cb3       \cf9 \strokec9 recipients\cf4 \strokec4 .\cf9 \strokec9 join\cf4 \strokec4 (\cf7 \strokec7 ', '\cf4 \strokec4 ),        \cf8 \strokec8 // Recipients\cf4 \cb1 \strokec4 \
\cb3       \cf6 \strokec6 Session\cf4 \strokec4 .\cf9 \strokec9 getActiveUser\cf4 \strokec4 ().\cf9 \strokec9 getEmail\cf4 \strokec4 () \cf8 \strokec8 // Sender\cf4 \cb1 \strokec4 \
\cb3     ]);\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 'Error logging notification:'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3     \cf8 \strokec8 // Don't throw - logging failure shouldn't stop the notification process\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Reminder Processing Functions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ===========================\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Main reminder processing function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Called daily by time-driven trigger\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Handles daily reminder checks and notifications\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Process Flow:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 1. Loads all active POs\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 2. Identifies items needing reminders\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 3. Processes each type of reminder\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 4. Updates reminder logs\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 processReminders\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 log\cf4 \strokec4 (\cf7 \strokec7 'Starting daily reminder processing'\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf9 \strokec9 getActiveSpreadsheet\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 sheet\cf4 \strokec4  = \cf9 \strokec9 ss\cf4 \strokec4 .\cf9 \strokec9 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 MASTER_LOG_TAB\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 data\cf4 \strokec4  = \cf9 \strokec9 sheet\cf4 \strokec4 .\cf9 \strokec9 getDataRange\cf4 \strokec4 ().\cf9 \strokec9 getValues\cf4 \strokec4 ();\cb1 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 // Process statistics\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf9 \strokec9 stats\cf4 \strokec4  = \{\cb1 \
\cb3       \cf9 \strokec9 processed\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 reminders\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 errors\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \cb1 \strokec4 \
\cb3     \};\cb1 \
\
\cb3     \cf8 \strokec8 // Process each PO (skip header row)\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 for\cf4 \strokec4  (\cf5 \strokec5 let\cf4 \strokec4  \cf9 \strokec9 i\cf4 \strokec4  = \cf10 \strokec10 1\cf4 \strokec4 ; \cf9 \strokec9 i\cf4 \strokec4  < \cf9 \strokec9 data\cf4 \strokec4 .\cf9 \strokec9 length\cf4 \strokec4 ; \cf9 \strokec9 i\cf4 \strokec4 ++) \{\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 row\cf4 \strokec4  = \cf9 \strokec9 data\cf4 \strokec4 [\cf9 \strokec9 i\cf4 \strokec4 ];\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 status\cf4 \strokec4  = \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 STATUS\cf4 \strokec4 ];\cb1 \
\cb3       \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 processed\cf4 \strokec4 ++;\cb1 \
\cb3       \cb1 \
\cb3       \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3         \cf8 \strokec8 // Process based on status\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 status\cf4 \strokec4  === \cf7 \strokec7 'Ordered'\cf4 \strokec4 ) \{\cb1 \
\cb3           \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 reminderSent\cf4 \strokec4  = \cf9 \strokec9 processOrderedReminders\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 , \cf9 \strokec9 i\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4 );\cb1 \
\cb3           \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 reminderSent\cf4 \strokec4 ) \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 reminders\cf4 \strokec4 ++;\cb1 \
\cb3         \}\cb1 \
\cb3       \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 `Error processing row \cf4 \strokec4 $\{\cf9 \strokec9 i\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4 \}\cf7 \strokec7 :`\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3         \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 errors\cf4 \strokec4 ++;\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 log\cf4 \strokec4 (\cf7 \strokec7 'Reminder processing complete:'\cf4 \strokec4 , \cf9 \strokec9 stats\cf4 \strokec4 );\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 'Fatal error in reminder processing:'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3     \cf8 \strokec8 // Send admin alert\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 sendAdminAlert\cf4 \strokec4 (\cf7 \strokec7 'Reminder Processing Failed'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Processes reminders for items in Ordered status\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -------------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Implements halving interval reminder system\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} row - Row data from Master Log\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{number\} rowIndex - 1-based row index\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{boolean\} Whether a reminder was sent\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 processOrderedReminders\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 , \cf9 \strokec9 rowIndex\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 poNumber\cf4 \strokec4  = \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 PO_NUMBER\cf4 \strokec4 ];\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 reminderData\cf4 \strokec4  = \cf9 \strokec9 getReminderData\cf4 \strokec4 (\cf9 \strokec9 poNumber\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf8 \strokec8 // Determine if reminder is needed\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \{ \cf9 \strokec9 shouldSend\cf4 \strokec4 , \cf9 \strokec9 interval\cf4 \strokec4  \} = \cf9 \strokec9 calculateReminderInterval\cf4 \strokec4 (\cf9 \strokec9 reminderData\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 shouldSend\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf8 \strokec8 // Get blocking item for notification\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 blockingItem\cf4 \strokec4  = \cf9 \strokec9 getDetailedBlockingItem\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 blockingItem\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf8 \strokec8 // Send reminder\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 success\cf4 \strokec4  = \cf9 \strokec9 sendReminderNotification\cf4 \strokec4 (\{\cb1 \
\cb3       \cf9 \strokec9 poNumber\cf4 \strokec4 : \cf9 \strokec9 poNumber\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 description\cf4 \strokec4 : \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 DESCRIPTION\cf4 \strokec4 ],\cb1 \
\cb3       \cf9 \strokec9 blockingItem\cf4 \strokec4 : \cf9 \strokec9 blockingItem\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 interval\cf4 \strokec4 : \cf9 \strokec9 interval\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 recipients\cf4 \strokec4 : \cf9 \strokec9 getReminderRecipients\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 , \cf9 \strokec9 blockingItem\cf4 \strokec4 )\cb1 \
\cb3     \});\cb1 \
\
\cb3     \cf8 \strokec8 // Update reminder log if sent successfully\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 success\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf9 \strokec9 updateReminderLog\cf4 \strokec4 (\cf9 \strokec9 poNumber\cf4 \strokec4 , \cf9 \strokec9 interval\cf4 \strokec4 , \cf9 \strokec9 blockingItem\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 true\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 `Error processing reminders for \cf4 \strokec4 $\{\cf9 \strokec9 poNumber\cf4 \strokec4 \}\cf7 \strokec7 :`\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Gets reminder data from Reminders Log\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ---------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} poNumber - PO number to look up\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} Reminder tracking data\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 getReminderData\cf4 \strokec4 (\cf9 \strokec9 poNumber\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf9 \strokec9 getActiveSpreadsheet\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 reminderSheet\cf4 \strokec4  = \cf9 \strokec9 ss\cf4 \strokec4 .\cf9 \strokec9 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Reminders Log'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 data\cf4 \strokec4  = \cf9 \strokec9 reminderSheet\cf4 \strokec4 .\cf9 \strokec9 getDataRange\cf4 \strokec4 ().\cf9 \strokec9 getValues\cf4 \strokec4 ();\cb1 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 // Find latest reminder entry for this PO\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 entry\cf4 \strokec4  = \cf9 \strokec9 data\cf4 \strokec4 .\cf9 \strokec9 reverse\cf4 \strokec4 ().\cf9 \strokec9 find\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4  => \cf9 \strokec9 row\cf4 \strokec4 [\cf10 \strokec10 0\cf4 \strokec4 ] === \cf9 \strokec9 poNumber\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 entry\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3         \cf9 \strokec9 lastReminder\cf4 \strokec4 : \cf5 \strokec5 null\cf4 \strokec4 ,\cb1 \
\cb3         \cf9 \strokec9 count\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3         \cf9 \strokec9 currentInterval\cf4 \strokec4 : \cf10 \strokec10 5\cf4 \strokec4  \cf8 \strokec8 // Start with 5-day interval\cf4 \cb1 \strokec4 \
\cb3       \};\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3       \cf9 \strokec9 lastReminder\cf4 \strokec4 : \cf9 \strokec9 entry\cf4 \strokec4 [\cf10 \strokec10 1\cf4 \strokec4 ], \cf8 \strokec8 // Last reminder date\cf4 \cb1 \strokec4 \
\cb3       \cf9 \strokec9 count\cf4 \strokec4 : \cf9 \strokec9 entry\cf4 \strokec4 [\cf10 \strokec10 2\cf4 \strokec4 ],        \cf8 \strokec8 // Reminder count\cf4 \cb1 \strokec4 \
\cb3       \cf9 \strokec9 currentInterval\cf4 \strokec4 : \cf9 \strokec9 entry\cf4 \strokec4 [\cf10 \strokec10 3\cf4 \strokec4 ] \cf8 \strokec8 // Current interval\cf4 \cb1 \strokec4 \
\cb3     \};\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 'Error getting reminder data:'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Calculates if reminder should be sent and at what interval\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ----------------------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Object\} reminderData - Current reminder tracking data\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} Decision and interval\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 calculateReminderInterval\cf4 \strokec4 (\cf9 \strokec9 reminderData\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 reminderData\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \{ \cf9 \strokec9 shouldSend\cf4 \strokec4 : \cf5 \strokec5 false\cf4 \strokec4  \};\cb1 \
\
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 now\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 lastReminder\cf4 \strokec4  = \cf9 \strokec9 reminderData\cf4 \strokec4 .\cf9 \strokec9 lastReminder\cf4 \strokec4  ? \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf9 \strokec9 reminderData\cf4 \strokec4 .\cf9 \strokec9 lastReminder\cf4 \strokec4 ) : \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf8 \strokec8 // First reminder\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 lastReminder\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3       \cf9 \strokec9 shouldSend\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 interval\cf4 \strokec4 : \cf10 \strokec10 5\cf4 \cb1 \strokec4 \
\cb3     \};\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf8 \strokec8 // Calculate days since last reminder\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 daysSinceReminder\cf4 \strokec4  = \cf9 \strokec9 calculateBusinessDays\cf4 \strokec4 (\cf9 \strokec9 lastReminder\cf4 \strokec4 , \cf9 \strokec9 now\cf4 \strokec4 );\cb1 \
\
\cb3   \cf8 \strokec8 // Calculate next interval\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 let\cf4 \strokec4  \cf9 \strokec9 nextInterval\cf4 \strokec4 ;\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 reminderData\cf4 \strokec4 .\cf9 \strokec9 count\cf4 \strokec4  <= \cf10 \strokec10 2\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf8 \strokec8 // Halving interval: 5 -> 2.5 -> 1.25\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 nextInterval\cf4 \strokec4  = \cf9 \strokec9 reminderData\cf4 \strokec4 .\cf9 \strokec9 currentInterval\cf4 \strokec4  / \cf10 \strokec10 2\cf4 \strokec4 ;\cb1 \
\cb3   \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3     \cf8 \strokec8 // Daily after third reminder\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 nextInterval\cf4 \strokec4  = \cf10 \strokec10 1\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3     \cf9 \strokec9 shouldSend\cf4 \strokec4 : \cf9 \strokec9 daysSinceReminder\cf4 \strokec4  >= \cf9 \strokec9 reminderData\cf4 \strokec4 .\cf9 \strokec9 currentInterval\cf4 \strokec4 ,\cb1 \
\cb3     \cf9 \strokec9 interval\cf4 \strokec4 : \cf9 \strokec9 nextInterval\cf4 \cb1 \strokec4 \
\cb3   \};\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Updates reminder tracking log\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * -------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} poNumber - PO number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{number\} interval - Reminder interval used\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Object\} blockingItem - Current blocking item\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 updateReminderLog\cf4 \strokec4 (\cf9 \strokec9 poNumber\cf4 \strokec4 , \cf9 \strokec9 interval\cf4 \strokec4 , \cf9 \strokec9 blockingItem\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf9 \strokec9 getActiveSpreadsheet\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 reminderSheet\cf4 \strokec4  = \cf9 \strokec9 ss\cf4 \strokec4 .\cf9 \strokec9 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Reminders Log'\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf9 \strokec9 reminderSheet\cf4 \strokec4 .\cf9 \strokec9 appendRow\cf4 \strokec4 ([\cb1 \
\cb3       \cf9 \strokec9 poNumber\cf4 \strokec4 ,\cb1 \
\cb3       \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (),\cb1 \
\cb3       \cf9 \strokec9 getReminderData\cf4 \strokec4 (\cf9 \strokec9 poNumber\cf4 \strokec4 )?.\cf9 \strokec9 count\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4  || \cf10 \strokec10 1\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 interval\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 blockingItem\cf4 \strokec4 .\cf9 \strokec9 type\cf4 \cb1 \strokec4 \
\cb3     ]);\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 'Error updating reminder log:'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Warning and Auto-Cancellation Functions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ====================================\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Processes customs clearance monitoring\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ----------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Called as part of daily reminder processing\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Monitors items in customs and sends appropriate warnings\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 processCustomsWarnings\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 log\cf4 \strokec4 (\cf7 \strokec7 'Starting customs warning processing'\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf9 \strokec9 getActiveSpreadsheet\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 sheet\cf4 \strokec4  = \cf9 \strokec9 ss\cf4 \strokec4 .\cf9 \strokec9 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 MASTER_LOG_TAB\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 data\cf4 \strokec4  = \cf9 \strokec9 sheet\cf4 \strokec4 .\cf9 \strokec9 getDataRange\cf4 \strokec4 ().\cf9 \strokec9 getValues\cf4 \strokec4 ();\cb1 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 // Track processing statistics\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf9 \strokec9 stats\cf4 \strokec4  = \{\cb1 \
\cb3       \cf9 \strokec9 checked\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 warnings\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 errors\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \cb1 \strokec4 \
\cb3     \};\cb1 \
\
\cb3     \cf8 \strokec8 // Skip header row\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 for\cf4 \strokec4  (\cf5 \strokec5 let\cf4 \strokec4  \cf9 \strokec9 i\cf4 \strokec4  = \cf10 \strokec10 1\cf4 \strokec4 ; \cf9 \strokec9 i\cf4 \strokec4  < \cf9 \strokec9 data\cf4 \strokec4 .\cf9 \strokec9 length\cf4 \strokec4 ; \cf9 \strokec9 i\cf4 \strokec4 ++) \{\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 row\cf4 \strokec4  = \cf9 \strokec9 data\cf4 \strokec4 [\cf9 \strokec9 i\cf4 \strokec4 ];\cb1 \
\cb3       \cb1 \
\cb3       \cf8 \strokec8 // Check if item requires customs clearance and is not cleared\cf4 \cb1 \strokec4 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 STATUS\cf4 \strokec4 ] === \cf7 \strokec7 'Ordered'\cf4 \strokec4  && \cb1 \
\cb3           \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 CUSTOMS_REQUIRED\cf4 \strokec4 ] === \cf7 \strokec7 'Y'\cf4 \strokec4  && \cb1 \
\cb3           \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 CUSTOMS_CLEARED\cf4 \strokec4 ] !== \cf7 \strokec7 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cb1 \
\cb3         \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 checked\cf4 \strokec4 ++;\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 submissionDate\cf4 \strokec4  = \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 CUSTOMS_SUBMISSION_DATE\cf4 \strokec4 ];\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 submissionDate\cf4 \strokec4 ) \cf5 \strokec5 continue\cf4 \strokec4 ;\cb1 \
\cb3         \cb1 \
\cb3         \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3           \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 daysInCustoms\cf4 \strokec4  = \cf9 \strokec9 calculateBusinessDays\cf4 \strokec4 (\cf9 \strokec9 submissionDate\cf4 \strokec4 , \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ());\cb1 \
\cb3           \cb1 \
\cb3           \cf8 \strokec8 // Initial 5-day warning\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 daysInCustoms\cf4 \strokec4  === \cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 CUSTOMS_WARNING_DAYS\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 sent\cf4 \strokec4  = \cf9 \strokec9 sendCustomsWarning\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 , \cf9 \strokec9 daysInCustoms\cf4 \strokec4 , \cf5 \strokec5 false\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 sent\cf4 \strokec4 ) \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 warnings\cf4 \strokec4 ++;\cb1 \
\cb3           \} \cb1 \
\cb3           \cf8 \strokec8 // Daily warnings after 5 days\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 else\cf4 \strokec4  \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 daysInCustoms\cf4 \strokec4  > \cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 CUSTOMS_WARNING_DAYS\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 sent\cf4 \strokec4  = \cf9 \strokec9 sendCustomsWarning\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 , \cf9 \strokec9 daysInCustoms\cf4 \strokec4 , \cf5 \strokec5 true\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 sent\cf4 \strokec4 ) \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 warnings\cf4 \strokec4 ++;\cb1 \
\cb3           \}\cb1 \
\cb3         \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3           \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 `Error processing customs warning for row \cf4 \strokec4 $\{\cf9 \strokec9 i\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4 \}\cf7 \strokec7 :`\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3           \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 errors\cf4 \strokec4 ++;\cb1 \
\cb3         \}\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 log\cf4 \strokec4 (\cf7 \strokec7 'Customs warning processing complete:'\cf4 \strokec4 , \cf9 \strokec9 stats\cf4 \strokec4 );\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 'Fatal error in customs warning processing:'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3     \cf9 \strokec9 sendAdminAlert\cf4 \strokec4 (\cf7 \strokec7 'Customs Warning Processing Failed'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Sends customs clearance warning\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ---------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} row - PO data row\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{number\} daysInCustoms - Number of days in customs\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{boolean\} isRepeat - Whether this is a repeat warning\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{boolean\} Success status\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 sendCustomsWarning\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 , \cf9 \strokec9 daysInCustoms\cf4 \strokec4 , \cf9 \strokec9 isRepeat\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 templateKey\cf4 \strokec4  = \cf9 \strokec9 isRepeat\cf4 \strokec4  ? \cf7 \strokec7 'CUSTOMS_WARNING_REPEAT'\cf4 \strokec4  : \cf7 \strokec7 'CUSTOMS_WARNING_INITIAL'\cf4 \strokec4 ;\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 recipients\cf4 \strokec4  = \cf9 \strokec9 getCustomsWarningRecipients\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf9 \strokec9 sendNotification\cf4 \strokec4 (\cf9 \strokec9 templateKey\cf4 \strokec4 , \{\cb1 \
\cb3     \cf9 \strokec9 number\cf4 \strokec4 : \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 PO_NUMBER\cf4 \strokec4 ],\cb1 \
\cb3     \cf9 \strokec9 description\cf4 \strokec4 : \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 DESCRIPTION\cf4 \strokec4 ],\cb1 \
\cb3     \cf9 \strokec9 daysInCustoms\cf4 \strokec4 : \cf9 \strokec9 daysInCustoms\cf4 \strokec4 ,\cb1 \
\cb3     \cf9 \strokec9 submissionDate\cf4 \strokec4 : \cf9 \strokec9 formatDate\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 CUSTOMS_SUBMISSION_DATE\cf4 \strokec4 ]),\cb1 \
\cb3     \cf9 \strokec9 link\cf4 \strokec4 : \cf9 \strokec9 generateViewLink\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 PO_NUMBER\cf4 \strokec4 ])\cb1 \
\cb3   \}, \cf9 \strokec9 recipients\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Gets recipients for customs warnings\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} row - PO data row\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Array<string>\} Array of email addresses\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 getCustomsWarningRecipients\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 return\cf4 \strokec4  [\cb1 \
\cb3     \cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 PROCUREMENT_EMAIL\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 FINANCE_EMAIL\cf4 \strokec4 ,\cb1 \
\cb3     \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 APPROVER_EMAIL\cf4 \strokec4 ]\cb1 \
\cb3   ].\cf9 \strokec9 filter\cf4 \strokec4 (\cf6 \strokec6 Boolean\cf4 \strokec4 ); \cf8 \strokec8 // Remove any null/undefined values\cf4 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Processes auto-cancellation monitoring\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ---------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Checks overdue items and handles warnings/cancellations\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 processAutoCancellation\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 log\cf4 \strokec4 (\cf7 \strokec7 'Starting auto-cancellation processing'\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf9 \strokec9 getActiveSpreadsheet\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 sheet\cf4 \strokec4  = \cf9 \strokec9 ss\cf4 \strokec4 .\cf9 \strokec9 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 MASTER_LOG_TAB\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 data\cf4 \strokec4  = \cf9 \strokec9 sheet\cf4 \strokec4 .\cf9 \strokec9 getDataRange\cf4 \strokec4 ().\cf9 \strokec9 getValues\cf4 \strokec4 ();\cb1 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf9 \strokec9 stats\cf4 \strokec4  = \{\cb1 \
\cb3       \cf9 \strokec9 checked\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 warnings\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 cancellations\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 errors\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \cb1 \strokec4 \
\cb3     \};\cb1 \
\
\cb3     \cf5 \strokec5 for\cf4 \strokec4  (\cf5 \strokec5 let\cf4 \strokec4  \cf9 \strokec9 i\cf4 \strokec4  = \cf10 \strokec10 1\cf4 \strokec4 ; \cf9 \strokec9 i\cf4 \strokec4  < \cf9 \strokec9 data\cf4 \strokec4 .\cf9 \strokec9 length\cf4 \strokec4 ; \cf9 \strokec9 i\cf4 \strokec4 ++) \{\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 row\cf4 \strokec4  = \cf9 \strokec9 data\cf4 \strokec4 [\cf9 \strokec9 i\cf4 \strokec4 ];\cb1 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 STATUS\cf4 \strokec4 ] !== \cf7 \strokec7 'Ordered'\cf4 \strokec4 ) \cf5 \strokec5 continue\cf4 \strokec4 ;\cb1 \
\cb3       \cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 expectedDate\cf4 \strokec4  = \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 EXPECTED_LANDING_DATE\cf4 \strokec4 ];\cb1 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 expectedDate\cf4 \strokec4 ) \cf5 \strokec5 continue\cf4 \strokec4 ;\cb1 \
\cb3       \cb1 \
\cb3       \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 checked\cf4 \strokec4 ++;\cb1 \
\cb3       \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 daysOverdue\cf4 \strokec4  = \cf9 \strokec9 calculateDaysOverdue\cf4 \strokec4 (\cf9 \strokec9 expectedDate\cf4 \strokec4 );\cb1 \
\cb3         \cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 daysOverdue\cf4 \strokec4  === \cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUTO_CANCEL_WARNING_DAYS\cf4 \strokec4 ) \{\cb1 \
\cb3           \cf8 \strokec8 // Send 30-day warning\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 sent\cf4 \strokec4  = \cf9 \strokec9 sendCancellationWarning\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 , \cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUTO_CANCEL_DAYS\cf4 \strokec4  - \cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUTO_CANCEL_WARNING_DAYS\cf4 \strokec4 );\cb1 \
\cb3           \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 sent\cf4 \strokec4 ) \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 warnings\cf4 \strokec4 ++;\cb1 \
\cb3         \}\cb1 \
\cb3         \cf5 \strokec5 else\cf4 \strokec4  \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 daysOverdue\cf4 \strokec4  === \cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUTO_CANCEL_DAYS\cf4 \strokec4  - \cf10 \strokec10 5\cf4 \strokec4 ) \{\cb1 \
\cb3           \cf8 \strokec8 // Send 5-day final warning\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 sent\cf4 \strokec4  = \cf9 \strokec9 sendCancellationWarning\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 , \cf10 \strokec10 5\cf4 \strokec4 );\cb1 \
\cb3           \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 sent\cf4 \strokec4 ) \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 warnings\cf4 \strokec4 ++;\cb1 \
\cb3         \}\cb1 \
\cb3         \cf5 \strokec5 else\cf4 \strokec4  \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 daysOverdue\cf4 \strokec4  >= \cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUTO_CANCEL_DAYS\cf4 \strokec4 ) \{\cb1 \
\cb3           \cf8 \strokec8 // Process auto-cancellation\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 success\cf4 \strokec4  = \cf9 \strokec9 processCancellation\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 , \cf9 \strokec9 i\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4 );\cb1 \
\cb3           \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 success\cf4 \strokec4 ) \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 cancellations\cf4 \strokec4 ++;\cb1 \
\cb3         \}\cb1 \
\cb3       \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 `Error processing auto-cancellation for row \cf4 \strokec4 $\{\cf9 \strokec9 i\cf4 \strokec4  + \cf10 \strokec10 1\cf4 \strokec4 \}\cf7 \strokec7 :`\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3         \cf9 \strokec9 stats\cf4 \strokec4 .\cf9 \strokec9 errors\cf4 \strokec4 ++;\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 log\cf4 \strokec4 (\cf7 \strokec7 'Auto-cancellation processing complete:'\cf4 \strokec4 , \cf9 \strokec9 stats\cf4 \strokec4 );\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 'Fatal error in auto-cancellation processing:'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3     \cf9 \strokec9 sendAdminAlert\cf4 \strokec4 (\cf7 \strokec7 'Auto-Cancellation Processing Failed'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Sends cancellation warning notification\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ----------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} row - PO data row\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{number\} daysRemaining - Days until cancellation\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{boolean\} Success status\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 sendCancellationWarning\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 , \cf9 \strokec9 daysRemaining\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf9 \strokec9 sendNotification\cf4 \strokec4 (\cf7 \strokec7 'CANCELLATION_WARNING'\cf4 \strokec4 , \{\cb1 \
\cb3     \cf9 \strokec9 number\cf4 \strokec4 : \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 PO_NUMBER\cf4 \strokec4 ],\cb1 \
\cb3     \cf9 \strokec9 description\cf4 \strokec4 : \cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 DESCRIPTION\cf4 \strokec4 ],\cb1 \
\cb3     \cf9 \strokec9 daysOverdue\cf4 \strokec4 : \cf9 \strokec9 calculateDaysOverdue\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 EXPECTED_LANDING_DATE\cf4 \strokec4 ]),\cb1 \
\cb3     \cf9 \strokec9 daysUntilCancel\cf4 \strokec4 : \cf9 \strokec9 daysRemaining\cf4 \strokec4 ,\cb1 \
\cb3     \cf9 \strokec9 expectedLandingDate\cf4 \strokec4 : \cf9 \strokec9 formatDate\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 EXPECTED_LANDING_DATE\cf4 \strokec4 ]),\cb1 \
\cb3     \cf9 \strokec9 updateLink\cf4 \strokec4 : \cf9 \strokec9 generateLandingDateUpdateLink\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 PO_NUMBER\cf4 \strokec4 ]),\cb1 \
\cb3     \cf9 \strokec9 link\cf4 \strokec4 : \cf9 \strokec9 generateViewLink\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 [\cf6 \strokec6 COL\cf4 \strokec4 .\cf6 \strokec6 PO_NUMBER\cf4 \strokec4 ])\cb1 \
\cb3   \}, \cf9 \strokec9 getAllStakeholders\cf4 \strokec4 (\cf9 \strokec9 row\cf4 \strokec4 ));\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Utility Functions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ===============\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Sends alert to system administrators\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Used for critical system errors\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} subject - Alert subject\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Error\} error - Error object\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 sendAdminAlert\cf4 \strokec4 (\cf9 \strokec9 subject\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 adminEmail\cf4 \strokec4  = \cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 SYSTEM_ADMIN_EMAIL\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 adminEmail\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf6 \strokec6 GmailApp\cf4 \strokec4 .\cf9 \strokec9 sendEmail\cf4 \strokec4 (\{\cb1 \
\cb3       \cf9 \strokec9 to\cf4 \strokec4 : \cf9 \strokec9 adminEmail\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 subject\cf4 \strokec4 : \cf7 \strokec7 `SYSTEM ALERT: \cf4 \strokec4 $\{\cf9 \strokec9 subject\cf4 \strokec4 \}\cf7 \strokec7 `\cf4 \strokec4 ,\cb1 \
\cb3       \cf9 \strokec9 body\cf4 \strokec4 : \cf7 \strokec7 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 Error in 1PWR Procurement System:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 $\{\cf9 \strokec9 error\cf4 \strokec4 .\cf9 \strokec9 message\cf4 \strokec4 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 Stack Trace:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 $\{\cf9 \strokec9 error\cf4 \strokec4 .\cf9 \strokec9 stack\cf4 \strokec4 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 Time: \cf4 \strokec4 $\{\cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ().\cf9 \strokec9 toISOString\cf4 \strokec4 ()\}\cb1 \
\cf7 \cb3 \strokec7       `\cf4 \strokec4 ,\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3       \cf9 \strokec9 noReply\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \cb1 \strokec4 \
\cb3     \});\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 e\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 'Failed to send admin alert:'\cf4 \strokec4 , \cf9 \strokec9 e\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Initialize notification system\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * --------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Sets up required sheets and triggers\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Should be run during system setup\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf9 \strokec9 initializeNotificationSystem\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf9 \strokec9 getActiveSpreadsheet\cf4 \strokec4 ();\cb1 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 // Create Notification Log if it doesn't exist\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 ss\cf4 \strokec4 .\cf9 \strokec9 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Notification Log'\cf4 \strokec4 )) \{\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 notificationLog\cf4 \strokec4  = \cf9 \strokec9 ss\cf4 \strokec4 .\cf9 \strokec9 insertSheet\cf4 \strokec4 (\cf7 \strokec7 'Notification Log'\cf4 \strokec4 );\cb1 \
\cb3       \cf9 \strokec9 notificationLog\cf4 \strokec4 .\cf9 \strokec9 getRange\cf4 \strokec4 (\cf7 \strokec7 'A1:E1'\cf4 \strokec4 ).\cf9 \strokec9 setValues\cf4 \strokec4 ([[\cf7 \strokec7 'Timestamp'\cf4 \strokec4 , \cf7 \strokec7 'Type'\cf4 \strokec4 , \cf7 \strokec7 'PR Number'\cf4 \strokec4 , \cf7 \strokec7 'Recipients'\cf4 \strokec4 , \cf7 \strokec7 'Sent By'\cf4 \strokec4 ]]);\cb1 \
\cb3       \cf9 \strokec9 notificationLog\cf4 \strokec4 .\cf9 \strokec9 setFrozenRows\cf4 \strokec4 (\cf10 \strokec10 1\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 // Create Reminders Log if it doesn't exist\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf9 \strokec9 ss\cf4 \strokec4 .\cf9 \strokec9 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Reminders Log'\cf4 \strokec4 )) \{\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf9 \strokec9 remindersLog\cf4 \strokec4  = \cf9 \strokec9 ss\cf4 \strokec4 .\cf9 \strokec9 insertSheet\cf4 \strokec4 (\cf7 \strokec7 'Reminders Log'\cf4 \strokec4 );\cb1 \
\cb3       \cf9 \strokec9 remindersLog\cf4 \strokec4 .\cf9 \strokec9 getRange\cf4 \strokec4 (\cf7 \strokec7 'A1:E1'\cf4 \strokec4 ).\cf9 \strokec9 setValues\cf4 \strokec4 ([[\cf7 \strokec7 'PR Number'\cf4 \strokec4 , \cf7 \strokec7 'Last Reminder Date'\cf4 \strokec4 , \cf7 \strokec7 'Reminder Count'\cf4 \strokec4 , \cf7 \strokec7 'Current Interval'\cf4 \strokec4 , \cf7 \strokec7 'Blocking Item'\cf4 \strokec4 ]]);\cb1 \
\cb3       \cf9 \strokec9 remindersLog\cf4 \strokec4 .\cf9 \strokec9 setFrozenRows\cf4 \strokec4 (\cf10 \strokec10 1\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 // Create triggers\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 createNotificationTriggers\cf4 \strokec4 ();\cb1 \
\cb3     \cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 log\cf4 \strokec4 (\cf7 \strokec7 'Notification system initialized successfully'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 true\cf4 \strokec4 ;\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf9 \strokec9 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf9 \strokec9 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf7 \strokec7 'Failed to initialize notification system:'\cf4 \strokec4 , \cf9 \strokec9 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
}