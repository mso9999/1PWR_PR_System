{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red21\green98\blue39;\red246\green247\blue249;\red46\green49\blue51;
\red109\green109\blue109;\red251\green0\blue7;\red42\green42\blue42;\red20\green67\blue174;\red18\green115\blue126;
\red162\green0\blue16;\red24\green25\blue27;\red77\green80\blue85;\red186\green6\blue115;}
{\*\expandedcolortbl;;\cssrgb\c7451\c45098\c20000;\cssrgb\c97255\c97647\c98039;\cssrgb\c23529\c25098\c26275;
\cssrgb\c50196\c50196\c50196;\cssrgb\c100000\c0\c0;\cssrgb\c21961\c21961\c21961;\cssrgb\c9412\c35294\c73725;\cssrgb\c3529\c52157\c56863;
\cssrgb\c70196\c7843\c7059;\cssrgb\c12549\c12941\c14118;\cssrgb\c37255\c38824\c40784;\cssrgb\c78824\c15294\c52549;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 <!-- SessionUtilities.html -->\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 <!DOCTYPE\cf6 \strokec6  html\cf5 \strokec5 >\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 <\cf8 \cb3 \strokec8 html\cf7 \cb3 \strokec7 >\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 <\cf8 \cb3 \strokec8 head\cf7 \cb3 \strokec7 >\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf7 \cb3 \strokec7 <\cf8 \cb3 \strokec8 base\cf4 \strokec4  \cf9 \strokec9 target\cf7 \cb3 \strokec7 =\cf10 \cb3 \strokec10 "_top"\cf7 \cb3 \strokec7 >\cf4 \cb1 \strokec4 \
\cb3   \cf7 \cb3 \strokec7 <\cf8 \cb3 \strokec8 title\cf7 \cb3 \strokec7 >\cf4 \cb3 \strokec4 Session Utilities\cf7 \cb3 \strokec7 </\cf8 \cb3 \strokec8 title\cf7 \cb3 \strokec7 >\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 </\cf8 \cb3 \strokec8 head\cf7 \cb3 \strokec7 >\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 <\cf8 \cb3 \strokec8 body\cf7 \cb3 \strokec7 >\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 <!-- No visible content needed for utilities -->\cf4 \cb1 \strokec4 \
\
\cb3   \cf7 \cb3 \strokec7 <\cf8 \cb3 \strokec8 script\cf7 \cb3 \strokec7 >\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2      * Helper function to close the window if possible, otherwise redirect to the specified URL.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      * @param \{string\} redirectUrl - The URL to redirect to if the window cannot be closed.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 function\cf4 \strokec4  \cf11 \strokec11 closeOrRedirect\cf4 \strokec4 (\cf11 \strokec11 redirectUrl\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf8 \strokec8 if\cf4 \strokec4  (\cf11 \strokec11 google\cf4 \strokec4  && \cf11 \strokec11 google\cf4 \strokec4 .\cf11 \strokec11 script\cf4 \strokec4  && \cf11 \strokec11 google\cf4 \strokec4 .\cf11 \strokec11 script\cf4 \strokec4 .\cf11 \strokec11 host\cf4 \strokec4  && \cf8 \strokec8 typeof\cf4 \strokec4  \cf11 \strokec11 google\cf4 \strokec4 .\cf11 \strokec11 script\cf4 \strokec4 .\cf11 \strokec11 host\cf4 \strokec4 .\cf11 \strokec11 close\cf4 \strokec4  === \cf10 \strokec10 'function'\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf8 \strokec8 try\cf4 \strokec4  \{\cb1 \
\cb3                 \cf12 \strokec12 // Attempt to close the window if running within Google Workspace\cf4 \cb1 \strokec4 \
\cb3                 \cf11 \strokec11 google\cf4 \strokec4 .\cf11 \strokec11 script\cf4 \strokec4 .\cf11 \strokec11 host\cf4 \strokec4 .\cf11 \strokec11 close\cf4 \strokec4 ();\cb1 \
\cb3             \} \cf8 \strokec8 catch\cf4 \strokec4  (\cf11 \strokec11 error\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 error\cf4 \strokec4 (\cf10 \strokec10 'Failed to close via google.script.host.close():'\cf4 \strokec4 , \cf11 \strokec11 error\cf4 \strokec4 );\cb1 \
\cb3                 \cf12 \strokec12 // If closing fails, perform a redirection\cf4 \cb1 \strokec4 \
\cb3                 \cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 location\cf4 \strokec4 .\cf11 \strokec11 href\cf4 \strokec4  = \cf11 \strokec11 redirectUrl\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\cb3         \} \cf8 \strokec8 else\cf4 \strokec4  \{\cb1 \
\cb3             \cf12 \strokec12 // Redirect to the specified URL in standalone web apps\cf4 \cb1 \strokec4 \
\cb3             \cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 location\cf4 \strokec4 .\cf11 \strokec11 href\cf4 \strokec4  = \cf11 \strokec11 redirectUrl\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf2 \strokec2 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2      * SessionUtils Object\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      * Manages session-related functionalities including retrieval, storage, clearing,\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      * appending to URLs, handling session expiry, and initializing session checks.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2  * SessionUtilities.html\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Core session management utilities for 1PWR Procurement System\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Handles session lifecycle, validation, navigation, and device tracking\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 const\cf4 \strokec4  \cf13 \strokec13 SessionUtils\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf12 \strokec12 // Core session data management\cf4 \cb1 \strokec4 \
\cb3     \cf11 \strokec11 getSessionId\cf4 \strokec4 () \{\cb1 \
\cb3         \cf8 \strokec8 try\cf4 \strokec4  \{\cb1 \
\cb3             \cf12 \strokec12 // Primary session ID retrieval from URL parameters\cf4 \cb1 \strokec4 \
\cb3             \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 urlParams\cf4 \strokec4  = \cf8 \strokec8 new\cf4 \strokec4  \cf13 \strokec13 URLSearchParams\cf4 \strokec4 (\cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 location\cf4 \strokec4 .\cf11 \strokec11 search\cf4 \strokec4 );\cb1 \
\cb3             \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 sessionId\cf4 \strokec4  = \cf11 \strokec11 urlParams\cf4 \strokec4 .\cf8 \strokec8 get\cf4 \strokec4 (\cf10 \strokec10 'sessionId'\cf4 \strokec4 );\cb1 \
\cb3             \cf8 \strokec8 if\cf4 \strokec4  (\cf11 \strokec11 sessionId\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf8 \strokec8 try\cf4 \strokec4  \{\cb1 \
\cb3                     \cf11 \strokec11 localStorage\cf4 \strokec4 .\cf11 \strokec11 setItem\cf4 \strokec4 (\cf10 \strokec10 'sessionId'\cf4 \strokec4 , \cf11 \strokec11 sessionId\cf4 \strokec4 );\cb1 \
\cb3                 \} \cf8 \strokec8 catch\cf4 \strokec4  (\cf11 \strokec11 e\cf4 \strokec4 ) \{\cb1 \
\cb3                     \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 warn\cf4 \strokec4 (\cf10 \strokec10 'Could not store session ID in localStorage:'\cf4 \strokec4 , \cf11 \strokec11 e\cf4 \strokec4 );\cb1 \
\cb3                 \}\cb1 \
\cb3                 \cf8 \strokec8 return\cf4 \strokec4  \cf11 \strokec11 sessionId\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\cb3             \cb1 \
\cb3             \cf12 \strokec12 // Fallback to localStorage\cf4 \cb1 \strokec4 \
\cb3             \cf8 \strokec8 return\cf4 \strokec4  \cf11 \strokec11 localStorage\cf4 \strokec4 .\cf11 \strokec11 getItem\cf4 \strokec4 (\cf10 \strokec10 'sessionId'\cf4 \strokec4 );\cb1 \
\cb3         \} \cf8 \strokec8 catch\cf4 \strokec4  (\cf11 \strokec11 e\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 warn\cf4 \strokec4 (\cf10 \strokec10 'Error getting session ID:'\cf4 \strokec4 , \cf11 \strokec11 e\cf4 \strokec4 );\cb1 \
\cb3             \cf8 \strokec8 return\cf4 \strokec4  \cf8 \strokec8 null\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf11 \strokec11 setSessionId\cf4 \strokec4 (\cf11 \strokec11 sessionId\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf8 \strokec8 if\cf4 \strokec4  (\cf11 \strokec11 sessionId\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf8 \strokec8 try\cf4 \strokec4  \{\cb1 \
\cb3                 \cf11 \strokec11 localStorage\cf4 \strokec4 .\cf11 \strokec11 setItem\cf4 \strokec4 (\cf10 \strokec10 'sessionId'\cf4 \strokec4 , \cf11 \strokec11 sessionId\cf4 \strokec4 );\cb1 \
\cb3                 \cf12 \strokec12 // Record device information for session tracking\cf4 \cb1 \strokec4 \
\cb3                 \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 recordDeviceInfo\cf4 \strokec4 (\cf11 \strokec11 sessionId\cf4 \strokec4 );\cb1 \
\cb3             \} \cf8 \strokec8 catch\cf4 \strokec4  (\cf11 \strokec11 e\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 warn\cf4 \strokec4 (\cf10 \strokec10 'Could not store session ID:'\cf4 \strokec4 , \cf11 \strokec11 e\cf4 \strokec4 );\cb1 \
\cb3             \}\cb1 \
\cb3         \}\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf11 \strokec11 clearSession\cf4 \strokec4 () \{\cb1 \
\cb3         \cf8 \strokec8 try\cf4 \strokec4  \{\cb1 \
\cb3             \cf11 \strokec11 localStorage\cf4 \strokec4 .\cf11 \strokec11 removeItem\cf4 \strokec4 (\cf10 \strokec10 'sessionId'\cf4 \strokec4 );\cb1 \
\cb3             \cf12 \strokec12 // Clear any cached session data\cf4 \cb1 \strokec4 \
\cb3             \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 clearSessionCache\cf4 \strokec4 ();\cb1 \
\cb3             \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'Session data cleared successfully'\cf4 \strokec4 );\cb1 \
\cb3         \} \cf8 \strokec8 catch\cf4 \strokec4  (\cf11 \strokec11 e\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 warn\cf4 \strokec4 (\cf10 \strokec10 'Could not clear session:'\cf4 \strokec4 , \cf11 \strokec11 e\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf12 \strokec12 // URL and navigation management\cf4 \cb1 \strokec4 \
\cb3     \cf11 \strokec11 appendSessionToUrl\cf4 \strokec4 (\cf11 \strokec11 url\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 sessionId\cf4 \strokec4  = \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 getSessionId\cf4 \strokec4 ();\cb1 \
\cb3         \cf8 \strokec8 if\cf4 \strokec4  (!\cf11 \strokec11 sessionId\cf4 \strokec4 ) \cf8 \strokec8 return\cf4 \strokec4  \cf11 \strokec11 url\cf4 \strokec4 ;\cb1 \
\cb3         \cb1 \
\cb3         \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 separator\cf4 \strokec4  = \cf11 \strokec11 url\cf4 \strokec4 .\cf11 \strokec11 includes\cf4 \strokec4 (\cf10 \strokec10 '?'\cf4 \strokec4 ) ? \cf10 \strokec10 '&'\cf4 \strokec4  : \cf10 \strokec10 '?'\cf4 \strokec4 ;\cb1 \
\cb3         \cf8 \strokec8 return\cf4 \strokec4  \cf10 \strokec10 `\cf4 \strokec4 $\{\cf11 \strokec11 url\cf4 \strokec4 \}$\{\cf11 \strokec11 separator\cf4 \strokec4 \}\cf10 \strokec10 sessionId=\cf4 \strokec4 $\{\cf11 \strokec11 encodeURIComponent\cf4 \strokec4 (\cf11 \strokec11 sessionId\cf4 \strokec4 )\}\cf10 \strokec10 `\cf4 \strokec4 ;\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf11 \strokec11 handleSessionExpiry\cf4 \strokec4 () \{\cb1 \
\cb3         \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'Handling session expiry'\cf4 \strokec4 );\cb1 \
\cb3         \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 clearSession\cf4 \strokec4 ();\cb1 \
\cb3         \cb1 \
\cb3         \cf12 \strokec12 // Notify server of session expiry\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 notifySessionExpiry\cf4 \strokec4 ();\cb1 \
\cb3         \cb1 \
\cb3         \cf11 \strokec11 google\cf4 \strokec4 .\cf11 \strokec11 script\cf4 \strokec4 .\cf11 \strokec11 run\cf4 \cb1 \strokec4 \
\cb3             .\cf11 \strokec11 withSuccessHandler\cf4 \strokec4 ((\cf11 \strokec11 url\cf4 \strokec4 ) => \{\cb1 \
\cb3                 \cf8 \strokec8 if\cf4 \strokec4  (!\cf11 \strokec11 url\cf4 \strokec4 ) \{\cb1 \
\cb3                     \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 error\cf4 \strokec4 (\cf10 \strokec10 'Failed to get login URL'\cf4 \strokec4 );\cb1 \
\cb3                     \cf12 \strokec12 // Fall back to default login path\cf4 \cb1 \strokec4 \
\cb3                     \cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 location\cf4 \strokec4 .\cf11 \strokec11 href\cf4 \strokec4  = \cf10 \strokec10 '/login.html'\cf4 \strokec4 ;\cb1 \
\cb3                     \cf8 \strokec8 return\cf4 \strokec4 ;\cb1 \
\cb3                 \}\cb1 \
\cb3                 \cb1 \
\cb3                 \cf12 \strokec12 // Use utility function for consistent navigation\cf4 \cb1 \strokec4 \
\cb3                 \cf11 \strokec11 closeOrRedirect\cf4 \strokec4 (\cf11 \strokec11 url\cf4 \strokec4  + \cf10 \strokec10 '?page=login'\cf4 \strokec4 );\cb1 \
\cb3             \})\cb1 \
\cb3             .\cf11 \strokec11 withFailureHandler\cf4 \strokec4 ((\cf11 \strokec11 error\cf4 \strokec4 ) => \{\cb1 \
\cb3                 \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 error\cf4 \strokec4 (\cf10 \strokec10 'Failed to handle session expiry:'\cf4 \strokec4 , \cf11 \strokec11 error\cf4 \strokec4 );\cb1 \
\cb3                 \cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 location\cf4 \strokec4 .\cf11 \strokec11 href\cf4 \strokec4  = \cf10 \strokec10 '/login.html'\cf4 \strokec4 ;\cb1 \
\cb3             \})\cb1 \
\cb3             .\cf11 \strokec11 getWebAppUrl\cf4 \strokec4 ();\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf12 \strokec12 // Session initialization and validation\cf4 \cb1 \strokec4 \
\cb3     \cf11 \strokec11 initializeSession\cf4 \strokec4 () \{\cb1 \
\cb3         \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'Initializing session management, current URL:'\cf4 \strokec4 , \cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 location\cf4 \strokec4 .\cf11 \strokec11 href\cf4 \strokec4 );\cb1 \
\cb3         \cb1 \
\cb3         \cf12 \strokec12 // Comprehensive login page detection\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 isLoginPage\cf4 \strokec4  = \cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 location\cf4 \strokec4 .\cf11 \strokec11 href\cf4 \strokec4 .\cf11 \strokec11 includes\cf4 \strokec4 (\cf10 \strokec10 'page=login'\cf4 \strokec4 ) ||\cb1 \
\cb3             \cf11 \strokec11 document\cf4 \strokec4 .\cf11 \strokec11 title\cf4 \strokec4 .\cf11 \strokec11 toLowerCase\cf4 \strokec4 ().\cf11 \strokec11 includes\cf4 \strokec4 (\cf10 \strokec10 'login'\cf4 \strokec4 ) ||\cb1 \
\cb3             \cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 location\cf4 \strokec4 .\cf11 \strokec11 href\cf4 \strokec4 .\cf11 \strokec11 includes\cf4 \strokec4 (\cf10 \strokec10 '/exec'\cf4 \strokec4 ) ||\cb1 \
\cb3             \cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 location\cf4 \strokec4 .\cf11 \strokec11 href\cf4 \strokec4 .\cf11 \strokec11 endsWith\cf4 \strokec4 (\cf10 \strokec10 '/dev'\cf4 \strokec4 );\cb1 \
\cb3         \cb1 \
\cb3         \cf8 \strokec8 if\cf4 \strokec4  (\cf11 \strokec11 isLoginPage\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'On login page, skipping session initialization'\cf4 \strokec4 );\cb1 \
\cb3             \cf8 \strokec8 return\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\cb3         \cb1 \
\cb3         \cf12 \strokec12 // Single session ID check\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 sessionId\cf4 \strokec4  = \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 getSessionId\cf4 \strokec4 ();\cb1 \
\cb3         \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'Session ID check result:'\cf4 \strokec4 , \cf11 \strokec11 sessionId\cf4 \strokec4  ? \cf10 \strokec10 'Found'\cf4 \strokec4  : \cf10 \strokec10 'Not found'\cf4 \strokec4 );\cb1 \
\cb3         \cb1 \
\cb3         \cf8 \strokec8 if\cf4 \strokec4  (!\cf11 \strokec11 sessionId\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'No session ID found, redirecting to login'\cf4 \strokec4 );\cb1 \
\cb3             \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 handleSessionExpiry\cf4 \strokec4 ();\cb1 \
\cb3             \cf8 \strokec8 return\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\cb3         \cb1 \
\cb3         \cf12 \strokec12 // Setup session monitoring\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 setupSessionCheck\cf4 \strokec4 (\cf11 \strokec11 sessionId\cf4 \strokec4 );\cb1 \
\cb3         \cf12 \strokec12 // Initialize activity tracking\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 initializeActivityTracking\cf4 \strokec4 ();\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf12 \strokec12 // Session monitoring and maintenance\cf4 \cb1 \strokec4 \
\cb3     \cf11 \strokec11 setupSessionCheck\cf4 \strokec4 (\cf11 \strokec11 sessionId\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'Setting up session check'\cf4 \strokec4 );\cb1 \
\cb3         \cb1 \
\cb3         \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 checkInterval\cf4 \strokec4  = \cf11 \strokec11 setInterval\cf4 \strokec4 (() => \{\cb1 \
\cb3             \cf8 \strokec8 if\cf4 \strokec4  (\cf11 \strokec11 document\cf4 \strokec4 .\cf11 \strokec11 hidden\cf4 \strokec4 ) \cf8 \strokec8 return\cf4 \strokec4 ;\cb1 \
\
\cb3             \cf11 \strokec11 google\cf4 \strokec4 .\cf11 \strokec11 script\cf4 \strokec4 .\cf11 \strokec11 run\cf4 \cb1 \strokec4 \
\cb3                 .\cf11 \strokec11 withSuccessHandler\cf4 \strokec4 ((\cf11 \strokec11 isValid\cf4 \strokec4 ) => \{\cb1 \
\cb3                     \cf8 \strokec8 if\cf4 \strokec4  (!\cf11 \strokec11 isValid\cf4 \strokec4 ) \{\cb1 \
\cb3                         \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'Session check failed, clearing interval and handling expiry'\cf4 \strokec4 );\cb1 \
\cb3                         \cf11 \strokec11 clearInterval\cf4 \strokec4 (\cf11 \strokec11 checkInterval\cf4 \strokec4 );\cb1 \
\cb3                         \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 handleSessionExpiry\cf4 \strokec4 ();\cb1 \
\cb3                     \} \cf8 \strokec8 else\cf4 \strokec4  \{\cb1 \
\cb3                         \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'Session check passed'\cf4 \strokec4 );\cb1 \
\cb3                         \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 updateLastActivity\cf4 \strokec4 ();\cb1 \
\cb3                     \}\cb1 \
\cb3                 \})\cb1 \
\cb3                 .\cf11 \strokec11 withFailureHandler\cf4 \strokec4 ((\cf11 \strokec11 error\cf4 \strokec4 ) => \{\cb1 \
\cb3                     \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 error\cf4 \strokec4 (\cf10 \strokec10 'Session check failed:'\cf4 \strokec4 , \cf11 \strokec11 error\cf4 \strokec4 );\cb1 \
\cb3                     \cf11 \strokec11 clearInterval\cf4 \strokec4 (\cf11 \strokec11 checkInterval\cf4 \strokec4 );\cb1 \
\cb3                     \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 handleSessionExpiry\cf4 \strokec4 ();\cb1 \
\cb3                 \})\cb1 \
\cb3                 .\cf11 \strokec11 validateSession\cf4 \strokec4 (\cf11 \strokec11 sessionId\cf4 \strokec4 );\cb1 \
\cb3         \}, \cf9 \strokec9 5\cf4 \strokec4  * \cf9 \strokec9 60\cf4 \strokec4  * \cf9 \strokec9 1000\cf4 \strokec4 ); \cf12 \strokec12 // 5 minute interval\cf4 \cb1 \strokec4 \
\
\cb3         \cf12 \strokec12 // Cleanup on page unload\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 addEventListener\cf4 \strokec4 (\cf10 \strokec10 'beforeunload'\cf4 \strokec4 , () => \{\cb1 \
\cb3             \cf11 \strokec11 clearInterval\cf4 \strokec4 (\cf11 \strokec11 checkInterval\cf4 \strokec4 );\cb1 \
\cb3         \});\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf12 \strokec12 // Device and activity tracking\cf4 \cb1 \strokec4 \
\cb3     \cf11 \strokec11 recordDeviceInfo\cf4 \strokec4 (\cf11 \strokec11 sessionId\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf8 \strokec8 try\cf4 \strokec4  \{\cb1 \
\cb3             \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 deviceInfo\cf4 \strokec4  = \{\cb1 \
\cb3                 \cf11 \strokec11 userAgent\cf4 \strokec4 : \cf11 \strokec11 navigator\cf4 \strokec4 .\cf11 \strokec11 userAgent\cf4 \strokec4 ,\cb1 \
\cb3                 \cf11 \strokec11 timestamp\cf4 \strokec4 : \cf8 \strokec8 new\cf4 \strokec4  \cf13 \strokec13 Date\cf4 \strokec4 ().\cf11 \strokec11 toISOString\cf4 \strokec4 (),\cb1 \
\cb3                 \cf11 \strokec11 screenSize\cf4 \strokec4 : \cf10 \strokec10 `\cf4 \strokec4 $\{\cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 screen\cf4 \strokec4 .\cf11 \strokec11 width\cf4 \strokec4 \}\cf10 \strokec10 x\cf4 \strokec4 $\{\cf11 \strokec11 window\cf4 \strokec4 .\cf11 \strokec11 screen\cf4 \strokec4 .\cf11 \strokec11 height\cf4 \strokec4 \}\cf10 \strokec10 `\cf4 \strokec4 ,\cb1 \
\cb3                 \cf11 \strokec11 timeZone\cf4 \strokec4 : \cf13 \strokec13 Intl\cf4 \strokec4 .\cf13 \strokec13 DateTimeFormat\cf4 \strokec4 ().\cf11 \strokec11 resolvedOptions\cf4 \strokec4 ().\cf11 \strokec11 timeZone\cf4 \cb1 \strokec4 \
\cb3             \};\cb1 \
\cb3             \cb1 \
\cb3             \cf11 \strokec11 google\cf4 \strokec4 .\cf11 \strokec11 script\cf4 \strokec4 .\cf11 \strokec11 run\cf4 \cb1 \strokec4 \
\cb3                 .\cf11 \strokec11 withFailureHandler\cf4 \strokec4 ((\cf11 \strokec11 error\cf4 \strokec4 ) => \{\cb1 \
\cb3                     \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 error\cf4 \strokec4 (\cf10 \strokec10 'Failed to record device info:'\cf4 \strokec4 , \cf11 \strokec11 error\cf4 \strokec4 );\cb1 \
\cb3                 \})\cb1 \
\cb3                 .\cf11 \strokec11 recordSessionDevice\cf4 \strokec4 (\cf11 \strokec11 sessionId\cf4 \strokec4 , \cf11 \strokec11 deviceInfo\cf4 \strokec4 );\cb1 \
\cb3         \} \cf8 \strokec8 catch\cf4 \strokec4  (\cf11 \strokec11 e\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 warn\cf4 \strokec4 (\cf10 \strokec10 'Error recording device info:'\cf4 \strokec4 , \cf11 \strokec11 e\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf11 \strokec11 initializeActivityTracking\cf4 \strokec4 () \{\cb1 \
\cb3         \cf8 \strokec8 let\cf4 \strokec4  \cf11 \strokec11 activityTimeout\cf4 \strokec4 ;\cb1 \
\cb3         \cb1 \
\cb3         \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 resetTimeout\cf4 \strokec4  = () => \{\cb1 \
\cb3             \cf8 \strokec8 if\cf4 \strokec4  (\cf11 \strokec11 activityTimeout\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf11 \strokec11 clearTimeout\cf4 \strokec4 (\cf11 \strokec11 activityTimeout\cf4 \strokec4 );\cb1 \
\cb3             \}\cb1 \
\cb3             \cb1 \
\cb3             \cf11 \strokec11 activityTimeout\cf4 \strokec4  = \cf11 \strokec11 setTimeout\cf4 \strokec4 (() => \{\cb1 \
\cb3                 \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'Activity timeout reached'\cf4 \strokec4 );\cb1 \
\cb3                 \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 handleSessionExpiry\cf4 \strokec4 ();\cb1 \
\cb3             \}, \cf9 \strokec9 30\cf4 \strokec4  * \cf9 \strokec9 60\cf4 \strokec4  * \cf9 \strokec9 1000\cf4 \strokec4 ); \cf12 \strokec12 // 30 minute timeout\cf4 \cb1 \strokec4 \
\cb3         \};\cb1 \
\
\cb3         \cf12 \strokec12 // Track user activity\cf4 \cb1 \strokec4 \
\cb3         [\cf10 \strokec10 'mousedown'\cf4 \strokec4 , \cf10 \strokec10 'keypress'\cf4 \strokec4 , \cf10 \strokec10 'scroll'\cf4 \strokec4 , \cf10 \strokec10 'touchstart'\cf4 \strokec4 ].\cf11 \strokec11 forEach\cf4 \strokec4 (\cf11 \strokec11 event\cf4 \strokec4  => \{\cb1 \
\cb3             \cf11 \strokec11 document\cf4 \strokec4 .\cf11 \strokec11 addEventListener\cf4 \strokec4 (\cf11 \strokec11 event\cf4 \strokec4 , () => \{\cb1 \
\cb3                 \cf11 \strokec11 resetTimeout\cf4 \strokec4 ();\cb1 \
\cb3                 \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 updateLastActivity\cf4 \strokec4 ();\cb1 \
\cb3             \});\cb1 \
\cb3         \});\cb1 \
\
\cb3         \cf11 \strokec11 resetTimeout\cf4 \strokec4 ();\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf12 \strokec12 // Cache management\cf4 \cb1 \strokec4 \
\cb3     \cf11 \strokec11 clearSessionCache\cf4 \strokec4 () \{\cb1 \
\cb3         \cf8 \strokec8 try\cf4 \strokec4  \{\cb1 \
\cb3             \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 cacheKeys\cf4 \strokec4  = [\cf10 \strokec10 'userPermissions'\cf4 \strokec4 , \cf10 \strokec10 'sessionData'\cf4 \strokec4 , \cf10 \strokec10 'activityLog'\cf4 \strokec4 ];\cb1 \
\cb3             \cf11 \strokec11 cacheKeys\cf4 \strokec4 .\cf11 \strokec11 forEach\cf4 \strokec4 (\cf11 \strokec11 key\cf4 \strokec4  => \{\cb1 \
\cb3                 \cf11 \strokec11 localStorage\cf4 \strokec4 .\cf11 \strokec11 removeItem\cf4 \strokec4 (\cf11 \strokec11 key\cf4 \strokec4 );\cb1 \
\cb3             \});\cb1 \
\cb3         \} \cf8 \strokec8 catch\cf4 \strokec4  (\cf11 \strokec11 e\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 warn\cf4 \strokec4 (\cf10 \strokec10 'Error clearing session cache:'\cf4 \strokec4 , \cf11 \strokec11 e\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf11 \strokec11 updateLastActivity\cf4 \strokec4 () \{\cb1 \
\cb3         \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 sessionId\cf4 \strokec4  = \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 getSessionId\cf4 \strokec4 ();\cb1 \
\cb3         \cf8 \strokec8 if\cf4 \strokec4  (!\cf11 \strokec11 sessionId\cf4 \strokec4 ) \cf8 \strokec8 return\cf4 \strokec4 ;\cb1 \
\
\cb3         \cf11 \strokec11 google\cf4 \strokec4 .\cf11 \strokec11 script\cf4 \strokec4 .\cf11 \strokec11 run\cf4 \cb1 \strokec4 \
\cb3             .\cf11 \strokec11 withFailureHandler\cf4 \strokec4 ((\cf11 \strokec11 error\cf4 \strokec4 ) => \{\cb1 \
\cb3                 \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 error\cf4 \strokec4 (\cf10 \strokec10 'Failed to update activity:'\cf4 \strokec4 , \cf11 \strokec11 error\cf4 \strokec4 );\cb1 \
\cb3             \})\cb1 \
\cb3             .\cf11 \strokec11 updateSessionActivity\cf4 \strokec4 (\cf11 \strokec11 sessionId\cf4 \strokec4 );\cb1 \
\cb3     \},\cb1 \
\
\cb3     \cf11 \strokec11 notifySessionExpiry\cf4 \strokec4 () \{\cb1 \
\cb3         \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 sessionId\cf4 \strokec4  = \cf8 \strokec8 this\cf4 \strokec4 .\cf11 \strokec11 getSessionId\cf4 \strokec4 ();\cb1 \
\cb3         \cf8 \strokec8 if\cf4 \strokec4  (!\cf11 \strokec11 sessionId\cf4 \strokec4 ) \cf8 \strokec8 return\cf4 \strokec4 ;\cb1 \
\
\cb3         \cf11 \strokec11 google\cf4 \strokec4 .\cf11 \strokec11 script\cf4 \strokec4 .\cf11 \strokec11 run\cf4 \cb1 \strokec4 \
\cb3             .\cf11 \strokec11 withFailureHandler\cf4 \strokec4 ((\cf11 \strokec11 error\cf4 \strokec4 ) => \{\cb1 \
\cb3                 \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 error\cf4 \strokec4 (\cf10 \strokec10 'Failed to notify session expiry:'\cf4 \strokec4 , \cf11 \strokec11 error\cf4 \strokec4 );\cb1 \
\cb3             \})\cb1 \
\cb3             .\cf11 \strokec11 logSessionExpiry\cf4 \strokec4 (\cf11 \strokec11 sessionId\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb3 \strokec12 // Initialize session management when DOM is loaded\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 document\cf4 \strokec4 .\cf11 \strokec11 addEventListener\cf4 \strokec4 (\cf10 \strokec10 'DOMContentLoaded'\cf4 \strokec4 , () => \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf11 \strokec11 console\cf4 \strokec4 .\cf11 \strokec11 log\cf4 \strokec4 (\cf10 \strokec10 'DOM loaded, initializing session management'\cf4 \strokec4 );\cb1 \
\cb3     \cf13 \strokec13 SessionUtils\cf4 \strokec4 .\cf11 \strokec11 initializeSession\cf4 \strokec4 ();\cb1 \
\cb3 \});\cb1 \
\cb3   \cf7 \cb3 \strokec7 </\cf8 \cb3 \strokec8 script\cf7 \cb3 \strokec7 >\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 </\cf8 \cb3 \strokec8 body\cf7 \cb3 \strokec7 >\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 </\cf8 \cb3 \strokec8 html\cf7 \cb3 \strokec7 >\cf4 \cb1 \strokec4 \
}