{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red21\green98\blue39;\red246\green247\blue249;\red46\green49\blue51;
\red20\green67\blue174;\red186\green6\blue115;\red77\green80\blue85;\red162\green0\blue16;\red18\green115\blue126;
\red24\green25\blue27;\red97\green3\blue173;}
{\*\expandedcolortbl;;\cssrgb\c7451\c45098\c20000;\cssrgb\c97255\c97647\c98039;\cssrgb\c23529\c25098\c26275;
\cssrgb\c9412\c35294\c73725;\cssrgb\c78824\c15294\c52549;\cssrgb\c37255\c38824\c40784;\cssrgb\c70196\c7843\c7059;\cssrgb\c3529\c52157\c56863;
\cssrgb\c12549\c12941\c14118;\cssrgb\c46275\c15294\c73333;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * SharedUtils.gs (Refactored)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Part 1 of 3: Core Configuration and Session Management\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Last Updated: 2024-11-21\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * This file contains consolidated utility functions for the PR system.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Major changes:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 1. Consolidated duplicate session management functions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 2. Unified configuration objects\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 3. Streamlined authentication logic\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 4. Enhanced error handling and logging\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Integration Notes:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Previous getCurrentUserShared() calls should now use getCurrentUser()\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Previous validateSheetSession() calls should now use validateSession()\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Previous isAuthorizedShared() calls should now use isAuthorized()\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Session management configuration\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Consolidated from multiple session configs\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf7 \strokec7 // Sheet configuration\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 SHEET_NAME\cf4 \strokec4 : \cf8 \strokec8 'Session Log'\cf4 \strokec4 ,\cb1 \
\cb3   \cf6 \strokec6 CLEANUP_FREQUENCY\cf4 \strokec4 : \cf9 \strokec9 60\cf4 \strokec4 , \cf7 \strokec7 // minutes\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf7 \strokec7 // Timeouts\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 INACTIVITY_TIMEOUT\cf4 \strokec4 : \cf9 \strokec9 30\cf4 \strokec4 , \cf7 \strokec7 // minutes\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 SESSION_DURATION\cf4 \strokec4 : \cf9 \strokec9 1440\cf4 \strokec4 , \cf7 \strokec7 // 24 hours\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf7 \strokec7 // Column indices\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 COLUMNS\cf4 \strokec4 : \{\cb1 \
\cb3     \cf6 \strokec6 SESSION_ID\cf4 \strokec4 : \cf9 \strokec9 0\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 TIMESTAMP\cf4 \strokec4 : \cf9 \strokec9 1\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 USERNAME\cf4 \strokec4 : \cf9 \strokec9 2\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 EMAIL\cf4 \strokec4 : \cf9 \strokec9 3\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 ROLE\cf4 \strokec4 : \cf9 \strokec9 4\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 LAST_ACTIVITY\cf4 \strokec4 : \cf9 \strokec9 5\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 STATUS\cf4 \strokec4 : \cf9 \strokec9 6\cf4 \cb1 \strokec4 \
\cb3   \},\cb1 \
\cb3   \cb1 \
\cb3   \cf7 \strokec7 // Status values\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 STATUS\cf4 \strokec4 : \{\cb1 \
\cb3     \cf6 \strokec6 ACTIVE\cf4 \strokec4 : \cf8 \strokec8 'Active'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 EXPIRED\cf4 \strokec4 : \cf8 \strokec8 'Expired'\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Role hierarchy configuration\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Consolidated from multiple auth checks\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 ROLE_HIERARCHY\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 'procurement'\cf4 \strokec4 : [\cf8 \strokec8 'procurement'\cf4 \strokec4 ],\cb1 \
\cb3   \cf8 \strokec8 'finance'\cf4 \strokec4 : [\cf8 \strokec8 'procurement'\cf4 \strokec4 , \cf8 \strokec8 'finance'\cf4 \strokec4 ],\cb1 \
\cb3   \cf8 \strokec8 'approver'\cf4 \strokec4 : [\cf8 \strokec8 'procurement'\cf4 \strokec4 , \cf8 \strokec8 'approver'\cf4 \strokec4 ],\cb1 \
\cb3   \cf8 \strokec8 'requestor'\cf4 \strokec4 : [\cf8 \strokec8 'procurement'\cf4 \strokec4 , \cf8 \strokec8 'finance'\cf4 \strokec4 , \cf8 \strokec8 'approver'\cf4 \strokec4 , \cf8 \strokec8 'requestor'\cf4 \strokec4 ]\cb1 \
\cb3 \};\cb1 \
\
\
\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Checks if user is authorized for a role - Consolidated from isAuthorizedShared\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Object\} user - User object with email and optional username\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} requiredRole - Role to check\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{boolean\} Whether user is authorized\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 isAuthorized\cf4 \strokec4 (\cf10 \strokec10 user\cf4 \strokec4 , \cf10 \strokec10 requiredRole\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 user\cf4 \strokec4  || !\cf10 \strokec10 requiredRole\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf10 \strokec10 openById\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 REQUESTOR_SHEET_NAME\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 sheet\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 data\cf4 \strokec4  = \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getDataRange\cf4 \strokec4 ().\cf10 \strokec10 getValues\cf4 \strokec4 ();\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Find user row\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 userRow\cf4 \strokec4  = \cf10 \strokec10 data\cf4 \strokec4 .\cf10 \strokec10 find\cf4 \strokec4 (\cf10 \strokec10 row\cf4 \strokec4  =>\cb1 \
\cb3       (\cf10 \strokec10 row\cf4 \strokec4 [\cf9 \strokec9 1\cf4 \strokec4 ].\cf10 \strokec10 toString\cf4 \strokec4 ().\cf10 \strokec10 trim\cf4 \strokec4 ().\cf10 \strokec10 toLowerCase\cf4 \strokec4 () === \cf10 \strokec10 user\cf4 \strokec4 .\cf10 \strokec10 email\cf4 \strokec4 .\cf10 \strokec10 toLowerCase\cf4 \strokec4 ()) ||\cb1 \
\cb3       (\cf10 \strokec10 row\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ].\cf10 \strokec10 toString\cf4 \strokec4 ().\cf10 \strokec10 trim\cf4 \strokec4 ().\cf10 \strokec10 toLowerCase\cf4 \strokec4 () === \cf10 \strokec10 user\cf4 \strokec4 .\cf10 \strokec10 username\cf4 \strokec4 ?.\cf10 \strokec10 toLowerCase\cf4 \strokec4 ())\cb1 \
\cb3     );\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 userRow\cf4 \strokec4  || \cf10 \strokec10 userRow\cf4 \strokec4 [\cf9 \strokec9 3\cf4 \strokec4 ].\cf10 \strokec10 toString\cf4 \strokec4 ().\cf10 \strokec10 toUpperCase\cf4 \strokec4 () !== \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 userRole\cf4 \strokec4  = \cf10 \strokec10 userRow\cf4 \strokec4 [\cf9 \strokec9 5\cf4 \strokec4 ].\cf10 \strokec10 toString\cf4 \strokec4 ().\cf10 \strokec10 trim\cf4 \strokec4 ().\cf10 \strokec10 toLowerCase\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 ROLE_HIERARCHY\cf4 \strokec4 [\cf10 \strokec10 requiredRole\cf4 \strokec4 ]?.\cf10 \strokec10 includes\cf4 \strokec4 (\cf10 \strokec10 userRole\cf4 \strokec4 ) || \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error in isAuthorized:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * SharedUtils.gs (Refactored)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Part 2 of 3: Utility Functions and Error Handling\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Last Updated: 2024-11-21\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * This section contains utility functions for:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Error handling and display\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Date formatting and calculations\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Loading state management\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - URL parameter handling\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Input validation\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Integration Notes:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Previous showFieldError() calls remain unchanged\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Previous calculateBusinessDays() calls remain unchanged\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - formatDate() and formatDateTime() have been enhanced with better error handling\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * UI Error Display Configuration\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 ERROR_DISPLAY\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 TYPES\cf4 \strokec4 : \{\cb1 \
\cb3     \cf6 \strokec6 ERROR\cf4 \strokec4 : \cf8 \strokec8 'error'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 WARNING\cf4 \strokec4 : \cf8 \strokec8 'warning'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 INFO\cf4 \strokec4 : \cf8 \strokec8 'info'\cf4 \cb1 \strokec4 \
\cb3   \},\cb1 \
\cb3   \cf6 \strokec6 CLASSES\cf4 \strokec4 : \{\cb1 \
\cb3     \cf6 \strokec6 ERROR\cf4 \strokec4 : \cf8 \strokec8 'invalid-input'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 MESSAGE\cf4 \strokec4 : \cf8 \strokec8 'error-message'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 SYSTEM\cf4 \strokec4 : \cf8 \strokec8 'system-message'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 HIDDEN\cf4 \strokec4 : \cf8 \strokec8 'hidden'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 SHAKE\cf4 \strokec4 : \cf8 \strokec8 'shake'\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Shows error message for specific form field\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} fieldId - ID of form field\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} message - Error message\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 showFieldError\cf4 \strokec4 (\cf10 \strokec10 fieldId\cf4 \strokec4 , \cf10 \strokec10 message\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 field\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf10 \strokec10 fieldId\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 field\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf7 \strokec7 // Add error styling to field\cf4 \cb1 \strokec4 \
\cb3   \cf10 \strokec10 field\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 add\cf4 \strokec4 (\cf6 \strokec6 ERROR_DISPLAY\cf4 \strokec4 .\cf6 \strokec6 CLASSES\cf4 \strokec4 .\cf6 \strokec6 ERROR\cf4 \strokec4 );\cb1 \
\cb3   \cf10 \strokec10 field\cf4 \strokec4 .\cf10 \strokec10 setAttribute\cf4 \strokec4 (\cf8 \strokec8 'aria-invalid'\cf4 \strokec4 , \cf8 \strokec8 'true'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Show error message\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 errorSpan\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 `\cf4 \strokec4 $\{\cf10 \strokec10 fieldId\cf4 \strokec4 \}\cf8 \strokec8 Error`\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 errorSpan\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 errorSpan\cf4 \strokec4 .\cf10 \strokec10 textContent\cf4 \strokec4  = \cf10 \strokec10 message\cf4 \strokec4 ;\cb1 \
\cb3     \cf10 \strokec10 errorSpan\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 remove\cf4 \strokec4 (\cf6 \strokec6 ERROR_DISPLAY\cf4 \strokec4 .\cf6 \strokec6 CLASSES\cf4 \strokec4 .\cf6 \strokec6 HIDDEN\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf7 \strokec7 // Add shake animation\cf4 \cb1 \strokec4 \
\cb3   \cf10 \strokec10 field\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 add\cf4 \strokec4 (\cf6 \strokec6 ERROR_DISPLAY\cf4 \strokec4 .\cf6 \strokec6 CLASSES\cf4 \strokec4 .\cf6 \strokec6 SHAKE\cf4 \strokec4 );\cb1 \
\cb3   \cf10 \strokec10 setTimeout\cf4 \strokec4 (() => \cf10 \strokec10 field\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 remove\cf4 \strokec4 (\cf6 \strokec6 ERROR_DISPLAY\cf4 \strokec4 .\cf6 \strokec6 CLASSES\cf4 \strokec4 .\cf6 \strokec6 SHAKE\cf4 \strokec4 ), \cf9 \strokec9 500\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Clears all error messages and styling\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 clearErrors\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf7 \strokec7 // Clear field errors\cf4 \cb1 \strokec4 \
\cb3   \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 querySelectorAll\cf4 \strokec4 (\cf8 \strokec8 `.\cf4 \strokec4 $\{\cf6 \strokec6 ERROR_DISPLAY\cf4 \strokec4 .\cf6 \strokec6 CLASSES\cf4 \strokec4 .\cf6 \strokec6 ERROR\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 ).\cf10 \strokec10 forEach\cf4 \strokec4 (\cf10 \strokec10 field\cf4 \strokec4  => \{\cb1 \
\cb3     \cf10 \strokec10 field\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 remove\cf4 \strokec4 (\cf6 \strokec6 ERROR_DISPLAY\cf4 \strokec4 .\cf6 \strokec6 CLASSES\cf4 \strokec4 .\cf6 \strokec6 ERROR\cf4 \strokec4 );\cb1 \
\cb3     \cf10 \strokec10 field\cf4 \strokec4 .\cf10 \strokec10 removeAttribute\cf4 \strokec4 (\cf8 \strokec8 'aria-invalid'\cf4 \strokec4 );\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf7 \strokec7 // Hide error messages\cf4 \cb1 \strokec4 \
\cb3   \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 querySelectorAll\cf4 \strokec4 (\cf8 \strokec8 `.\cf4 \strokec4 $\{\cf6 \strokec6 ERROR_DISPLAY\cf4 \strokec4 .\cf6 \strokec6 CLASSES\cf4 \strokec4 .\cf6 \strokec6 MESSAGE\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 ).\cf10 \strokec10 forEach\cf4 \strokec4 (\cf10 \strokec10 message\cf4 \strokec4  => \{\cb1 \
\cb3     \cf10 \strokec10 message\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 add\cf4 \strokec4 (\cf6 \strokec6 ERROR_DISPLAY\cf4 \strokec4 .\cf6 \strokec6 CLASSES\cf4 \strokec4 .\cf6 \strokec6 HIDDEN\cf4 \strokec4 );\cb1 \
\cb3     \cf10 \strokec10 message\cf4 \strokec4 .\cf10 \strokec10 textContent\cf4 \strokec4  = \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf7 \strokec7 // Remove system messages\cf4 \cb1 \strokec4 \
\cb3   \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 querySelectorAll\cf4 \strokec4 (\cf8 \strokec8 `.\cf4 \strokec4 $\{\cf6 \strokec6 ERROR_DISPLAY\cf4 \strokec4 .\cf6 \strokec6 CLASSES\cf4 \strokec4 .\cf6 \strokec6 SYSTEM\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 ).\cf10 \strokec10 forEach\cf4 \strokec4 (\cf10 \strokec10 message\cf4 \strokec4  => \{\cb1 \
\cb3     \cf10 \strokec10 message\cf4 \strokec4 .\cf10 \strokec10 remove\cf4 \strokec4 ();\cb1 \
\cb3   \});\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Date formatting configuration\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 DATE_FORMAT\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 OPTIONS\cf4 \strokec4 : \{\cb1 \
\cb3     \cf10 \strokec10 short\cf4 \strokec4 : \{ \cf10 \strokec10 year\cf4 \strokec4 : \cf8 \strokec8 'numeric'\cf4 \strokec4 , \cf10 \strokec10 month\cf4 \strokec4 : \cf8 \strokec8 'short'\cf4 \strokec4 , \cf10 \strokec10 day\cf4 \strokec4 : \cf8 \strokec8 'numeric'\cf4 \strokec4  \},\cb1 \
\cb3     \cf10 \strokec10 long\cf4 \strokec4 : \{ \cf10 \strokec10 year\cf4 \strokec4 : \cf8 \strokec8 'numeric'\cf4 \strokec4 , \cf10 \strokec10 month\cf4 \strokec4 : \cf8 \strokec8 'long'\cf4 \strokec4 , \cf10 \strokec10 day\cf4 \strokec4 : \cf8 \strokec8 'numeric'\cf4 \strokec4  \},\cb1 \
\cb3     \cf10 \strokec10 iso\cf4 \strokec4 : \{ \cf10 \strokec10 year\cf4 \strokec4 : \cf8 \strokec8 'numeric'\cf4 \strokec4 , \cf10 \strokec10 month\cf4 \strokec4 : \cf8 \strokec8 '2-digit'\cf4 \strokec4 , \cf10 \strokec10 day\cf4 \strokec4 : \cf8 \strokec8 '2-digit'\cf4 \strokec4  \}\cb1 \
\cb3   \},\cb1 \
\cb3   \cf6 \strokec6 TIME_OPTIONS\cf4 \strokec4 : \{\cb1 \
\cb3     \cf10 \strokec10 standard\cf4 \strokec4 : \{\cb1 \
\cb3       \cf10 \strokec10 hour\cf4 \strokec4 : \cf8 \strokec8 '2-digit'\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 minute\cf4 \strokec4 : \cf8 \strokec8 '2-digit'\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 hour12\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \cb1 \strokec4 \
\cb3     \},\cb1 \
\cb3     \cf10 \strokec10 detailed\cf4 \strokec4 : \{\cb1 \
\cb3       \cf10 \strokec10 hour\cf4 \strokec4 : \cf8 \strokec8 '2-digit'\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 minute\cf4 \strokec4 : \cf8 \strokec8 '2-digit'\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 second\cf4 \strokec4 : \cf8 \strokec8 '2-digit'\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 hour12\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \cb1 \strokec4 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Formats date for display\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Date|string\} date - Date to format\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} [format='short'] - Format style (short, long, iso)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{string\} Formatted date string\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 formatDate\cf4 \strokec4 (\cf10 \strokec10 date\cf4 \strokec4 , \cf10 \strokec10 format\cf4 \strokec4  = \cf8 \strokec8 'short'\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 date\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 dateObj\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf10 \strokec10 date\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 isNaN\cf4 \strokec4 (\cf10 \strokec10 dateObj\cf4 \strokec4 .\cf10 \strokec10 getTime\cf4 \strokec4 ())) \{\cb1 \
\cb3       \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 warn\cf4 \strokec4 (\cf8 \strokec8 'Invalid date input:'\cf4 \strokec4 , \cf10 \strokec10 date\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 format\cf4 \strokec4  === \cf8 \strokec8 'iso'\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 dateObj\cf4 \strokec4 .\cf10 \strokec10 toISOString\cf4 \strokec4 ().\cf10 \strokec10 split\cf4 \strokec4 (\cf8 \strokec8 'T'\cf4 \strokec4 )[\cf9 \strokec9 0\cf4 \strokec4 ];\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 dateObj\cf4 \strokec4 .\cf10 \strokec10 toLocaleDateString\cf4 \strokec4 (\cf5 \strokec5 undefined\cf4 \strokec4 , \cf6 \strokec6 DATE_FORMAT\cf4 \strokec4 .\cf6 \strokec6 OPTIONS\cf4 \strokec4 [\cf10 \strokec10 format\cf4 \strokec4 ] || \cf6 \strokec6 DATE_FORMAT\cf4 \strokec4 .\cf6 \strokec6 OPTIONS\cf4 \strokec4 .\cf10 \strokec10 short\cf4 \strokec4 );\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Date formatting error:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 date\cf4 \strokec4 .\cf10 \strokec10 toString\cf4 \strokec4 ();\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Formats date and time for display\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Date|string\} datetime - Date/time to format\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{boolean\} [includeSeconds=false] - Whether to include seconds\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{string\} Formatted date/time string\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 formatDateTime\cf4 \strokec4 (\cf10 \strokec10 datetime\cf4 \strokec4 , \cf10 \strokec10 includeSeconds\cf4 \strokec4  = \cf5 \strokec5 false\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 datetime\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 dateObj\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf10 \strokec10 datetime\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 isNaN\cf4 \strokec4 (\cf10 \strokec10 dateObj\cf4 \strokec4 .\cf10 \strokec10 getTime\cf4 \strokec4 ())) \{\cb1 \
\cb3       \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 warn\cf4 \strokec4 (\cf8 \strokec8 'Invalid datetime input:'\cf4 \strokec4 , \cf10 \strokec10 datetime\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 timeOptions\cf4 \strokec4  = \cf10 \strokec10 includeSeconds\cf4 \strokec4  ? \cf6 \strokec6 DATE_FORMAT\cf4 \strokec4 .\cf6 \strokec6 TIME_OPTIONS\cf4 \strokec4 .\cf10 \strokec10 detailed\cf4 \strokec4  : \cf6 \strokec6 DATE_FORMAT\cf4 \strokec4 .\cf6 \strokec6 TIME_OPTIONS\cf4 \strokec4 .\cf10 \strokec10 standard\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 datePart\cf4 \strokec4  = \cf10 \strokec10 dateObj\cf4 \strokec4 .\cf10 \strokec10 toLocaleDateString\cf4 \strokec4 (\cf5 \strokec5 undefined\cf4 \strokec4 , \cf6 \strokec6 DATE_FORMAT\cf4 \strokec4 .\cf6 \strokec6 OPTIONS\cf4 \strokec4 .\cf10 \strokec10 short\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 timePart\cf4 \strokec4  = \cf10 \strokec10 dateObj\cf4 \strokec4 .\cf10 \strokec10 toLocaleTimeString\cf4 \strokec4 (\cf5 \strokec5 undefined\cf4 \strokec4 , \cf10 \strokec10 timeOptions\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 `\cf4 \strokec4 $\{\cf10 \strokec10 datePart\cf4 \strokec4 \}\cf8 \strokec8  at \cf4 \strokec4 $\{\cf10 \strokec10 timePart\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 ;\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'DateTime formatting error:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 datetime\cf4 \strokec4 .\cf10 \strokec10 toString\cf4 \strokec4 ();\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Calculates business days between two dates\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Date|string\} startDate - Start date\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Date|string\} endDate - End date\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{number\} Number of business days\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 calculateBusinessDays\cf4 \strokec4 (\cf10 \strokec10 startDate\cf4 \strokec4 , \cf10 \strokec10 endDate\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 start\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf10 \strokec10 startDate\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 end\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf10 \strokec10 endDate\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 isNaN\cf4 \strokec4 (\cf10 \strokec10 start\cf4 \strokec4 .\cf10 \strokec10 getTime\cf4 \strokec4 ()) || \cf10 \strokec10 isNaN\cf4 \strokec4 (\cf10 \strokec10 end\cf4 \strokec4 .\cf10 \strokec10 getTime\cf4 \strokec4 ())) \{\cb1 \
\cb3       \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 warn\cf4 \strokec4 (\cf8 \strokec8 'Invalid date input for business days calculation'\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 return\cf4 \strokec4  \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf10 \strokec10 count\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf10 \strokec10 current\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf10 \strokec10 start\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 while\cf4 \strokec4  (\cf10 \strokec10 current\cf4 \strokec4  <= \cf10 \strokec10 end\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf7 \strokec7 // Skip weekends (0 = Sunday, 6 = Saturday)\cf4 \cb1 \strokec4 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 current\cf4 \strokec4 .\cf10 \strokec10 getDay\cf4 \strokec4 () !== \cf9 \strokec9 0\cf4 \strokec4  && \cf10 \strokec10 current\cf4 \strokec4 .\cf10 \strokec10 getDay\cf4 \strokec4 () !== \cf9 \strokec9 6\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf10 \strokec10 count\cf4 \strokec4 ++;\cb1 \
\cb3       \}\cb1 \
\cb3       \cf10 \strokec10 current\cf4 \strokec4 .\cf10 \strokec10 setDate\cf4 \strokec4 (\cf10 \strokec10 current\cf4 \strokec4 .\cf10 \strokec10 getDate\cf4 \strokec4 () + \cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 count\cf4 \strokec4 ;\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error calculating business days:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Loading state management functions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 LOADING_STATE\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 OVERLAY_CLASS\cf4 \strokec4 : \cf8 \strokec8 'loading-overlay'\cf4 \strokec4 ,\cb1 \
\cb3   \cf6 \strokec6 SPINNER_CLASS\cf4 \strokec4 : \cf8 \strokec8 'loading-spinner'\cf4 \strokec4 ,\cb1 \
\cb3   \cf6 \strokec6 LOADING_CLASS\cf4 \strokec4 : \cf8 \strokec8 'loading'\cf4 \cb1 \strokec4 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Shows loading state for element\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} elementId - ID of element to show loading state for\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 showLoading\cf4 \strokec4 (\cf10 \strokec10 elementId\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 element\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf10 \strokec10 elementId\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 element\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf10 \strokec10 element\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 add\cf4 \strokec4 (\cf6 \strokec6 LOADING_STATE\cf4 \strokec4 .\cf6 \strokec6 LOADING_CLASS\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Add loading overlay\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 overlay\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 createElement\cf4 \strokec4 (\cf8 \strokec8 'div'\cf4 \strokec4 );\cb1 \
\cb3   \cf10 \strokec10 overlay\cf4 \strokec4 .\cf10 \strokec10 className\cf4 \strokec4  = \cf8 \strokec8 `\cf4 \strokec4 $\{\cf6 \strokec6 LOADING_STATE\cf4 \strokec4 .\cf6 \strokec6 OVERLAY_CLASS\cf4 \strokec4 \}\cf8 \strokec8  absolute inset-0 bg-white bg-opacity-75 flex items-center justify-center`\cf4 \strokec4 ;\cb1 \
\cb3   \cf10 \strokec10 overlay\cf4 \strokec4 .\cf10 \strokec10 innerHTML\cf4 \strokec4  = \cf8 \strokec8 `<div class="\cf4 \strokec4 $\{\cf6 \strokec6 LOADING_STATE\cf4 \strokec4 .\cf6 \strokec6 SPINNER_CLASS\cf4 \strokec4 \}\cf8 \strokec8 "></div>`\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf10 \strokec10 element\cf4 \strokec4 .\cf10 \strokec10 style\cf4 \strokec4 .\cf10 \strokec10 position\cf4 \strokec4  = \cf8 \strokec8 'relative'\cf4 \strokec4 ;\cb1 \
\cb3   \cf10 \strokec10 element\cf4 \strokec4 .\cf10 \strokec10 appendChild\cf4 \strokec4 (\cf10 \strokec10 overlay\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Hides loading state for element\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} elementId - ID of element to hide loading state for\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 hideLoading\cf4 \strokec4 (\cf10 \strokec10 elementId\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 element\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf10 \strokec10 elementId\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 element\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf10 \strokec10 element\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 remove\cf4 \strokec4 (\cf6 \strokec6 LOADING_STATE\cf4 \strokec4 .\cf6 \strokec6 LOADING_CLASS\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Remove loading overlay\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 overlay\cf4 \strokec4  = \cf10 \strokec10 element\cf4 \strokec4 .\cf10 \strokec10 querySelector\cf4 \strokec4 (\cf8 \strokec8 `.\cf4 \strokec4 $\{\cf6 \strokec6 LOADING_STATE\cf4 \strokec4 .\cf6 \strokec6 OVERLAY_CLASS\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 overlay\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 overlay\cf4 \strokec4 .\cf10 \strokec10 remove\cf4 \strokec4 ();\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * URL parameter handling functions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Safely gets URL parameter\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} param - Parameter name\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{string|null\} Parameter value\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 getUrlParam\cf4 \strokec4 (\cf10 \strokec10 param\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 urlParams\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 URLSearchParams\cf4 \strokec4 (\cf10 \strokec10 window\cf4 \strokec4 .\cf10 \strokec10 location\cf4 \strokec4 .\cf10 \strokec10 search\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 urlParams\cf4 \strokec4 .\cf5 \strokec5 get\cf4 \strokec4 (\cf10 \strokec10 param\cf4 \strokec4 );\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error getting URL parameter:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Validates email address format\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} email - Email address to validate\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{boolean\} Whether email is valid\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 isValidEmail\cf4 \strokec4 (\cf10 \strokec10 email\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 email\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 re\cf4 \strokec4  = \cf11 \strokec11 /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 re\cf4 \strokec4 .\cf10 \strokec10 test\cf4 \strokec4 (\cf6 \strokec6 String\cf4 \strokec4 (\cf10 \strokec10 email\cf4 \strokec4 ).\cf10 \strokec10 toLowerCase\cf4 \strokec4 ());\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Email validation error:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Handles server errors\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Error|string\} error - Error object or message\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} [context] - Error context\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 handleServerError\cf4 \strokec4 (\cf10 \strokec10 error\cf4 \strokec4 , \cf10 \strokec10 context\cf4 \strokec4  = \cf8 \strokec8 ''\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 errorMessage\cf4 \strokec4  = \cf10 \strokec10 error\cf4 \strokec4 .\cf10 \strokec10 message\cf4 \strokec4  || \cf10 \strokec10 error\cf4 \strokec4 .\cf10 \strokec10 toString\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 contextMessage\cf4 \strokec4  = \cf10 \strokec10 context\cf4 \strokec4  ? \cf8 \strokec8 ` in \cf4 \strokec4 $\{\cf10 \strokec10 context\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4  : \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3   \cb1 \
\cb3   \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 `Server error\cf4 \strokec4 $\{\cf10 \strokec10 contextMessage\cf4 \strokec4 \}\cf8 \strokec8 :`\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3   \cf10 \strokec10 showError\cf4 \strokec4 (\cf8 \strokec8 `An error occurred\cf4 \strokec4 $\{\cf10 \strokec10 context\cf4 \strokec4  ? \cf8 \strokec8 ` while \cf4 \strokec4 $\{\cf10 \strokec10 context\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4  : \cf8 \strokec8 ''\cf4 \strokec4 \}\cf8 \strokec8 : \cf4 \strokec4 $\{\cf10 \strokec10 errorMessage\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf7 \strokec7 // Log to server if available\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf5 \strokec5 typeof\cf4 \strokec4  \cf10 \strokec10 logAuthEvent\cf4 \strokec4  === \cf8 \strokec8 'function'\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf10 \strokec10 logAuthEvent\cf4 \strokec4 (\cb1 \
\cb3         \cf10 \strokec10 getCurrentUser\cf4 \strokec4 ()?.\cf10 \strokec10 username\cf4 \strokec4  || \cf8 \strokec8 'Unknown'\cf4 \strokec4 ,\cb1 \
\cb3         \cf5 \strokec5 false\cf4 \strokec4 ,\cb1 \
\cb3         \cf8 \strokec8 `Server error\cf4 \strokec4 $\{\cf10 \strokec10 contextMessage\cf4 \strokec4 \}\cf8 \strokec8 : \cf4 \strokec4 $\{\cf10 \strokec10 errorMessage\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \cb1 \strokec4 \
\cb3       );\cb1 \
\cb3     \}\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 loggingError\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error logging server error:'\cf4 \strokec4 , \cf10 \strokec10 loggingError\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * SharedUtils.gs (Refactored)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Part 3 of 3: PR Utilities and Session Logging\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Last Updated: 2024-11-21\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * This section contains:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - PR retrieval and formatting functions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Session logging and management\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Audit log functionality\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Authentication utilities\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Integration Notes:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Previous getPRDetailsShared() calls should now use getPRDetails()\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Previous getAuditHistoryShared() calls should now use getAuditHistory()\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - All session logging now uses enhanced error handling and validation\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * PR Status and Management Configuration\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 PR_CONFIG\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 STATUS_CLASSES\cf4 \strokec4 : \{\cb1 \
\cb3     \cf6 \strokec6 OVERDUE\cf4 \strokec4 : \cf8 \strokec8 'overdue'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 WARNING\cf4 \strokec4 : \cf8 \strokec8 'warning'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 CURRENT\cf4 \strokec4 : \cf8 \strokec8 'current'\cf4 \cb1 \strokec4 \
\cb3   \},\cb1 \
\cb3   \cf6 \strokec6 WARNING_THRESHOLD\cf4 \strokec4 : \cf9 \strokec9 30\cf4 \strokec4 , \cf7 \strokec7 // days for warning status\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 AUDIT_COLUMNS\cf4 \strokec4 : \{\cb1 \
\cb3     \cf6 \strokec6 TIMESTAMP\cf4 \strokec4 : \cf9 \strokec9 0\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 USER\cf4 \strokec4 : \cf9 \strokec9 1\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 ACTION\cf4 \strokec4 : \cf9 \strokec9 2\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 PR_NUMBER\cf4 \strokec4 : \cf9 \strokec9 3\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 DETAILS\cf4 \strokec4 : \cf9 \strokec9 4\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 OLD_STATUS\cf4 \strokec4 : \cf9 \strokec9 5\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 NEW_STATUS\cf4 \strokec4 : \cf9 \strokec9 6\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Gets detailed PR information from Master Log sheet\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} prNumber - PR number to retrieve\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} PR details and success status\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 getPRDetails\cf4 \strokec4 (\cf10 \strokec10 prNumber\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Getting PR details for:'\cf4 \strokec4 , \cf10 \strokec10 prNumber\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf10 \strokec10 openById\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 MASTER_LOG_TAB\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 sheet\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf8 \strokec8 'Master Log sheet not found'\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf7 \strokec7 // Find PR row\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 data\cf4 \strokec4  = \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getDataRange\cf4 \strokec4 ().\cf10 \strokec10 getValues\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 rowIndex\cf4 \strokec4  = \cf10 \strokec10 data\cf4 \strokec4 .\cf10 \strokec10 findIndex\cf4 \strokec4 (\cf10 \strokec10 row\cf4 \strokec4  => \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PR_NUMBER\cf4 \strokec4 ] === \cf10 \strokec10 prNumber\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 rowIndex\cf4 \strokec4  === -\cf9 \strokec9 1\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf8 \strokec8 `PR \cf4 \strokec4 $\{\cf10 \strokec10 prNumber\cf4 \strokec4 \}\cf8 \strokec8  not found`\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 row\cf4 \strokec4  = \cf10 \strokec10 data\cf4 \strokec4 [\cf10 \strokec10 rowIndex\cf4 \strokec4 ];\cb1 \
\
\cb3     \cf7 \strokec7 // Log the raw line item data\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Raw line item data:'\cf4 \strokec4 , \{\cb1 \
\cb3       \cf10 \strokec10 items\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 ITEM_LIST\cf4 \strokec4 ],\cb1 \
\cb3       \cf10 \strokec10 quantities\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 QTY_LIST\cf4 \strokec4 ],\cb1 \
\cb3       \cf10 \strokec10 uoms\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 UOM_LIST\cf4 \strokec4 ],\cb1 \
\cb3       \cf10 \strokec10 urls\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 URL_LIST\cf4 \strokec4 ]\cb1 \
\cb3     \});\cb1 \
\
\cb3     \cf7 \strokec7 // Parse line items and get history\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 lineItems\cf4 \strokec4  = \cf10 \strokec10 parseLineItems\cf4 \strokec4 (\cf10 \strokec10 row\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 history\cf4 \strokec4  = \cf10 \strokec10 getAuditHistory\cf4 \strokec4 (\cf10 \strokec10 prNumber\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3       \cf10 \strokec10 success\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 data\cf4 \strokec4 : \cf10 \strokec10 formatPRData\cf4 \strokec4 (\cf10 \strokec10 row\cf4 \strokec4 , \cf10 \strokec10 lineItems\cf4 \strokec4 , \cf10 \strokec10 history\cf4 \strokec4 , \cf10 \strokec10 rowIndex\cf4 \strokec4 )\cb1 \
\cb3     \};\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error getting PR details:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3       \cf10 \strokec10 success\cf4 \strokec4 : \cf5 \strokec5 false\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 error\cf4 \strokec4 : \cf10 \strokec10 error\cf4 \strokec4 .\cf10 \strokec10 message\cf4 \cb1 \strokec4 \
\cb3     \};\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Formats PR data for response\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} row - Raw data row\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} lineItems - Parsed line items\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Array\} history - Audit history\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{number\} rowIndex - Row index in sheet\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} Formatted PR data\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 formatPRData\cf4 \strokec4 (\cf10 \strokec10 row\cf4 \strokec4 , \cf10 \strokec10 lineItems\cf4 \strokec4 , \cf10 \strokec10 history\cf4 \strokec4 , \cf10 \strokec10 rowIndex\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3     \cf7 \strokec7 // Basic information\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 prNumber\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PR_NUMBER\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 timestamp\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 TIMESTAMP\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 status\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PR_STATUS\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 requestorName\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 REQUESTOR_NAME\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 department\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 DEPARTMENT\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 requestorEmail\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 EMAIL\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 description\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 DESCRIPTION\cf4 \strokec4 ],\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Project details\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 projectCategory\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PROJECT_CATEGORY\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 organization\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 ORGANIZATION\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 currency\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 CURRENCY\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 paymentFormat\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PAYMENT_FORMAT\cf4 \strokec4 ],\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Location and type\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 siteLocation\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 SITE_LOCATION\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 expenseType\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 EXPENSE_TYPE\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 vehicle\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 VEHICLE\cf4 \strokec4 ],\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Budget and timeline\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 budgetStatus\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 BUDGET_STATUS\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 deadlineDate\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 DEADLINE_DATE\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 vendor\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 VENDOR\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 urgencyStatus\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 URGENCY\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 approver\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 APPROVER\cf4 \strokec4 ],\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Processing details\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 requestorNotes\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 REQUESTOR_NOTES\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 procurementNotes\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PROCUREMENT_NOTES\cf4 \strokec4 ],\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // PO details\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 poNumber\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PO_NUMBER\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 poDate\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PO_DATE\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 poStatus\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PO_STATUS\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 poApprovedDate\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PO_APPROVED_DATE\cf4 \strokec4 ],\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Payment and shipping\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 paymentDate\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PAYMENT_DATE\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 expectedShippingDate\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 EXPECTED_SHIPPING_DATE\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 expectedLandingDate\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 EXPECTED_LANDING_DATE\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 shipped\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 SHIPPED\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 shipmentDate\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 SHIPMENT_DATE\cf4 \strokec4 ],\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Customs and delivery\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 customsRequired\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 CUSTOMS_REQUIRED\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 customsDocs\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 CUSTOMS_DOCS\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 customsSubmissionDate\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 CUSTOMS_SUBMISSION_DATE\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 customsCleared\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 CUSTOMS_CLEARED\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 dateCleared\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 DATE_CLEARED\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 goodsLanded\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 GOODS_LANDED\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 landedDate\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 LANDED_DATE\cf4 \strokec4 ],\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Tracking\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 daysOpen\cf4 \strokec4 : \cf10 \strokec10 calculateDaysOpen\cf4 \strokec4 (\cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 TIMESTAMP\cf4 \strokec4 ]),\cb1 \
\cb3     \cf10 \strokec10 completion\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 COMPLETION\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 timeToShip\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 TIME_TO_SHIP\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 timeInCustoms\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 TIME_IN_CUSTOMS\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 timeToLand\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 TIME_TO_LAND\cf4 \strokec4 ],\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Line items and history\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 lineItems\cf4 \strokec4 : \cf10 \strokec10 lineItems\cf4 \strokec4 ,\cb1 \
\cb3     \cf10 \strokec10 history\cf4 \strokec4 : \cf10 \strokec10 history\cf4 \strokec4 ,\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Debug info\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 _debug\cf4 \strokec4 : \{\cb1 \
\cb3       \cf10 \strokec10 rawLineItems\cf4 \strokec4 : \{\cb1 \
\cb3         \cf10 \strokec10 items\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 ITEM_LIST\cf4 \strokec4 ],\cb1 \
\cb3         \cf10 \strokec10 quantities\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 QTY_LIST\cf4 \strokec4 ],\cb1 \
\cb3         \cf10 \strokec10 uoms\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 UOM_LIST\cf4 \strokec4 ],\cb1 \
\cb3         \cf10 \strokec10 urls\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 URL_LIST\cf4 \strokec4 ]\cb1 \
\cb3       \}\cb1 \
\cb3     \},\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Metadata\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 rowIndex\cf4 \strokec4 : \cf10 \strokec10 rowIndex\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 ,\cb1 \
\cb3     \cf10 \strokec10 lastModified\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 LAST_MODIFIED\cf4 \strokec4 ],\cb1 \
\cb3     \cf10 \strokec10 lastModifiedBy\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 LAST_MODIFIED_BY\cf4 \strokec4 ]\cb1 \
\cb3   \};\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Gets PR audit history\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} prNumber - PR number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Array\} History entries\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 getAuditHistory\cf4 \strokec4 (\cf10 \strokec10 prNumber\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf10 \strokec10 openById\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 auditSheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Audit Log'\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 auditSheet\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 warn\cf4 \strokec4 (\cf8 \strokec8 'Audit Log sheet not found'\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 return\cf4 \strokec4  [];\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 data\cf4 \strokec4  = \cf10 \strokec10 auditSheet\cf4 \strokec4 .\cf10 \strokec10 getDataRange\cf4 \strokec4 ().\cf10 \strokec10 getValues\cf4 \strokec4 ();\cb1 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 data\cf4 \cb1 \strokec4 \
\cb3       .\cf10 \strokec10 slice\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 ) \cf7 \strokec7 // Skip header\cf4 \cb1 \strokec4 \
\cb3       .\cf10 \strokec10 filter\cf4 \strokec4 (\cf10 \strokec10 row\cf4 \strokec4  => \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUDIT_COLUMNS\cf4 \strokec4 .\cf6 \strokec6 PR_NUMBER\cf4 \strokec4 ] === \cf10 \strokec10 prNumber\cf4 \strokec4 )\cb1 \
\cb3       .\cf10 \strokec10 map\cf4 \strokec4 (\cf10 \strokec10 row\cf4 \strokec4  => (\{\cb1 \
\cb3         \cf10 \strokec10 timestamp\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUDIT_COLUMNS\cf4 \strokec4 .\cf6 \strokec6 TIMESTAMP\cf4 \strokec4 ],\cb1 \
\cb3         \cf10 \strokec10 user\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUDIT_COLUMNS\cf4 \strokec4 .\cf6 \strokec6 USER\cf4 \strokec4 ],\cb1 \
\cb3         \cf10 \strokec10 action\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUDIT_COLUMNS\cf4 \strokec4 .\cf6 \strokec6 ACTION\cf4 \strokec4 ],\cb1 \
\cb3         \cf10 \strokec10 details\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUDIT_COLUMNS\cf4 \strokec4 .\cf6 \strokec6 DETAILS\cf4 \strokec4 ],\cb1 \
\cb3         \cf10 \strokec10 oldStatus\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUDIT_COLUMNS\cf4 \strokec4 .\cf6 \strokec6 OLD_STATUS\cf4 \strokec4 ],\cb1 \
\cb3         \cf10 \strokec10 newStatus\cf4 \strokec4 : \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUDIT_COLUMNS\cf4 \strokec4 .\cf6 \strokec6 NEW_STATUS\cf4 \strokec4 ]\cb1 \
\cb3       \}))\cb1 \
\cb3       .\cf10 \strokec10 sort\cf4 \strokec4 ((\cf10 \strokec10 a\cf4 \strokec4 , \cf10 \strokec10 b\cf4 \strokec4 ) => \cf10 \strokec10 b\cf4 \strokec4 .\cf10 \strokec10 timestamp\cf4 \strokec4  - \cf10 \strokec10 a\cf4 \strokec4 .\cf10 \strokec10 timestamp\cf4 \strokec4 );\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error getting audit history:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  [];\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Gets status class for styling\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Object\} poData - PO data object\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{string\} CSS class for status\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 getStatusClass\cf4 \strokec4 (\cf10 \strokec10 poData\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 poData\cf4 \strokec4 ?.\cf10 \strokec10 daysOverdue\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 STATUS_CLASSES\cf4 \strokec4 .\cf6 \strokec6 CURRENT\cf4 \strokec4 ;\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 poData\cf4 \strokec4 .\cf10 \strokec10 daysOverdue\cf4 \strokec4  >= \cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 WARNING_THRESHOLD\cf4 \strokec4  \cb1 \
\cb3     ? \cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 STATUS_CLASSES\cf4 \strokec4 .\cf6 \strokec6 OVERDUE\cf4 \strokec4  \cb1 \
\cb3     : \cf6 \strokec6 PR_CONFIG\cf4 \strokec4 .\cf6 \strokec6 STATUS_CLASSES\cf4 \strokec4 .\cf6 \strokec6 WARNING\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Generates view link for PO\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} poNumber - PO number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{string\} URL to view PO\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 generateViewLink\cf4 \strokec4 (\cf10 \strokec10 poNumber\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 `viewPO.html?po=\cf4 \strokec4 $\{\cf10 \strokec10 encodeURIComponent\cf4 \strokec4 (\cf10 \strokec10 poNumber\cf4 \strokec4 )\}\cf8 \strokec8 `\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Generates update link for PO\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} poNumber - PO number\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{string\} URL to update PO landing date\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 generateUpdateLink\cf4 \strokec4 (\cf10 \strokec10 poNumber\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 `updateLandingDate.html?po=\cf4 \strokec4 $\{\cf10 \strokec10 encodeURIComponent\cf4 \strokec4 (\cf10 \strokec10 poNumber\cf4 \strokec4 )\}\cf8 \strokec8 `\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Enhanced session logging configuration\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 LOGGING_CONFIG\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 MAX_LOG_ROWS\cf4 \strokec4 : \cf9 \strokec9 10000\cf4 \strokec4 ,\cb1 \
\cb3   \cf6 \strokec6 ARCHIVE_PREFIX\cf4 \strokec4 : \cf8 \strokec8 'Auth Log Archive'\cf4 \cb1 \strokec4 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Archives old auth log entries\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Creates monthly archive sheets when main log gets too large\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 archiveAuthLogs\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf10 \strokec10 openById\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 logSheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 AUTH_LOG_TAB\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 logSheet\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 today\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 archiveName\cf4 \strokec4  = \cf8 \strokec8 `\cf4 \strokec4 $\{\cf6 \strokec6 LOGGING_CONFIG\cf4 \strokec4 .\cf6 \strokec6 ARCHIVE_PREFIX\cf4 \strokec4 \}\cf8 \strokec8  \cf4 \strokec4 $\{\cf10 \strokec10 today\cf4 \strokec4 .\cf10 \strokec10 getFullYear\cf4 \strokec4 ()\}\cf8 \strokec8 -\cf4 \strokec4 $\{\cf6 \strokec6 String\cf4 \strokec4 (\cf10 \strokec10 today\cf4 \strokec4 .\cf10 \strokec10 getMonth\cf4 \strokec4 () + \cf9 \strokec9 1\cf4 \strokec4 ).\cf10 \strokec10 padStart\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf8 \strokec8 '0'\cf4 \strokec4 )\}\cf8 \strokec8 `\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf7 \strokec7 // Create new archive sheet\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf10 \strokec10 archiveSheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 getSheetByName\cf4 \strokec4 (\cf10 \strokec10 archiveName\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 archiveSheet\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf10 \strokec10 archiveSheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 insertSheet\cf4 \strokec4 (\cf10 \strokec10 archiveName\cf4 \strokec4 );\cb1 \
\cb3       \cf10 \strokec10 logSheet\cf4 \strokec4 .\cf10 \strokec10 getRange\cf4 \strokec4 (\cf8 \strokec8 '1:1'\cf4 \strokec4 ).\cf10 \strokec10 copyTo\cf4 \strokec4 (\cf10 \strokec10 archiveSheet\cf4 \strokec4 .\cf10 \strokec10 getRange\cf4 \strokec4 (\cf8 \strokec8 '1:1'\cf4 \strokec4 ), \{\cf10 \strokec10 contentsOnly\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \strokec4 \});\cb1 \
\cb3       \cf10 \strokec10 archiveSheet\cf4 \strokec4 .\cf10 \strokec10 setFrozenRows\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf7 \strokec7 // Keep last 1000 rows in main log\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 lastRow\cf4 \strokec4  = \cf10 \strokec10 logSheet\cf4 \strokec4 .\cf10 \strokec10 getLastRow\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 rowsToKeep\cf4 \strokec4  = \cf9 \strokec9 1000\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 rowsToMove\cf4 \strokec4  = \cf10 \strokec10 lastRow\cf4 \strokec4  - \cf10 \strokec10 rowsToKeep\cf4 \strokec4  - \cf9 \strokec9 1\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 rowsToMove\cf4 \strokec4  > \cf9 \strokec9 0\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 rangeToCopy\cf4 \strokec4  = \cf10 \strokec10 logSheet\cf4 \strokec4 .\cf10 \strokec10 getRange\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf10 \strokec10 rowsToMove\cf4 \strokec4 , \cf10 \strokec10 logSheet\cf4 \strokec4 .\cf10 \strokec10 getLastColumn\cf4 \strokec4 ());\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 values\cf4 \strokec4  = \cf10 \strokec10 rangeToCopy\cf4 \strokec4 .\cf10 \strokec10 getValues\cf4 \strokec4 ();\cb1 \
\cb3       \cb1 \
\cb3       \cf10 \strokec10 archiveSheet\cf4 \strokec4 .\cf10 \strokec10 getRange\cf4 \strokec4 (\cb1 \
\cb3         \cf10 \strokec10 archiveSheet\cf4 \strokec4 .\cf10 \strokec10 getLastRow\cf4 \strokec4 () + \cf9 \strokec9 1\cf4 \strokec4 , \cb1 \
\cb3         \cf9 \strokec9 1\cf4 \strokec4 , \cb1 \
\cb3         \cf10 \strokec10 rowsToMove\cf4 \strokec4 , \cb1 \
\cb3         \cf10 \strokec10 logSheet\cf4 \strokec4 .\cf10 \strokec10 getLastColumn\cf4 \strokec4 ()\cb1 \
\cb3       ).\cf10 \strokec10 setValues\cf4 \strokec4 (\cf10 \strokec10 values\cf4 \strokec4 );\cb1 \
\
\cb3       \cf10 \strokec10 logSheet\cf4 \strokec4 .\cf10 \strokec10 deleteRows\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf10 \strokec10 rowsToMove\cf4 \strokec4 );\cb1 \
\cb3       \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 `Archived \cf4 \strokec4 $\{\cf10 \strokec10 rowsToMove\cf4 \strokec4 \}\cf8 \strokec8  rows to \cf4 \strokec4 $\{\cf10 \strokec10 archiveName\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error archiving auth logs:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Sets up cleanup trigger to run every hour\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 setupCleanupTrigger\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf7 \strokec7 // Delete existing triggers\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 triggers\cf4 \strokec4  = \cf6 \strokec6 ScriptApp\cf4 \strokec4 .\cf10 \strokec10 getProjectTriggers\cf4 \strokec4 ();\cb1 \
\cb3     \cf10 \strokec10 triggers\cf4 \strokec4 .\cf10 \strokec10 forEach\cf4 \strokec4 (\cf10 \strokec10 trigger\cf4 \strokec4  => \{\cb1 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 trigger\cf4 \strokec4 .\cf10 \strokec10 getHandlerFunction\cf4 \strokec4 () === \cf8 \strokec8 'cleanupSessions'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf6 \strokec6 ScriptApp\cf4 \strokec4 .\cf10 \strokec10 deleteTrigger\cf4 \strokec4 (\cf10 \strokec10 trigger\cf4 \strokec4 );\cb1 \
\cb3       \}\cb1 \
\cb3     \});\cb1 \
\
\cb3     \cf7 \strokec7 // Create new hourly trigger\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 ScriptApp\cf4 \strokec4 .\cf10 \strokec10 newTrigger\cf4 \strokec4 (\cf8 \strokec8 'cleanupSessions'\cf4 \strokec4 )\cb1 \
\cb3       .\cf10 \strokec10 timeBased\cf4 \strokec4 ()\cb1 \
\cb3       .\cf10 \strokec10 everyHours\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3       .\cf10 \strokec10 create\cf4 \strokec4 ();\cb1 \
\
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Cleanup trigger set up successfully'\cf4 \strokec4 );\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error setting up cleanup trigger:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Authentication Service Supplement\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Contains core authentication functions for the PR system\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Integration Notes:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - This should be placed at the end of Part 1 (Core Configuration and Session Management)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Previous verifyUser() calls remain unchanged as this is the main entry point\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Enhanced with better session management and logging\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Authentication configuration\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 VALID_ROLES\cf4 \strokec4 : [\cf8 \strokec8 'requestor'\cf4 \strokec4 , \cf8 \strokec8 'procurement'\cf4 \strokec4 , \cf8 \strokec8 'finance'\cf4 \strokec4 , \cf8 \strokec8 'approver'\cf4 \strokec4 ],\cb1 \
\cb3   \cf6 \strokec6 DEFAULT_ROLE\cf4 \strokec4 : \cf8 \strokec8 'requestor'\cf4 \strokec4 ,\cb1 \
\cb3   \cf6 \strokec6 COLUMN_INDICES\cf4 \strokec4 : \{\cb1 \
\cb3     \cf6 \strokec6 NAME\cf4 \strokec4 : \cf9 \strokec9 0\cf4 \strokec4 ,      \cf7 \strokec7 // Column A: Name\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 EMAIL\cf4 \strokec4 : \cf9 \strokec9 1\cf4 \strokec4 ,     \cf7 \strokec7 // Column B: Email\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 DEPT\cf4 \strokec4 : \cf9 \strokec9 2\cf4 \strokec4 ,      \cf7 \strokec7 // Column C: Department\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 ACTIVE\cf4 \strokec4 : \cf9 \strokec9 3\cf4 \strokec4 ,    \cf7 \strokec7 // Column D: Active (Y/N)\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 PASSWORD\cf4 \strokec4 : \cf9 \strokec9 4\cf4 \strokec4 ,  \cf7 \strokec7 // Column E: Password\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 ROLE\cf4 \strokec4 : \cf9 \strokec9 5\cf4 \strokec4        \cf7 \strokec7 // Column F: Role\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Verifies user credentials and creates session\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} username - Username to verify\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} password - Password to verify\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} Authentication result with session data\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 verifyUser\cf4 \strokec4 (\cf10 \strokec10 username\cf4 \strokec4 , \cf10 \strokec10 password\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 '==================== START verifyUser ===================='\cf4 \strokec4 );\cb1 \
\cb3     \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Verifying user:'\cf4 \strokec4 , \cf10 \strokec10 username\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3         \cf7 \strokec7 // Get Requestor List sheet\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf10 \strokec10 openById\cf4 \strokec4 (\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 REQUESTOR_SHEET_NAME\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 sheet\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'ERROR: User list sheet not found'\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf8 \strokec8 'User list not found'\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Accessed Requestor List sheet'\cf4 \strokec4 );\cb1 \
\
\cb3         \cf7 \strokec7 // Get all data and validate structure\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 data\cf4 \strokec4  = \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getDataRange\cf4 \strokec4 ().\cf10 \strokec10 getValues\cf4 \strokec4 ();\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 headers\cf4 \strokec4  = \cf10 \strokec10 data\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ].\cf10 \strokec10 map\cf4 \strokec4 (\cf10 \strokec10 h\cf4 \strokec4  => \cf10 \strokec10 h\cf4 \strokec4 .\cf10 \strokec10 toString\cf4 \strokec4 ().\cf10 \strokec10 trim\cf4 \strokec4 ().\cf10 \strokec10 toLowerCase\cf4 \strokec4 ());\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Sheet headers:'\cf4 \strokec4 , \cf10 \strokec10 headers\cf4 \strokec4 );\cb1 \
\
\cb3         \cf7 \strokec7 // Validate required columns exist\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 requiredColumns\cf4 \strokec4  = [\cf8 \strokec8 'name'\cf4 \strokec4 , \cf8 \strokec8 'email'\cf4 \strokec4 , \cf8 \strokec8 'department'\cf4 \strokec4 , \cf8 \strokec8 'active (y/n)'\cf4 \strokec4 , \cf8 \strokec8 'password'\cf4 \strokec4 , \cf8 \strokec8 'role'\cf4 \strokec4 ];\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 missingColumns\cf4 \strokec4  = \cf10 \strokec10 requiredColumns\cf4 \strokec4 .\cf10 \strokec10 filter\cf4 \strokec4 (\cf10 \strokec10 col\cf4 \strokec4  => !\cf10 \strokec10 headers\cf4 \strokec4 .\cf10 \strokec10 includes\cf4 \strokec4 (\cf10 \strokec10 col\cf4 \strokec4 ));\cb1 \
\
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 missingColumns\cf4 \strokec4 .\cf10 \strokec10 length\cf4 \strokec4  > \cf9 \strokec9 0\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'ERROR: Missing columns:'\cf4 \strokec4 , \cf10 \strokec10 missingColumns\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf8 \strokec8 `Required columns not found: \cf4 \strokec4 $\{\cf10 \strokec10 missingColumns\cf4 \strokec4 .\cf10 \strokec10 join\cf4 \strokec4 (\cf8 \strokec8 ', '\cf4 \strokec4 )\}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf7 \strokec7 // Find user row\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 userRow\cf4 \strokec4  = \cf10 \strokec10 data\cf4 \strokec4 .\cf10 \strokec10 find\cf4 \strokec4 (\cf10 \strokec10 row\cf4 \strokec4  => \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMN_INDICES\cf4 \strokec4 .\cf6 \strokec6 NAME\cf4 \strokec4 ] === \cf10 \strokec10 username\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 userRow\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'User not found:'\cf4 \strokec4 , \cf10 \strokec10 username\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3                 \cf10 \strokec10 success\cf4 \strokec4 : \cf5 \strokec5 false\cf4 \strokec4 ,\cb1 \
\cb3                 \cf10 \strokec10 message\cf4 \strokec4 : \cf8 \strokec8 'Invalid username or password'\cf4 \cb1 \strokec4 \
\cb3             \};\cb1 \
\cb3         \}\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Found user row:'\cf4 \strokec4 , \cf6 \strokec6 JSON\cf4 \strokec4 .\cf10 \strokec10 stringify\cf4 \strokec4 (\cf10 \strokec10 userRow\cf4 \strokec4 ));\cb1 \
\
\cb3         \cf7 \strokec7 // Check if user is active\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 userRow\cf4 \strokec4 [\cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMN_INDICES\cf4 \strokec4 .\cf6 \strokec6 ACTIVE\cf4 \strokec4 ].\cf10 \strokec10 toString\cf4 \strokec4 ().\cf10 \strokec10 toUpperCase\cf4 \strokec4 () !== \cf8 \strokec8 'Y'\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Inactive account attempt:'\cf4 \strokec4 , \cf10 \strokec10 username\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3                 \cf10 \strokec10 success\cf4 \strokec4 : \cf5 \strokec5 false\cf4 \strokec4 ,\cb1 \
\cb3                 \cf10 \strokec10 message\cf4 \strokec4 : \cf8 \strokec8 'Account is inactive. Please contact procurement team.'\cf4 \cb1 \strokec4 \
\cb3             \};\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf7 \strokec7 // Verify password\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 userRow\cf4 \strokec4 [\cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMN_INDICES\cf4 \strokec4 .\cf6 \strokec6 PASSWORD\cf4 \strokec4 ] !== \cf10 \strokec10 password\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Invalid password attempt for:'\cf4 \strokec4 , \cf10 \strokec10 username\cf4 \strokec4 );\cb1 \
\cb3             \cf10 \strokec10 logAuthEvent\cf4 \strokec4 (\cf10 \strokec10 username\cf4 \strokec4 , \cf5 \strokec5 false\cf4 \strokec4 , \cf8 \strokec8 'Failed login attempt - invalid password'\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3                 \cf10 \strokec10 success\cf4 \strokec4 : \cf5 \strokec5 false\cf4 \strokec4 ,\cb1 \
\cb3                 \cf10 \strokec10 message\cf4 \strokec4 : \cf8 \strokec8 'Invalid username or password'\cf4 \cb1 \strokec4 \
\cb3             \};\cb1 \
\cb3         \}\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Password verified successfully'\cf4 \strokec4 );\cb1 \
\
\cb3         \cf7 \strokec7 // Get user's role and validate\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 userRole\cf4 \strokec4  = \cf10 \strokec10 userRow\cf4 \strokec4 [\cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMN_INDICES\cf4 \strokec4 .\cf6 \strokec6 ROLE\cf4 \strokec4 ]?.\cf10 \strokec10 toString\cf4 \strokec4 ().\cf10 \strokec10 toLowerCase\cf4 \strokec4 () || \cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 DEFAULT_ROLE\cf4 \strokec4 ;\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 VALID_ROLES\cf4 \strokec4 .\cf10 \strokec10 includes\cf4 \strokec4 (\cf10 \strokec10 userRole\cf4 \strokec4 )) \{\cb1 \
\cb3             \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 `Warning: Invalid role "\cf4 \strokec4 $\{\cf10 \strokec10 userRole\cf4 \strokec4 \}\cf8 \strokec8 " for user \cf4 \strokec4 $\{\cf10 \strokec10 username\cf4 \strokec4 \}\cf8 \strokec8 , defaulting to \cf4 \strokec4 $\{\cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 DEFAULT_ROLE\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf7 \strokec7 // Create user session\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 userSession\cf4 \strokec4  = \{\cb1 \
\cb3             \cf10 \strokec10 username\cf4 \strokec4 : \cf10 \strokec10 username\cf4 \strokec4 ,\cb1 \
\cb3             \cf10 \strokec10 role\cf4 \strokec4 : \cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 VALID_ROLES\cf4 \strokec4 .\cf10 \strokec10 includes\cf4 \strokec4 (\cf10 \strokec10 userRole\cf4 \strokec4 ) ? \cf10 \strokec10 userRole\cf4 \strokec4  : \cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 DEFAULT_ROLE\cf4 \strokec4 ,\cb1 \
\cb3             \cf10 \strokec10 department\cf4 \strokec4 : \cf10 \strokec10 userRow\cf4 \strokec4 [\cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMN_INDICES\cf4 \strokec4 .\cf6 \strokec6 DEPT\cf4 \strokec4 ],\cb1 \
\cb3             \cf10 \strokec10 email\cf4 \strokec4 : \cf10 \strokec10 userRow\cf4 \strokec4 [\cf6 \strokec6 AUTH_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMN_INDICES\cf4 \strokec4 .\cf6 \strokec6 EMAIL\cf4 \strokec4 ],\cb1 \
\cb3             \cf10 \strokec10 timestamp\cf4 \strokec4 : \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ().\cf10 \strokec10 toISOString\cf4 \strokec4 ()\cb1 \
\cb3         \};\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Created user session:'\cf4 \strokec4 , \cf6 \strokec6 JSON\cf4 \strokec4 .\cf10 \strokec10 stringify\cf4 \strokec4 (\cf10 \strokec10 userSession\cf4 \strokec4 ));\cb1 \
\
\cb3         \cf7 \strokec7 // Store session in cache\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 userCache\cf4 \strokec4  = \cf6 \strokec6 CacheService\cf4 \strokec4 .\cf10 \strokec10 getUserCache\cf4 \strokec4 ();\cb1 \
\cb3         \cf10 \strokec10 userCache\cf4 \strokec4 .\cf10 \strokec10 put\cf4 \strokec4 (\cf8 \strokec8 'userSession'\cf4 \strokec4 , \cf6 \strokec6 JSON\cf4 \strokec4 .\cf10 \strokec10 stringify\cf4 \strokec4 (\cf10 \strokec10 userSession\cf4 \strokec4 ), \cf9 \strokec9 86400\cf4 \strokec4 );\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Stored session in cache'\cf4 \strokec4 );\cb1 \
\
\cb3         \cf5 \strokec5 let\cf4 \strokec4  \cf10 \strokec10 sessionId\cf4 \strokec4  = \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\
\cb3         \cf7 \strokec7 // Create sheet session\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3             \cf10 \strokec10 sessionId\cf4 \strokec4  = \cf10 \strokec10 createSheetSession\cf4 \strokec4 (\cf10 \strokec10 userSession\cf4 \strokec4 );\cb1 \
\cb3             \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Sheet session created:'\cf4 \strokec4 , \cf10 \strokec10 sessionId\cf4 \strokec4 );\cb1 \
\cb3         \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 sessionError\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Warning: Sheet session creation failed:'\cf4 \strokec4 , \cf10 \strokec10 sessionError\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf7 \strokec7 // Log successful login\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 logAuthEvent\cf4 \strokec4 (\cf10 \strokec10 username\cf4 \strokec4 , \cf5 \strokec5 true\cf4 \strokec4 , \cf8 \strokec8 'Successful login'\cf4 \strokec4 );\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Login successful for:'\cf4 \strokec4 , \cf10 \strokec10 username\cf4 \strokec4 );\cb1 \
\
\cb3         \cf7 \strokec7 // Get web app URL and state token for secure redirect\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 redirectUrl\cf4 \strokec4  = \cf10 \strokec10 getWebAppUrl\cf4 \strokec4 ();\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 stateToken\cf4 \strokec4  = \cf6 \strokec6 Utilities\cf4 \strokec4 .\cf10 \strokec10 getUuid\cf4 \strokec4 ();\cb1 \
\
\cb3         \cf7 \strokec7 // Store state token in cache briefly\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 stateCache\cf4 \strokec4  = \cf6 \strokec6 CacheService\cf4 \strokec4 .\cf10 \strokec10 getScriptCache\cf4 \strokec4 ();\cb1 \
\cb3         \cf10 \strokec10 stateCache\cf4 \strokec4 .\cf10 \strokec10 put\cf4 \strokec4 (\cf8 \strokec8 `state_\cf4 \strokec4 $\{\cf10 \strokec10 stateToken\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 , \cf10 \strokec10 sessionId\cf4 \strokec4 , \cf9 \strokec9 300\cf4 \strokec4 ); \cf7 \strokec7 // 5 minute expiry\cf4 \cb1 \strokec4 \
\
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Generated redirect URL:'\cf4 \strokec4 , \cf10 \strokec10 redirectUrl\cf4 \strokec4 );\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Generated state token for secure redirect'\cf4 \strokec4 );\cb1 \
\
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 response\cf4 \strokec4  = \{\cb1 \
\cb3             \cf10 \strokec10 success\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \strokec4 ,\cb1 \
\cb3             \cf10 \strokec10 redirectUrl\cf4 \strokec4 : \cf10 \strokec10 redirectUrl\cf4 \strokec4 ,\cb1 \
\cb3             \cf10 \strokec10 sessionId\cf4 \strokec4 : \cf10 \strokec10 sessionId\cf4 \strokec4 ,\cb1 \
\cb3             \cf10 \strokec10 stateToken\cf4 \strokec4 : \cf10 \strokec10 stateToken\cf4 \strokec4 ,\cb1 \
\cb3             \cf10 \strokec10 user\cf4 \strokec4 : \{\cb1 \
\cb3                 \cf10 \strokec10 username\cf4 \strokec4 : \cf10 \strokec10 userSession\cf4 \strokec4 .\cf10 \strokec10 username\cf4 \strokec4 ,\cb1 \
\cb3                 \cf10 \strokec10 role\cf4 \strokec4 : \cf10 \strokec10 userSession\cf4 \strokec4 .\cf10 \strokec10 role\cf4 \strokec4 ,\cb1 \
\cb3                 \cf10 \strokec10 department\cf4 \strokec4 : \cf10 \strokec10 userSession\cf4 \strokec4 .\cf10 \strokec10 department\cf4 \cb1 \strokec4 \
\cb3             \}\cb1 \
\cb3         \};\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Returning response:'\cf4 \strokec4 , \cf6 \strokec6 JSON\cf4 \strokec4 .\cf10 \strokec10 stringify\cf4 \strokec4 (\cf10 \strokec10 response\cf4 \strokec4 ));\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 '==================== END verifyUser ===================='\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 response\cf4 \strokec4 ;\cb1 \
\
\cb3     \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'ERROR in verifyUser:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 .\cf10 \strokec10 toString\cf4 \strokec4 ());\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Error stack:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 .\cf10 \strokec10 stack\cf4 \strokec4 );\cb1 \
\cb3         \cf10 \strokec10 logAuthEvent\cf4 \strokec4 (\cf10 \strokec10 username\cf4 \strokec4 , \cf5 \strokec5 false\cf4 \strokec4 , \cf8 \strokec8 `Login error: \cf4 \strokec4 $\{\cf10 \strokec10 error\cf4 \strokec4 .\cf10 \strokec10 message\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 );\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 '==================== END verifyUser (with error) ===================='\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3             \cf10 \strokec10 success\cf4 \strokec4 : \cf5 \strokec5 false\cf4 \strokec4 ,\cb1 \
\cb3             \cf10 \strokec10 message\cf4 \strokec4 : \cf10 \strokec10 error\cf4 \strokec4 .\cf10 \strokec10 message\cf4 \strokec4  || \cf8 \strokec8 'System error during login. Please try again later.'\cf4 \cb1 \strokec4 \
\cb3         \};\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Creates sheet-based session entry with enhanced error handling\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Object\} user - User session data\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{string\} Session ID\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 createSheetSession\cf4 \strokec4 (\cf10 \strokec10 user\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sessionId\cf4 \strokec4  = \cf6 \strokec6 Utilities\cf4 \strokec4 .\cf10 \strokec10 getUuid\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 timestamp\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ().\cf10 \strokec10 toISOString\cf4 \strokec4 ();\cb1 \
\
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf10 \strokec10 openById\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf10 \strokec10 sessionsSheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 SHEET_NAME\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 sessionsSheet\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf10 \strokec10 sessionsSheet\cf4 \strokec4  = \cf10 \strokec10 createSessionLog\cf4 \strokec4 ();\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 deviceInfo\cf4 \strokec4  = \{\cb1 \
\cb3       \cf10 \strokec10 userAgent\cf4 \strokec4 : \cf6 \strokec6 HtmlService\cf4 \strokec4 .\cf10 \strokec10 getUserAgent\cf4 \strokec4 (),\cb1 \
\cb3       \cf10 \strokec10 timestamp\cf4 \strokec4 : \cf10 \strokec10 timestamp\cf4 \cb1 \strokec4 \
\cb3     \};\cb1 \
\
\cb3     \cf10 \strokec10 sessionsSheet\cf4 \strokec4 .\cf10 \strokec10 appendRow\cf4 \strokec4 ([\cb1 \
\cb3       \cf10 \strokec10 sessionId\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 user\cf4 \strokec4 .\cf10 \strokec10 username\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 user\cf4 \strokec4 .\cf10 \strokec10 email\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 user\cf4 \strokec4 .\cf10 \strokec10 role\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 timestamp\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 timestamp\cf4 \strokec4 ,\cb1 \
\cb3       \cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 STATUS\cf4 \strokec4 .\cf6 \strokec6 ACTIVE\cf4 \strokec4 ,\cb1 \
\cb3       \cf6 \strokec6 JSON\cf4 \strokec4 .\cf10 \strokec10 stringify\cf4 \strokec4 (\cf10 \strokec10 deviceInfo\cf4 \strokec4 )\cb1 \
\cb3     ]);\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 sessionId\cf4 \strokec4 ;\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error creating sheet session:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf8 \strokec8 'Failed to create session: '\cf4 \strokec4  + \cf10 \strokec10 error\cf4 \strokec4 .\cf10 \strokec10 message\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Authentication Logging Supplement\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Enhanced logging functionality for authentication and access events\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Integration Notes:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - This should be placed in Part 3 with other logging functions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Works with existing archiveAuthLogs() function\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Integrates with the session management system\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\
\
\
\
\
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Gets context information for the current event\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} Context information including IP and user agent\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 getEventContext\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 let\cf4 \strokec4  \cf10 \strokec10 ipAddress\cf4 \strokec4  = \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3   \cf5 \strokec5 let\cf4 \strokec4  \cf10 \strokec10 userAgent\cf4 \strokec4  = \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 request\cf4 \strokec4  = \cf6 \strokec6 HtmlService\cf4 \strokec4 .\cf10 \strokec10 getCurrentRequest\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 request\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf10 \strokec10 userAgent\cf4 \strokec4  = \cf10 \strokec10 request\cf4 \strokec4 .\cf10 \strokec10 getUserAgent\cf4 \strokec4 () || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3       \cb1 \
\cb3       \cf7 \strokec7 // Note: Direct IP address access is not available in Apps Script\cf4 \cb1 \strokec4 \
\cb3       \cf7 \strokec7 // Instead, we might get it from headers if available in your setup\cf4 \cb1 \strokec4 \
\cb3       \cf7 \strokec7 // This would need to be customized based on your deployment\cf4 \cb1 \strokec4 \
\cb3       \cf7 \strokec7 // ipAddress = request.getHeader('X-Forwarded-For') || '';\cf4 \cb1 \strokec4 \
\cb3     \}\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 e\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 warn\cf4 \strokec4 (\cf8 \strokec8 'Could not get complete request details:'\cf4 \strokec4 , \cf10 \strokec10 e\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3     \cf10 \strokec10 ipAddress\cf4 \strokec4 ,\cb1 \
\cb3     \cf10 \strokec10 userAgent\cf4 \cb1 \strokec4 \
\cb3   \};\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Determines the event type from the details string\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} details - Event details\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{string\} Event type\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 determineEventType\cf4 \strokec4 (\cf10 \strokec10 details\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 detailsLower\cf4 \strokec4  = (\cf10 \strokec10 details\cf4 \strokec4  || \cf8 \strokec8 ''\cf4 \strokec4 ).\cf10 \strokec10 toLowerCase\cf4 \strokec4 ();\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 detailsLower\cf4 \strokec4 .\cf10 \strokec10 includes\cf4 \strokec4 (\cf8 \strokec8 'login'\cf4 \strokec4 )) \{\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 EVENT_TYPES\cf4 \strokec4 .\cf6 \strokec6 LOGIN\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 detailsLower\cf4 \strokec4 .\cf10 \strokec10 includes\cf4 \strokec4 (\cf8 \strokec8 'logout'\cf4 \strokec4 )) \{\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 EVENT_TYPES\cf4 \strokec4 .\cf6 \strokec6 LOGOUT\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 detailsLower\cf4 \strokec4 .\cf10 \strokec10 includes\cf4 \strokec4 (\cf8 \strokec8 'session'\cf4 \strokec4 )) \{\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 EVENT_TYPES\cf4 \strokec4 .\cf6 \strokec6 SESSION\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 EVENT_TYPES\cf4 \strokec4 .\cf6 \strokec6 ACCESS\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Corrected event context handling\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Removes incorrect HtmlService.getCurrentRequest() usage\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Gets context information for the current event\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} Context information including user agent\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 getEventContext\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 let\cf4 \strokec4  \cf10 \strokec10 userAgent\cf4 \strokec4  = \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf7 \strokec7 // In Google Apps Script, we can only get limited context\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 // User agent can be accessed when serving HTML\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 userAgent\cf4 \strokec4  = \cf6 \strokec6 Session\cf4 \strokec4 .\cf10 \strokec10 getActiveUser\cf4 \strokec4 ().\cf10 \strokec10 getEmail\cf4 \strokec4 () || \cf8 \strokec8 ''\cf4 \strokec4 ;\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 e\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 warn\cf4 \strokec4 (\cf8 \strokec8 'Could not get user context:'\cf4 \strokec4 , \cf10 \strokec10 e\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3     \cf10 \strokec10 userAgent\cf4 \strokec4 ,\cb1 \
\cb3     \cf10 \strokec10 timestamp\cf4 \strokec4 : \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ().\cf10 \strokec10 toISOString\cf4 \strokec4 ()\cb1 \
\cb3   \};\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Logs authentication and access events - Corrected Version\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} username - Username involved in event\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{boolean\} success - Whether event was successful\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{string\} details - Additional event details\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{boolean\} Success status of logging\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 logAuthEvent\cf4 \strokec4 (\cf10 \strokec10 username\cf4 \strokec4 , \cf10 \strokec10 success\cf4 \strokec4 , \cf10 \strokec10 details\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf10 \strokec10 openById\cf4 \strokec4 (\cf6 \strokec6 CONFIG\cf4 \strokec4 .\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf10 \strokec10 logSheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 SHEET_NAME\cf4 \strokec4 );\cb1 \
\
\cb3     \cf7 \strokec7 // Create Auth Log sheet if it doesn't exist\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 logSheet\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf10 \strokec10 logSheet\cf4 \strokec4  = \cf10 \strokec10 createAuthLogSheet\cf4 \strokec4 (\cf10 \strokec10 ss\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf7 \strokec7 // Get event context (simplified)\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 eventContext\cf4 \strokec4  = \cf10 \strokec10 getEventContext\cf4 \strokec4 ();\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 // Determine event type from details\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 eventType\cf4 \strokec4  = \cf10 \strokec10 determineEventType\cf4 \strokec4 (\cf10 \strokec10 details\cf4 \strokec4 );\cb1 \
\
\cb3     \cf7 \strokec7 // Add log entry with available information\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 logEntry\cf4 \strokec4  = [\cb1 \
\cb3       \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (), \cf7 \strokec7 // Timestamp\cf4 \cb1 \strokec4 \
\cb3       \cf10 \strokec10 username\cf4 \strokec4  || \cf8 \strokec8 'Unknown'\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 eventType\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 success\cf4 \strokec4  ? \cf8 \strokec8 'Y'\cf4 \strokec4  : \cf8 \strokec8 'N'\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 details\cf4 \strokec4  || \cf8 \strokec8 ''\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 eventContext\cf4 \strokec4 .\cf10 \strokec10 userAgent\cf4 \strokec4 , \cf7 \strokec7 // User email instead of IP\cf4 \cb1 \strokec4 \
\cb3       \cf10 \strokec10 eventContext\cf4 \strokec4 .\cf10 \strokec10 timestamp\cf4 \strokec4   \cf7 \strokec7 // Timestamp instead of user agent\cf4 \cb1 \strokec4 \
\cb3     ];\cb1 \
\
\cb3     \cf7 \strokec7 // Add the log entry\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 logSheet\cf4 \strokec4 .\cf10 \strokec10 appendRow\cf4 \strokec4 (\cf10 \strokec10 logEntry\cf4 \strokec4 );\cb1 \
\
\cb3     \cf7 \strokec7 // Check if archiving is needed\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 currentRows\cf4 \strokec4  = \cf10 \strokec10 logSheet\cf4 \strokec4 .\cf10 \strokec10 getLastRow\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 currentRows\cf4 \strokec4  > \cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 MAX_ROWS\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf10 \strokec10 archiveAuthLogs\cf4 \strokec4 ();\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf7 \strokec7 // Log to console for debugging\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Auth event logged:'\cf4 \strokec4 , \{\cb1 \
\cb3       \cf10 \strokec10 username\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 eventType\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 success\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 details\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 context\cf4 \strokec4 : \cf10 \strokec10 eventContext\cf4 \cb1 \strokec4 \
\cb3     \});\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 true\cf4 \strokec4 ;\cb1 \
\
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error logging auth event:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 , \{\cb1 \
\cb3       \cf10 \strokec10 username\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 success\cf4 \strokec4 ,\cb1 \
\cb3       \cf10 \strokec10 details\cf4 \cb1 \strokec4 \
\cb3     \});\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 // Update AUTH_LOG_CONFIG columns to match new structure\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 SHEET_NAME\cf4 \strokec4 : \cf8 \strokec8 'Auth Log'\cf4 \strokec4 ,\cb1 \
\cb3   \cf6 \strokec6 COLUMNS\cf4 \strokec4 : \{\cb1 \
\cb3     \cf6 \strokec6 TIMESTAMP\cf4 \strokec4 : \cf9 \strokec9 0\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 USERNAME\cf4 \strokec4 : \cf9 \strokec9 1\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 EVENT_TYPE\cf4 \strokec4 : \cf9 \strokec9 2\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 SUCCESS\cf4 \strokec4 : \cf9 \strokec9 3\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 DETAILS\cf4 \strokec4 : \cf9 \strokec9 4\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 USER_EMAIL\cf4 \strokec4 : \cf9 \strokec9 5\cf4 \strokec4 ,  \cf7 \strokec7 // Changed from IP_ADDRESS\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 EVENT_TIME\cf4 \strokec4 : \cf9 \strokec9 6\cf4 \strokec4    \cf7 \strokec7 // Changed from USER_AGENT\cf4 \cb1 \strokec4 \
\cb3   \},\cb1 \
\cb3   \cf6 \strokec6 EVENT_TYPES\cf4 \strokec4 : \{\cb1 \
\cb3     \cf6 \strokec6 LOGIN\cf4 \strokec4 : \cf8 \strokec8 'Login'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 LOGOUT\cf4 \strokec4 : \cf8 \strokec8 'Logout'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 ACCESS\cf4 \strokec4 : \cf8 \strokec8 'Access'\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 SESSION\cf4 \strokec4 : \cf8 \strokec8 'Session'\cf4 \cb1 \strokec4 \
\cb3   \},\cb1 \
\cb3   \cf6 \strokec6 MAX_ROWS\cf4 \strokec4 : \cf9 \strokec9 10000\cf4 \strokec4 ,\cb1 \
\cb3   \cf6 \strokec6 COLUMN_WIDTHS\cf4 \strokec4 : \{\cb1 \
\cb3     \cf6 \strokec6 TIMESTAMP\cf4 \strokec4 : \cf9 \strokec9 180\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 USERNAME\cf4 \strokec4 : \cf9 \strokec9 150\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 EVENT_TYPE\cf4 \strokec4 : \cf9 \strokec9 120\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 DETAILS\cf4 \strokec4 : \cf9 \strokec9 300\cf4 \strokec4 ,\cb1 \
\cb3     \cf6 \strokec6 USER_EMAIL\cf4 \strokec4 : \cf9 \strokec9 200\cf4 \strokec4 ,    \cf7 \strokec7 // Adjusted width\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 EVENT_TIME\cf4 \strokec4 : \cf9 \strokec9 180\cf4 \strokec4      \cf7 \strokec7 // Adjusted width\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Creates the Auth Log sheet with proper structure - Updated Version\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @param \{Spreadsheet\} ss - Spreadsheet object\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Sheet\} The created sheet\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 createAuthLogSheet\cf4 \strokec4 (\cf10 \strokec10 ss\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 insertSheet\cf4 \strokec4 (\cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 SHEET_NAME\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf7 \strokec7 // Set up headers with corrected column names\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 headers\cf4 \strokec4  = [\cb1 \
\cb3     \cf8 \strokec8 'Timestamp'\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 'Username'\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 'Event Type'\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 'Success'\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 'Details'\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 'User Email'\cf4 \strokec4 ,     \cf7 \strokec7 // Updated header\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 'Event Time'\cf4 \strokec4       \cf7 \strokec7 // Updated header\cf4 \cb1 \strokec4 \
\cb3   ];\cb1 \
\
\cb3   \cf7 \strokec7 // Apply header formatting\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 headerRange\cf4 \strokec4  = \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf10 \strokec10 headers\cf4 \strokec4 .\cf10 \strokec10 length\cf4 \strokec4 );\cb1 \
\cb3   \cf10 \strokec10 headerRange\cf4 \cb1 \strokec4 \
\cb3     .\cf10 \strokec10 setValues\cf4 \strokec4 ([\cf10 \strokec10 headers\cf4 \strokec4 ])\cb1 \
\cb3     .\cf10 \strokec10 setFontWeight\cf4 \strokec4 (\cf8 \strokec8 'bold'\cf4 \strokec4 )\cb1 \
\cb3     .\cf10 \strokec10 setBackground\cf4 \strokec4 (\cf8 \strokec8 '#E8EAED'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Set frozen rows\cf4 \cb1 \strokec4 \
\cb3   \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 setFrozenRows\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Set column widths\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 Object\cf4 \strokec4 .\cf10 \strokec10 entries\cf4 \strokec4 (\cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMN_WIDTHS\cf4 \strokec4 ).\cf10 \strokec10 forEach\cf4 \strokec4 (([\cf10 \strokec10 col\cf4 \strokec4 , \cf10 \strokec10 width\cf4 \strokec4 ], \cf10 \strokec10 index\cf4 \strokec4 ) => \{\cb1 \
\cb3     \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 setColumnWidth\cf4 \strokec4 (\cf10 \strokec10 index\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 , \cf10 \strokec10 width\cf4 \strokec4 );\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf7 \strokec7 // Add data validation for Success column\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 successRule\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf10 \strokec10 newDataValidation\cf4 \strokec4 ()\cb1 \
\cb3     .\cf10 \strokec10 requireValueInList\cf4 \strokec4 ([\cf8 \strokec8 'Y'\cf4 \strokec4 , \cf8 \strokec8 'N'\cf4 \strokec4 ])\cb1 \
\cb3     .\cf10 \strokec10 build\cf4 \strokec4 ();\cb1 \
\cb3   \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getRange\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 SUCCESS\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 , \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getMaxRows\cf4 \strokec4 () - \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3     .\cf10 \strokec10 setDataValidation\cf4 \strokec4 (\cf10 \strokec10 successRule\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Add data validation for Event Type column\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 eventTypeRule\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf10 \strokec10 newDataValidation\cf4 \strokec4 ()\cb1 \
\cb3     .\cf10 \strokec10 requireValueInList\cf4 \strokec4 (\cf6 \strokec6 Object\cf4 \strokec4 .\cf10 \strokec10 values\cf4 \strokec4 (\cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 EVENT_TYPES\cf4 \strokec4 ))\cb1 \
\cb3     .\cf10 \strokec10 build\cf4 \strokec4 ();\cb1 \
\cb3   \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getRange\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf6 \strokec6 AUTH_LOG_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 EVENT_TYPE\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 , \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getMaxRows\cf4 \strokec4 () - \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3     .\cf10 \strokec10 setDataValidation\cf4 \strokec4 (\cf10 \strokec10 eventTypeRule\cf4 \strokec4 );\cb1 \
\
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 sheet\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 getCurrentUser\cf4 \strokec4 (\cf10 \strokec10 sessionId\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Getting current user for session:'\cf4 \strokec4 , \cf10 \strokec10 sessionId\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3         \cf7 \strokec7 // First try session ID if provided\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 sessionId\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Validating provided session ID'\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sheetSession\cf4 \strokec4  = \cf10 \strokec10 validateSession\cf4 \strokec4 (\cf10 \strokec10 sessionId\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 sheetSession\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Found valid sheet session for:'\cf4 \strokec4 , \cf10 \strokec10 sheetSession\cf4 \strokec4 .\cf10 \strokec10 username\cf4 \strokec4 );\cb1 \
\cb3                 \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 sheetSession\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\cb3             \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Sheet session validation failed'\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf7 \strokec7 // Fall back to cache-based session\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 userCache\cf4 \strokec4  = \cf6 \strokec6 CacheService\cf4 \strokec4 .\cf10 \strokec10 getUserCache\cf4 \strokec4 ();\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sessionData\cf4 \strokec4  = \cf10 \strokec10 userCache\cf4 \strokec4 .\cf5 \strokec5 get\cf4 \strokec4 (\cf8 \strokec8 'userSession'\cf4 \strokec4 );\cb1 \
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Checking cache-based session'\cf4 \strokec4 );\cb1 \
\
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 sessionData\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 session\cf4 \strokec4  = \cf6 \strokec6 JSON\cf4 \strokec4 .\cf10 \strokec10 parse\cf4 \strokec4 (\cf10 \strokec10 sessionData\cf4 \strokec4 );\cb1 \
\cb3             \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Found cached session for:'\cf4 \strokec4 , \cf10 \strokec10 session\cf4 \strokec4 .\cf10 \strokec10 username\cf4 \strokec4 );\cb1 \
\cb3             \cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sessionTime\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf10 \strokec10 session\cf4 \strokec4 .\cf10 \strokec10 timestamp\cf4 \strokec4 ).\cf10 \strokec10 getTime\cf4 \strokec4 ();\cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 currentTime\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ().\cf10 \strokec10 getTime\cf4 \strokec4 ();\cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 hoursSinceSession\cf4 \strokec4  = (\cf10 \strokec10 currentTime\cf4 \strokec4  - \cf10 \strokec10 sessionTime\cf4 \strokec4 ) / (\cf9 \strokec9 1000\cf4 \strokec4  * \cf9 \strokec9 60\cf4 \strokec4  * \cf9 \strokec9 60\cf4 \strokec4 );\cb1 \
\
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 hoursSinceSession\cf4 \strokec4  <= \cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 SESSION_DURATION\cf4 \strokec4  / \cf9 \strokec9 60\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Using valid cached session'\cf4 \strokec4 );\cb1 \
\cb3                 \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3                     \cf10 \strokec10 username\cf4 \strokec4 : \cf10 \strokec10 session\cf4 \strokec4 .\cf10 \strokec10 username\cf4 \strokec4 ,\cb1 \
\cb3                     \cf10 \strokec10 role\cf4 \strokec4 : \cf10 \strokec10 session\cf4 \strokec4 .\cf10 \strokec10 role\cf4 \strokec4 ,\cb1 \
\cb3                     \cf10 \strokec10 email\cf4 \strokec4 : \cf6 \strokec6 Session\cf4 \strokec4 .\cf10 \strokec10 getActiveUser\cf4 \strokec4 ().\cf10 \strokec10 getEmail\cf4 \strokec4 ()\cb1 \
\cb3                 \};\cb1 \
\cb3             \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3                 \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Cached session expired'\cf4 \strokec4 );\cb1 \
\cb3                 \cf10 \strokec10 userCache\cf4 \strokec4 .\cf10 \strokec10 remove\cf4 \strokec4 (\cf8 \strokec8 'userSession'\cf4 \strokec4 );\cb1 \
\cb3             \}\cb1 \
\cb3         \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3             \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'No cached session found'\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'No valid session found'\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3     \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error in getCurrentUser:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 // Helper function to validate sheet-based session\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 validateSession\cf4 \strokec4 (\cf10 \strokec10 sessionId\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Validating session:'\cf4 \strokec4 , \cf10 \strokec10 sessionId\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 sessionId\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf10 \strokec10 openById\cf4 \strokec4 (\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sheet\cf4 \strokec4  = \cf10 \strokec10 ss\cf4 \strokec4 .\cf10 \strokec10 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 SHEET_NAME\cf4 \strokec4 );\cb1 \
\
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 sheet\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Session sheet not found'\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 data\cf4 \strokec4  = \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getDataRange\cf4 \strokec4 ().\cf10 \strokec10 getValues\cf4 \strokec4 ();\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sessions\cf4 \strokec4  = \cf10 \strokec10 data\cf4 \strokec4 .\cf10 \strokec10 slice\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 ); \cf7 \strokec7 // Skip header row\cf4 \cb1 \strokec4 \
\
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Looking for session in sheet'\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sessionIndex\cf4 \strokec4  = \cf10 \strokec10 sessions\cf4 \strokec4 .\cf10 \strokec10 findIndex\cf4 \strokec4 (\cf10 \strokec10 row\cf4 \strokec4  =>\cb1 \
\cb3             \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 SESSION_ID\cf4 \strokec4 ] === \cf10 \strokec10 sessionId\cf4 \strokec4  &&\cb1 \
\cb3             \cf10 \strokec10 row\cf4 \strokec4 [\cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 STATUS\cf4 \strokec4 ] === \cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 STATUS\cf4 \strokec4 .\cf6 \strokec6 ACTIVE\cf4 \cb1 \strokec4 \
\cb3         );\cb1 \
\
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 sessionIndex\cf4 \strokec4  === -\cf9 \strokec9 1\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Session not found or not active'\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 session\cf4 \strokec4  = \cf10 \strokec10 sessions\cf4 \strokec4 [\cf10 \strokec10 sessionIndex\cf4 \strokec4 ];\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 lastActivity\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf10 \strokec10 session\cf4 \strokec4 [\cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 LAST_ACTIVITY\cf4 \strokec4 ]);\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 now\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ();\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 inactiveMinutes\cf4 \strokec4  = (\cf10 \strokec10 now\cf4 \strokec4  - \cf10 \strokec10 lastActivity\cf4 \strokec4 ) / (\cf9 \strokec9 1000\cf4 \strokec4  * \cf9 \strokec9 60\cf4 \strokec4 );\cb1 \
\
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 inactiveMinutes\cf4 \strokec4  > \cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 INACTIVITY_TIMEOUT\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Session expired due to inactivity'\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sessionRow\cf4 \strokec4  = \cf10 \strokec10 sessionIndex\cf4 \strokec4  + \cf9 \strokec9 2\cf4 \strokec4 ;\cb1 \
\cb3             \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getRange\cf4 \strokec4 (\cf10 \strokec10 sessionRow\cf4 \strokec4 , \cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 STATUS\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3                 .\cf10 \strokec10 setValue\cf4 \strokec4 (\cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 STATUS\cf4 \strokec4 .\cf6 \strokec6 EXPIRED\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf7 \strokec7 // Update last activity\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 sessionRow\cf4 \strokec4  = \cf10 \strokec10 sessionIndex\cf4 \strokec4  + \cf9 \strokec9 2\cf4 \strokec4 ;\cb1 \
\cb3         \cf10 \strokec10 sheet\cf4 \strokec4 .\cf10 \strokec10 getRange\cf4 \strokec4 (\cf10 \strokec10 sessionRow\cf4 \strokec4 , \cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 LAST_ACTIVITY\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3             .\cf10 \strokec10 setValue\cf4 \strokec4 (\cf10 \strokec10 now\cf4 \strokec4 );\cb1 \
\
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Session validated successfully'\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3             \cf10 \strokec10 username\cf4 \strokec4 : \cf10 \strokec10 session\cf4 \strokec4 [\cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 USERNAME\cf4 \strokec4 ],\cb1 \
\cb3             \cf10 \strokec10 email\cf4 \strokec4 : \cf10 \strokec10 session\cf4 \strokec4 [\cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 EMAIL\cf4 \strokec4 ],\cb1 \
\cb3             \cf10 \strokec10 role\cf4 \strokec4 : \cf10 \strokec10 session\cf4 \strokec4 [\cf6 \strokec6 SESSION_CONFIG\cf4 \strokec4 .\cf6 \strokec6 COLUMNS\cf4 \strokec4 .\cf6 \strokec6 ROLE\cf4 \strokec4 ],\cb1 \
\cb3             \cf10 \strokec10 lastActivity\cf4 \strokec4 : \cf10 \strokec10 now\cf4 \cb1 \strokec4 \
\cb3         \};\cb1 \
\
\cb3     \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Session validation error:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 null\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /**\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Gets redirect URL for secure navigation\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @returns \{Object\} Object containing URL and timestamp\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 getRedirectUrl\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 baseUrl\cf4 \strokec4  = \cf6 \strokec6 ScriptApp\cf4 \strokec4 .\cf10 \strokec10 getService\cf4 \strokec4 ().\cf10 \strokec10 getUrl\cf4 \strokec4 ();\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 webAppUrl\cf4 \strokec4  = \cf6 \strokec6 ScriptApp\cf4 \strokec4 .\cf10 \strokec10 getService\cf4 \strokec4 ()\cb1 \
\cb3             .\cf10 \strokec10 getUrl\cf4 \strokec4 ()\cb1 \
\cb3             .\cf10 \strokec10 replace\cf4 \strokec4 (\cf8 \strokec8 '/exec'\cf4 \strokec4 , \cf8 \strokec8 '/dev'\cf4 \strokec4 ); \cf7 \strokec7 // Use /dev for development, /exec for production\cf4 \cb1 \strokec4 \
\cb3             \cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  \{\cb1 \
\cb3             \cf10 \strokec10 url\cf4 \strokec4 : \cf10 \strokec10 webAppUrl\cf4 \strokec4 ,\cb1 \
\cb3             \cf10 \strokec10 timestamp\cf4 \strokec4 : \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ().\cf10 \strokec10 getTime\cf4 \strokec4 ()\cb1 \
\cb3         \};\cb1 \
\cb3     \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error getting redirect URL:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf8 \strokec8 'Failed to generate redirect URL'\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 handleLogin\cf4 \strokec4 (\cf10 \strokec10 event\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 event\cf4 \strokec4 .\cf10 \strokec10 preventDefault\cf4 \strokec4 ();\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 isLoginInProgress\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Login already in progress'\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Starting login process'\cf4 \strokec4 );\cb1 \
\cb3     \cf10 \strokec10 isLoginInProgress\cf4 \strokec4  = \cf5 \strokec5 true\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf7 \strokec7 // Check if SessionUtils is available\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf5 \strokec5 typeof\cf4 \strokec4  \cf6 \strokec6 SessionUtils\cf4 \strokec4  === \cf8 \strokec8 'undefined'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'SessionUtils not loaded'\cf4 \strokec4 );\cb1 \
\cb3         \cf10 \strokec10 showError\cf4 \strokec4 (\cf8 \strokec8 'Session management system not loaded. Please refresh the page.'\cf4 \strokec4 );\cb1 \
\cb3         \cf10 \strokec10 isLoginInProgress\cf4 \strokec4  = \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 username\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 'username'\cf4 \strokec4 ).\cf10 \strokec10 value\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 password\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 'password'\cf4 \strokec4 ).\cf10 \strokec10 value\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 errorDiv\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 'error'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 loadingDiv\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 'loading'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 loginButton\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 'loginButton'\cf4 \strokec4 );\cb1 \
\
\cb3     \cf7 \strokec7 // Clear previous errors and show loading\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 errorDiv\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 add\cf4 \strokec4 (\cf8 \strokec8 'hidden'\cf4 \strokec4 );\cb1 \
\cb3     \cf10 \strokec10 loadingDiv\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 remove\cf4 \strokec4 (\cf8 \strokec8 'hidden'\cf4 \strokec4 );\cb1 \
\cb3     \cf10 \strokec10 loginButton\cf4 \strokec4 .\cf10 \strokec10 disabled\cf4 \strokec4  = \cf5 \strokec5 true\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf7 \strokec7 // First step: Verify user credentials\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 google\cf4 \strokec4 .\cf10 \strokec10 script\cf4 \strokec4 .\cf10 \strokec10 run\cf4 \cb1 \strokec4 \
\cb3         .\cf10 \strokec10 withFailureHandler\cf4 \strokec4 (\cf10 \strokec10 handleLoginError\cf4 \strokec4 )\cb1 \
\cb3         .\cf10 \strokec10 withSuccessHandler\cf4 \strokec4 (\cf10 \strokec10 handleLoginSuccess\cf4 \strokec4 )\cb1 \
\cb3         .\cf10 \strokec10 verifyUser\cf4 \strokec4 (\cf10 \strokec10 username\cf4 \strokec4 , \cf10 \strokec10 password\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 handleLoginError\cf4 \strokec4 (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Login failed:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3         \cf10 \strokec10 showError\cf4 \strokec4 (\cf10 \strokec10 error\cf4 \strokec4 .\cf10 \strokec10 message\cf4 \strokec4  || \cf8 \strokec8 'Login failed. Please try again.'\cf4 \strokec4 );\cb1 \
\cb3         \cf10 \strokec10 loadingDiv\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 add\cf4 \strokec4 (\cf8 \strokec8 'hidden'\cf4 \strokec4 );\cb1 \
\cb3         \cf10 \strokec10 loginButton\cf4 \strokec4 .\cf10 \strokec10 disabled\cf4 \strokec4  = \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3         \cf10 \strokec10 isLoginInProgress\cf4 \strokec4  = \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 handleLoginSuccess\cf4 \strokec4 (\cf10 \strokec10 result\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Received authentication response'\cf4 \strokec4 );\cb1 \
\
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 result\cf4 \strokec4 .\cf10 \strokec10 success\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf10 \strokec10 handleLoginError\cf4 \strokec4 (\cf10 \strokec10 result\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3             \cf7 \strokec7 // Store session ID using SessionUtils\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 result\cf4 \strokec4 .\cf10 \strokec10 sessionId\cf4 \strokec4  && \cf5 \strokec5 typeof\cf4 \strokec4  \cf6 \strokec6 SessionUtils\cf4 \strokec4  !== \cf8 \strokec8 'undefined'\cf4 \strokec4 ) \{\cb1 \
\cb3                 \cf6 \strokec6 SessionUtils\cf4 \strokec4 .\cf10 \strokec10 setSessionId\cf4 \strokec4 (\cf10 \strokec10 result\cf4 \strokec4 .\cf10 \strokec10 sessionId\cf4 \strokec4 );\cb1 \
\cb3                 \cb1 \
\cb3                 \cf7 \strokec7 // Get redirect URL and handle navigation\cf4 \cb1 \strokec4 \
\cb3                 \cf10 \strokec10 google\cf4 \strokec4 .\cf10 \strokec10 script\cf4 \strokec4 .\cf10 \strokec10 run\cf4 \cb1 \strokec4 \
\cb3                     .\cf10 \strokec10 withSuccessHandler\cf4 \strokec4 (\cf5 \strokec5 function\cf4 \strokec4 (\cf10 \strokec10 redirectInfo\cf4 \strokec4 ) \{\cb1 \
\cb3                         \cf5 \strokec5 if\cf4 \strokec4  (!\cf10 \strokec10 redirectInfo\cf4 \strokec4  || !\cf10 \strokec10 redirectInfo\cf4 \strokec4 .\cf10 \strokec10 url\cf4 \strokec4 ) \{\cb1 \
\cb3                             \cf10 \strokec10 handleLoginError\cf4 \strokec4 (\{ \cf10 \strokec10 message\cf4 \strokec4 : \cf8 \strokec8 'Failed to get redirect URL'\cf4 \strokec4  \});\cb1 \
\cb3                             \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\cb3                         \}\cb1 \
\
\cb3                         \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3                             \cf5 \strokec5 let\cf4 \strokec4  \cf10 \strokec10 redirectUrl\cf4 \strokec4  = \cf10 \strokec10 redirectInfo\cf4 \strokec4 .\cf10 \strokec10 url\cf4 \strokec4 ;\cb1 \
\cb3                             \cb1 \
\cb3                             \cf7 \strokec7 // Append session ID to URL if SessionUtils is available\cf4 \cb1 \strokec4 \
\cb3                             \cf5 \strokec5 if\cf4 \strokec4  (\cf5 \strokec5 typeof\cf4 \strokec4  \cf6 \strokec6 SessionUtils\cf4 \strokec4  !== \cf8 \strokec8 'undefined'\cf4 \strokec4 ) \{\cb1 \
\cb3                                 \cf10 \strokec10 redirectUrl\cf4 \strokec4  = \cf6 \strokec6 SessionUtils\cf4 \strokec4 .\cf10 \strokec10 appendSessionToUrl\cf4 \strokec4 (\cf10 \strokec10 redirectUrl\cf4 \strokec4 );\cb1 \
\cb3                             \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3                                 \cf7 \strokec7 // Fallback: manually append session ID\cf4 \cb1 \strokec4 \
\cb3                                 \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 separator\cf4 \strokec4  = \cf10 \strokec10 redirectUrl\cf4 \strokec4 .\cf10 \strokec10 includes\cf4 \strokec4 (\cf8 \strokec8 '?'\cf4 \strokec4 ) ? \cf8 \strokec8 '&'\cf4 \strokec4  : \cf8 \strokec8 '?'\cf4 \strokec4 ;\cb1 \
\cb3                                 \cf10 \strokec10 redirectUrl\cf4 \strokec4  = \cf8 \strokec8 `\cf4 \strokec4 $\{\cf10 \strokec10 redirectUrl\cf4 \strokec4 \}$\{\cf10 \strokec10 separator\cf4 \strokec4 \}\cf8 \strokec8 sessionId=\cf4 \strokec4 $\{\cf10 \strokec10 encodeURIComponent\cf4 \strokec4 (\cf10 \strokec10 result\cf4 \strokec4 .\cf10 \strokec10 sessionId\cf4 \strokec4 )\}\cf8 \strokec8 `\cf4 \strokec4 ;\cb1 \
\cb3                             \}\cb1 \
\
\cb3                             \cf7 \strokec7 // Use the closeOrRedirect utility if available, otherwise direct navigation\cf4 \cb1 \strokec4 \
\cb3                             \cf5 \strokec5 if\cf4 \strokec4  (\cf5 \strokec5 typeof\cf4 \strokec4  \cf10 \strokec10 closeOrRedirect\cf4 \strokec4  !== \cf8 \strokec8 'undefined'\cf4 \strokec4 ) \{\cb1 \
\cb3                                 \cf10 \strokec10 closeOrRedirect\cf4 \strokec4 (\cf10 \strokec10 redirectUrl\cf4 \strokec4 );\cb1 \
\cb3                             \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3                                 \cf7 \strokec7 // Fallback navigation\cf4 \cb1 \strokec4 \
\cb3                                 \cf5 \strokec5 if\cf4 \strokec4  (\cf10 \strokec10 google\cf4 \strokec4 .\cf10 \strokec10 script\cf4 \strokec4 .\cf10 \strokec10 host\cf4 \strokec4 ) \{\cb1 \
\cb3                                     \cf10 \strokec10 google\cf4 \strokec4 .\cf10 \strokec10 script\cf4 \strokec4 .\cf10 \strokec10 host\cf4 \strokec4 .\cf10 \strokec10 close\cf4 \strokec4 ();\cb1 \
\cb3                                 \}\cb1 \
\cb3                                 \cf10 \strokec10 window\cf4 \strokec4 .\cf10 \strokec10 top\cf4 \strokec4 .\cf10 \strokec10 location\cf4 \strokec4 .\cf10 \strokec10 href\cf4 \strokec4  = \cf10 \strokec10 redirectUrl\cf4 \strokec4 ;\cb1 \
\cb3                             \}\cb1 \
\cb3                         \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 e\cf4 \strokec4 ) \{\cb1 \
\cb3                             \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error during navigation:'\cf4 \strokec4 , \cf10 \strokec10 e\cf4 \strokec4 );\cb1 \
\cb3                             \cf10 \strokec10 handleLoginError\cf4 \strokec4 (\{ \cf10 \strokec10 message\cf4 \strokec4 : \cf8 \strokec8 'Navigation error occurred'\cf4 \strokec4  \});\cb1 \
\cb3                         \}\cb1 \
\cb3                     \})\cb1 \
\cb3                     .\cf10 \strokec10 withFailureHandler\cf4 \strokec4 (\cf5 \strokec5 function\cf4 \strokec4 (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3                         \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Redirect URL request failed:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3                         \cf10 \strokec10 handleLoginError\cf4 \strokec4 (\{ \cf10 \strokec10 message\cf4 \strokec4 : \cf8 \strokec8 'Failed to complete login process'\cf4 \strokec4  \});\cb1 \
\cb3                     \})\cb1 \
\cb3                     .\cf10 \strokec10 getRedirectUrl\cf4 \strokec4 ();\cb1 \
\cb3             \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3                 \cf10 \strokec10 handleLoginError\cf4 \strokec4 (\{ \cf10 \strokec10 message\cf4 \strokec4 : \cf8 \strokec8 'Session management not available'\cf4 \strokec4  \});\cb1 \
\cb3             \}\cb1 \
\cb3         \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf10 \strokec10 e\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Error during login success handling:'\cf4 \strokec4 , \cf10 \strokec10 e\cf4 \strokec4 );\cb1 \
\cb3             \cf10 \strokec10 handleLoginError\cf4 \strokec4 (\{ \cf10 \strokec10 message\cf4 \strokec4 : \cf8 \strokec8 'Error during login process'\cf4 \strokec4  \});\cb1 \
\cb3         \}\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 handleLoginError\cf4 \strokec4 (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 log\cf4 \strokec4 (\cf8 \strokec8 'Login failed:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 errorDiv\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 'error'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 loadingDiv\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 'loading'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 loginButton\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 'loginButton'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Show error message\cf4 \cb1 \strokec4 \
\cb3   \cf10 \strokec10 errorDiv\cf4 \strokec4 .\cf10 \strokec10 textContent\cf4 \strokec4  = \cf10 \strokec10 error\cf4 \strokec4 .\cf10 \strokec10 message\cf4 \strokec4  || \cf8 \strokec8 'Login failed. Please try again.'\cf4 \strokec4 ;\cb1 \
\cb3   \cf10 \strokec10 errorDiv\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 remove\cf4 \strokec4 (\cf8 \strokec8 'hidden'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Hide loading and re-enable button\cf4 \cb1 \strokec4 \
\cb3   \cf10 \strokec10 loadingDiv\cf4 \strokec4 .\cf10 \strokec10 classList\cf4 \strokec4 .\cf10 \strokec10 add\cf4 \strokec4 (\cf8 \strokec8 'hidden'\cf4 \strokec4 );\cb1 \
\cb3   \cf10 \strokec10 loginButton\cf4 \strokec4 .\cf10 \strokec10 disabled\cf4 \strokec4  = \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3   \cf10 \strokec10 isLoginInProgress\cf4 \strokec4  = \cf5 \strokec5 false\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 // Load user options using google.script.run\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf10 \strokec10 loadUserOptions\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf10 \strokec10 google\cf4 \strokec4 .\cf10 \strokec10 script\cf4 \strokec4 .\cf10 \strokec10 run\cf4 \cb1 \strokec4 \
\cb3     .\cf10 \strokec10 withFailureHandler\cf4 \strokec4 (\cf5 \strokec5 function\cf4 \strokec4 (\cf10 \strokec10 error\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf10 \strokec10 console\cf4 \strokec4 .\cf10 \strokec10 error\cf4 \strokec4 (\cf8 \strokec8 'Failed to load users:'\cf4 \strokec4 , \cf10 \strokec10 error\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 errorOption\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 createElement\cf4 \strokec4 (\cf8 \strokec8 'option'\cf4 \strokec4 );\cb1 \
\cb3       \cf10 \strokec10 errorOption\cf4 \strokec4 .\cf10 \strokec10 text\cf4 \strokec4  = \cf8 \strokec8 'Error loading users'\cf4 \strokec4 ;\cb1 \
\cb3       \cf10 \strokec10 errorOption\cf4 \strokec4 .\cf10 \strokec10 disabled\cf4 \strokec4  = \cf5 \strokec5 true\cf4 \strokec4 ;\cb1 \
\cb3       \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 'username'\cf4 \strokec4 ).\cf10 \strokec10 add\cf4 \strokec4 (\cf10 \strokec10 errorOption\cf4 \strokec4 );\cb1 \
\cb3     \})\cb1 \
\cb3     .\cf10 \strokec10 withSuccessHandler\cf4 \strokec4 (\cf5 \strokec5 function\cf4 \strokec4 (\cf10 \strokec10 users\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 select\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 getElementById\cf4 \strokec4 (\cf8 \strokec8 'username'\cf4 \strokec4 );\cb1 \
\cb3       \cf7 \strokec7 // Clear existing options except default\cf4 \cb1 \strokec4 \
\cb3       \cf5 \strokec5 while\cf4 \strokec4  (\cf10 \strokec10 select\cf4 \strokec4 .\cf10 \strokec10 options\cf4 \strokec4 .\cf10 \strokec10 length\cf4 \strokec4  > \cf9 \strokec9 1\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf10 \strokec10 select\cf4 \strokec4 .\cf10 \strokec10 remove\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\cb3       \}\cb1 \
\cb3       \cf7 \strokec7 // Add user options\cf4 \cb1 \strokec4 \
\cb3       \cf10 \strokec10 users\cf4 \strokec4 .\cf10 \strokec10 forEach\cf4 \strokec4 (\cf5 \strokec5 function\cf4 \strokec4 (\cf10 \strokec10 user\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf10 \strokec10 option\cf4 \strokec4  = \cf10 \strokec10 document\cf4 \strokec4 .\cf10 \strokec10 createElement\cf4 \strokec4 (\cf8 \strokec8 'option'\cf4 \strokec4 );\cb1 \
\cb3         \cf10 \strokec10 option\cf4 \strokec4 .\cf10 \strokec10 value\cf4 \strokec4  = \cf10 \strokec10 user\cf4 \strokec4 .\cf10 \strokec10 name\cf4 \strokec4 ;\cb1 \
\cb3         \cf10 \strokec10 option\cf4 \strokec4 .\cf10 \strokec10 text\cf4 \strokec4  = \cf10 \strokec10 user\cf4 \strokec4 .\cf10 \strokec10 name\cf4 \strokec4 ;\cb1 \
\cb3         \cf10 \strokec10 select\cf4 \strokec4 .\cf10 \strokec10 add\cf4 \strokec4 (\cf10 \strokec10 option\cf4 \strokec4 );\cb1 \
\cb3       \});\cb1 \
\cb3     \})\cb1 \
\cb3     .\cf10 \strokec10 getActiveRequestors\cf4 \strokec4 ();\cb1 \
\cb3 \}\cb1 \
\
\
}